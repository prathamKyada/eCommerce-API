
/**
 * Client
**/

import * as runtime from '@prisma/client/runtime/library.js';
import $Types = runtime.Types // general types
import $Public = runtime.Types.Public
import $Utils = runtime.Types.Utils
import $Extensions = runtime.Types.Extensions
import $Result = runtime.Types.Result

export type PrismaPromise<T> = $Public.PrismaPromise<T>


/**
 * Model company
 * 
 */
export type company = $Result.DefaultSelection<Prisma.$companyPayload>
/**
 * Model product_category
 * 
 */
export type product_category = $Result.DefaultSelection<Prisma.$product_categoryPayload>
/**
 * Model product_sub_category
 * 
 */
export type product_sub_category = $Result.DefaultSelection<Prisma.$product_sub_categoryPayload>
/**
 * Model product_details
 * 
 */
export type product_details = $Result.DefaultSelection<Prisma.$product_detailsPayload>
/**
 * Model registration_details
 * 
 */
export type registration_details = $Result.DefaultSelection<Prisma.$registration_detailsPayload>
/**
 * Model cart_details
 * 
 */
export type cart_details = $Result.DefaultSelection<Prisma.$cart_detailsPayload>
/**
 * Model buy_now
 * 
 */
export type buy_now = $Result.DefaultSelection<Prisma.$buy_nowPayload>
/**
 * Model user_address
 * 
 */
export type user_address = $Result.DefaultSelection<Prisma.$user_addressPayload>

/**
 * ##  Prisma Client ʲˢ
 * 
 * Type-safe database client for TypeScript & Node.js
 * @example
 * ```
 * const prisma = new PrismaClient()
 * // Fetch zero or more Companies
 * const companies = await prisma.company.findMany()
 * ```
 *
 * 
 * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
 */
export class PrismaClient<
  ClientOptions extends Prisma.PrismaClientOptions = Prisma.PrismaClientOptions,
  U = 'log' extends keyof ClientOptions ? ClientOptions['log'] extends Array<Prisma.LogLevel | Prisma.LogDefinition> ? Prisma.GetEvents<ClientOptions['log']> : never : never,
  ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs
> {
  [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['other'] }

    /**
   * ##  Prisma Client ʲˢ
   * 
   * Type-safe database client for TypeScript & Node.js
   * @example
   * ```
   * const prisma = new PrismaClient()
   * // Fetch zero or more Companies
   * const companies = await prisma.company.findMany()
   * ```
   *
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client).
   */

  constructor(optionsArg ?: Prisma.Subset<ClientOptions, Prisma.PrismaClientOptions>);
  $on<V extends U>(eventType: V, callback: (event: V extends 'query' ? Prisma.QueryEvent : Prisma.LogEvent) => void): void;

  /**
   * Connect with the database
   */
  $connect(): $Utils.JsPromise<void>;

  /**
   * Disconnect from the database
   */
  $disconnect(): $Utils.JsPromise<void>;

  /**
   * Add a middleware
   * @deprecated since 4.16.0. For new code, prefer client extensions instead.
   * @see https://pris.ly/d/extensions
   */
  $use(cb: Prisma.Middleware): void

/**
   * Executes a prepared raw query and returns the number of affected rows.
   * @example
   * ```
   * const result = await prisma.$executeRaw`UPDATE User SET cool = ${true} WHERE email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Executes a raw query and returns the number of affected rows.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$executeRawUnsafe('UPDATE User SET cool = $1 WHERE email = $2 ;', true, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $executeRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<number>;

  /**
   * Performs a prepared raw query and returns the `SELECT` data.
   * @example
   * ```
   * const result = await prisma.$queryRaw`SELECT * FROM User WHERE id = ${1} OR email = ${'user@email.com'};`
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRaw<T = unknown>(query: TemplateStringsArray | Prisma.Sql, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Performs a raw query and returns the `SELECT` data.
   * Susceptible to SQL injections, see documentation.
   * @example
   * ```
   * const result = await prisma.$queryRawUnsafe('SELECT * FROM User WHERE id = $1 OR email = $2;', 1, 'user@email.com')
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/raw-database-access).
   */
  $queryRawUnsafe<T = unknown>(query: string, ...values: any[]): Prisma.PrismaPromise<T>;

  /**
   * Allows the running of a sequence of read/write operations that are guaranteed to either succeed or fail as a whole.
   * @example
   * ```
   * const [george, bob, alice] = await prisma.$transaction([
   *   prisma.user.create({ data: { name: 'George' } }),
   *   prisma.user.create({ data: { name: 'Bob' } }),
   *   prisma.user.create({ data: { name: 'Alice' } }),
   * ])
   * ```
   * 
   * Read more in our [docs](https://www.prisma.io/docs/concepts/components/prisma-client/transactions).
   */
  $transaction<P extends Prisma.PrismaPromise<any>[]>(arg: [...P], options?: { isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<runtime.Types.Utils.UnwrapTuple<P>>

  $transaction<R>(fn: (prisma: Omit<PrismaClient, runtime.ITXClientDenyList>) => $Utils.JsPromise<R>, options?: { maxWait?: number, timeout?: number, isolationLevel?: Prisma.TransactionIsolationLevel }): $Utils.JsPromise<R>


  $extends: $Extensions.ExtendsHook<"extends", Prisma.TypeMapCb, ExtArgs>

      /**
   * `prisma.company`: Exposes CRUD operations for the **company** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Companies
    * const companies = await prisma.company.findMany()
    * ```
    */
  get company(): Prisma.companyDelegate<ExtArgs>;

  /**
   * `prisma.product_category`: Exposes CRUD operations for the **product_category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_categories
    * const product_categories = await prisma.product_category.findMany()
    * ```
    */
  get product_category(): Prisma.product_categoryDelegate<ExtArgs>;

  /**
   * `prisma.product_sub_category`: Exposes CRUD operations for the **product_sub_category** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_sub_categories
    * const product_sub_categories = await prisma.product_sub_category.findMany()
    * ```
    */
  get product_sub_category(): Prisma.product_sub_categoryDelegate<ExtArgs>;

  /**
   * `prisma.product_details`: Exposes CRUD operations for the **product_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Product_details
    * const product_details = await prisma.product_details.findMany()
    * ```
    */
  get product_details(): Prisma.product_detailsDelegate<ExtArgs>;

  /**
   * `prisma.registration_details`: Exposes CRUD operations for the **registration_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Registration_details
    * const registration_details = await prisma.registration_details.findMany()
    * ```
    */
  get registration_details(): Prisma.registration_detailsDelegate<ExtArgs>;

  /**
   * `prisma.cart_details`: Exposes CRUD operations for the **cart_details** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Cart_details
    * const cart_details = await prisma.cart_details.findMany()
    * ```
    */
  get cart_details(): Prisma.cart_detailsDelegate<ExtArgs>;

  /**
   * `prisma.buy_now`: Exposes CRUD operations for the **buy_now** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more Buy_nows
    * const buy_nows = await prisma.buy_now.findMany()
    * ```
    */
  get buy_now(): Prisma.buy_nowDelegate<ExtArgs>;

  /**
   * `prisma.user_address`: Exposes CRUD operations for the **user_address** model.
    * Example usage:
    * ```ts
    * // Fetch zero or more User_addresses
    * const user_addresses = await prisma.user_address.findMany()
    * ```
    */
  get user_address(): Prisma.user_addressDelegate<ExtArgs>;
}

export namespace Prisma {
  export import DMMF = runtime.DMMF

  export type PrismaPromise<T> = $Public.PrismaPromise<T>

  /**
   * Validator
   */
  export import validator = runtime.Public.validator

  /**
   * Prisma Errors
   */
  export import PrismaClientKnownRequestError = runtime.PrismaClientKnownRequestError
  export import PrismaClientUnknownRequestError = runtime.PrismaClientUnknownRequestError
  export import PrismaClientRustPanicError = runtime.PrismaClientRustPanicError
  export import PrismaClientInitializationError = runtime.PrismaClientInitializationError
  export import PrismaClientValidationError = runtime.PrismaClientValidationError
  export import NotFoundError = runtime.NotFoundError

  /**
   * Re-export of sql-template-tag
   */
  export import sql = runtime.sqltag
  export import empty = runtime.empty
  export import join = runtime.join
  export import raw = runtime.raw
  export import Sql = runtime.Sql

  /**
   * Decimal.js
   */
  export import Decimal = runtime.Decimal

  export type DecimalJsLike = runtime.DecimalJsLike

  /**
   * Metrics 
   */
  export type Metrics = runtime.Metrics
  export type Metric<T> = runtime.Metric<T>
  export type MetricHistogram = runtime.MetricHistogram
  export type MetricHistogramBucket = runtime.MetricHistogramBucket

  /**
  * Extensions
  */
  export import Extension = $Extensions.UserArgs
  export import getExtensionContext = runtime.Extensions.getExtensionContext
  export import Args = $Public.Args
  export import Payload = $Public.Payload
  export import Result = $Public.Result
  export import Exact = $Public.Exact

  /**
   * Prisma Client JS version: 5.17.0
   * Query Engine version: 393aa359c9ad4a4bb28630fb5613f9c281cde053
   */
  export type PrismaVersion = {
    client: string
  }

  export const prismaVersion: PrismaVersion 

  /**
   * Utility Types
   */

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON object.
   * This type can be useful to enforce some input to be JSON-compatible or as a super-type to be extended from. 
   */
  export type JsonObject = {[Key in string]?: JsonValue}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches a JSON array.
   */
  export interface JsonArray extends Array<JsonValue> {}

  /**
   * From https://github.com/sindresorhus/type-fest/
   * Matches any valid JSON value.
   */
  export type JsonValue = string | number | boolean | JsonObject | JsonArray | null

  /**
   * Matches a JSON object.
   * Unlike `JsonObject`, this type allows undefined and read-only properties.
   */
  export type InputJsonObject = {readonly [Key in string]?: InputJsonValue | null}

  /**
   * Matches a JSON array.
   * Unlike `JsonArray`, readonly arrays are assignable to this type.
   */
  export interface InputJsonArray extends ReadonlyArray<InputJsonValue | null> {}

  /**
   * Matches any valid value that can be used as an input for operations like
   * create and update as the value of a JSON field. Unlike `JsonValue`, this
   * type allows read-only arrays and read-only object properties and disallows
   * `null` at the top level.
   *
   * `null` cannot be used as the value of a JSON field because its meaning
   * would be ambiguous. Use `Prisma.JsonNull` to store the JSON null value or
   * `Prisma.DbNull` to clear the JSON value and set the field to the database
   * NULL value instead.
   *
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-by-null-values
   */
  export type InputJsonValue = string | number | boolean | InputJsonObject | InputJsonArray | { toJSON(): unknown }

  /**
   * Types of the values used to represent different kinds of `null` values when working with JSON fields.
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  namespace NullTypes {
    /**
    * Type of `Prisma.DbNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.DbNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class DbNull {
      private DbNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.JsonNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.JsonNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class JsonNull {
      private JsonNull: never
      private constructor()
    }

    /**
    * Type of `Prisma.AnyNull`.
    * 
    * You cannot use other instances of this class. Please use the `Prisma.AnyNull` value.
    * 
    * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
    */
    class AnyNull {
      private AnyNull: never
      private constructor()
    }
  }

  /**
   * Helper for filtering JSON entries that have `null` on the database (empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const DbNull: NullTypes.DbNull

  /**
   * Helper for filtering JSON entries that have JSON `null` values (not empty on the db)
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const JsonNull: NullTypes.JsonNull

  /**
   * Helper for filtering JSON entries that are `Prisma.DbNull` or `Prisma.JsonNull`
   * 
   * @see https://www.prisma.io/docs/concepts/components/prisma-client/working-with-fields/working-with-json-fields#filtering-on-a-json-field
   */
  export const AnyNull: NullTypes.AnyNull

  type SelectAndInclude = {
    select: any
    include: any
  }

  type SelectAndOmit = {
    select: any
    omit: any
  }

  /**
   * Get the type of the value, that the Promise holds.
   */
  export type PromiseType<T extends PromiseLike<any>> = T extends PromiseLike<infer U> ? U : T;

  /**
   * Get the return type of a function which returns a Promise.
   */
  export type PromiseReturnType<T extends (...args: any) => $Utils.JsPromise<any>> = PromiseType<ReturnType<T>>

  /**
   * From T, pick a set of properties whose keys are in the union K
   */
  type Prisma__Pick<T, K extends keyof T> = {
      [P in K]: T[P];
  };


  export type Enumerable<T> = T | Array<T>;

  export type RequiredKeys<T> = {
    [K in keyof T]-?: {} extends Prisma__Pick<T, K> ? never : K
  }[keyof T]

  export type TruthyKeys<T> = keyof {
    [K in keyof T as T[K] extends false | undefined | null ? never : K]: K
  }

  export type TrueKeys<T> = TruthyKeys<Prisma__Pick<T, RequiredKeys<T>>>

  /**
   * Subset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection
   */
  export type Subset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never;
  };

  /**
   * SelectSubset
   * @desc From `T` pick properties that exist in `U`. Simple version of Intersection.
   * Additionally, it validates, if both select and include are present. If the case, it errors.
   */
  export type SelectSubset<T, U> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    (T extends SelectAndInclude
      ? 'Please either choose `select` or `include`.'
      : T extends SelectAndOmit
        ? 'Please either choose `select` or `omit`.'
        : {})

  /**
   * Subset + Intersection
   * @desc From `T` pick properties that exist in `U` and intersect `K`
   */
  export type SubsetIntersection<T, U, K> = {
    [key in keyof T]: key extends keyof U ? T[key] : never
  } &
    K

  type Without<T, U> = { [P in Exclude<keyof T, keyof U>]?: never };

  /**
   * XOR is needed to have a real mutually exclusive union type
   * https://stackoverflow.com/questions/42123407/does-typescript-support-mutually-exclusive-types
   */
  type XOR<T, U> =
    T extends object ?
    U extends object ?
      (Without<T, U> & U) | (Without<U, T> & T)
    : U : T


  /**
   * Is T a Record?
   */
  type IsObject<T extends any> = T extends Array<any>
  ? False
  : T extends Date
  ? False
  : T extends Uint8Array
  ? False
  : T extends BigInt
  ? False
  : T extends object
  ? True
  : False


  /**
   * If it's T[], return T
   */
  export type UnEnumerate<T extends unknown> = T extends Array<infer U> ? U : T

  /**
   * From ts-toolbelt
   */

  type __Either<O extends object, K extends Key> = Omit<O, K> &
    {
      // Merge all but K
      [P in K]: Prisma__Pick<O, P & keyof O> // With K possibilities
    }[K]

  type EitherStrict<O extends object, K extends Key> = Strict<__Either<O, K>>

  type EitherLoose<O extends object, K extends Key> = ComputeRaw<__Either<O, K>>

  type _Either<
    O extends object,
    K extends Key,
    strict extends Boolean
  > = {
    1: EitherStrict<O, K>
    0: EitherLoose<O, K>
  }[strict]

  type Either<
    O extends object,
    K extends Key,
    strict extends Boolean = 1
  > = O extends unknown ? _Either<O, K, strict> : never

  export type Union = any

  type PatchUndefined<O extends object, O1 extends object> = {
    [K in keyof O]: O[K] extends undefined ? At<O1, K> : O[K]
  } & {}

  /** Helper Types for "Merge" **/
  export type IntersectOf<U extends Union> = (
    U extends unknown ? (k: U) => void : never
  ) extends (k: infer I) => void
    ? I
    : never

  export type Overwrite<O extends object, O1 extends object> = {
      [K in keyof O]: K extends keyof O1 ? O1[K] : O[K];
  } & {};

  type _Merge<U extends object> = IntersectOf<Overwrite<U, {
      [K in keyof U]-?: At<U, K>;
  }>>;

  type Key = string | number | symbol;
  type AtBasic<O extends object, K extends Key> = K extends keyof O ? O[K] : never;
  type AtStrict<O extends object, K extends Key> = O[K & keyof O];
  type AtLoose<O extends object, K extends Key> = O extends unknown ? AtStrict<O, K> : never;
  export type At<O extends object, K extends Key, strict extends Boolean = 1> = {
      1: AtStrict<O, K>;
      0: AtLoose<O, K>;
  }[strict];

  export type ComputeRaw<A extends any> = A extends Function ? A : {
    [K in keyof A]: A[K];
  } & {};

  export type OptionalFlat<O> = {
    [K in keyof O]?: O[K];
  } & {};

  type _Record<K extends keyof any, T> = {
    [P in K]: T;
  };

  // cause typescript not to expand types and preserve names
  type NoExpand<T> = T extends unknown ? T : never;

  // this type assumes the passed object is entirely optional
  type AtLeast<O extends object, K extends string> = NoExpand<
    O extends unknown
    ? | (K extends keyof O ? { [P in K]: O[P] } & O : O)
      | {[P in keyof O as P extends K ? K : never]-?: O[P]} & O
    : never>;

  type _Strict<U, _U = U> = U extends unknown ? U & OptionalFlat<_Record<Exclude<Keys<_U>, keyof U>, never>> : never;

  export type Strict<U extends object> = ComputeRaw<_Strict<U>>;
  /** End Helper Types for "Merge" **/

  export type Merge<U extends object> = ComputeRaw<_Merge<Strict<U>>>;

  /**
  A [[Boolean]]
  */
  export type Boolean = True | False

  // /**
  // 1
  // */
  export type True = 1

  /**
  0
  */
  export type False = 0

  export type Not<B extends Boolean> = {
    0: 1
    1: 0
  }[B]

  export type Extends<A1 extends any, A2 extends any> = [A1] extends [never]
    ? 0 // anything `never` is false
    : A1 extends A2
    ? 1
    : 0

  export type Has<U extends Union, U1 extends Union> = Not<
    Extends<Exclude<U1, U>, U1>
  >

  export type Or<B1 extends Boolean, B2 extends Boolean> = {
    0: {
      0: 0
      1: 1
    }
    1: {
      0: 1
      1: 1
    }
  }[B1][B2]

  export type Keys<U extends Union> = U extends unknown ? keyof U : never

  type Cast<A, B> = A extends B ? A : B;

  export const type: unique symbol;



  /**
   * Used by group by
   */

  export type GetScalarType<T, O> = O extends object ? {
    [P in keyof T]: P extends keyof O
      ? O[P]
      : never
  } : never

  type FieldPaths<
    T,
    U = Omit<T, '_avg' | '_sum' | '_count' | '_min' | '_max'>
  > = IsObject<T> extends True ? U : T

  type GetHavingFields<T> = {
    [K in keyof T]: Or<
      Or<Extends<'OR', K>, Extends<'AND', K>>,
      Extends<'NOT', K>
    > extends True
      ? // infer is only needed to not hit TS limit
        // based on the brilliant idea of Pierre-Antoine Mills
        // https://github.com/microsoft/TypeScript/issues/30188#issuecomment-478938437
        T[K] extends infer TK
        ? GetHavingFields<UnEnumerate<TK> extends object ? Merge<UnEnumerate<TK>> : never>
        : never
      : {} extends FieldPaths<T[K]>
      ? never
      : K
  }[keyof T]

  /**
   * Convert tuple to union
   */
  type _TupleToUnion<T> = T extends (infer E)[] ? E : never
  type TupleToUnion<K extends readonly any[]> = _TupleToUnion<K>
  type MaybeTupleToUnion<T> = T extends any[] ? TupleToUnion<T> : T

  /**
   * Like `Pick`, but additionally can also accept an array of keys
   */
  type PickEnumerable<T, K extends Enumerable<keyof T> | keyof T> = Prisma__Pick<T, MaybeTupleToUnion<K>>

  /**
   * Exclude all keys with underscores
   */
  type ExcludeUnderscoreKeys<T extends string> = T extends `_${string}` ? never : T


  export type FieldRef<Model, FieldType> = runtime.FieldRef<Model, FieldType>

  type FieldRefInputType<Model, FieldType> = Model extends never ? never : FieldRef<Model, FieldType>


  export const ModelName: {
    company: 'company',
    product_category: 'product_category',
    product_sub_category: 'product_sub_category',
    product_details: 'product_details',
    registration_details: 'registration_details',
    cart_details: 'cart_details',
    buy_now: 'buy_now',
    user_address: 'user_address'
  };

  export type ModelName = (typeof ModelName)[keyof typeof ModelName]


  export type Datasources = {
    db?: Datasource
  }

  interface TypeMapCb extends $Utils.Fn<{extArgs: $Extensions.InternalArgs, clientOptions: PrismaClientOptions }, $Utils.Record<string, any>> {
    returns: Prisma.TypeMap<this['params']['extArgs'], this['params']['clientOptions']>
  }

  export type TypeMap<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs, ClientOptions = {}> = {
    meta: {
      modelProps: "company" | "product_category" | "product_sub_category" | "product_details" | "registration_details" | "cart_details" | "buy_now" | "user_address"
      txIsolationLevel: Prisma.TransactionIsolationLevel
    }
    model: {
      company: {
        payload: Prisma.$companyPayload<ExtArgs>
        fields: Prisma.companyFieldRefs
        operations: {
          findUnique: {
            args: Prisma.companyFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.companyFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          findFirst: {
            args: Prisma.companyFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.companyFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          findMany: {
            args: Prisma.companyFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>[]
          }
          create: {
            args: Prisma.companyCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          createMany: {
            args: Prisma.companyCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.companyDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          update: {
            args: Prisma.companyUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          deleteMany: {
            args: Prisma.companyDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.companyUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.companyUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$companyPayload>
          }
          aggregate: {
            args: Prisma.CompanyAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCompany>
          }
          groupBy: {
            args: Prisma.companyGroupByArgs<ExtArgs>
            result: $Utils.Optional<CompanyGroupByOutputType>[]
          }
          count: {
            args: Prisma.companyCountArgs<ExtArgs>
            result: $Utils.Optional<CompanyCountAggregateOutputType> | number
          }
        }
      }
      product_category: {
        payload: Prisma.$product_categoryPayload<ExtArgs>
        fields: Prisma.product_categoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_categoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_categoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>
          }
          findFirst: {
            args: Prisma.product_categoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_categoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>
          }
          findMany: {
            args: Prisma.product_categoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>[]
          }
          create: {
            args: Prisma.product_categoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>
          }
          createMany: {
            args: Prisma.product_categoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_categoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>
          }
          update: {
            args: Prisma.product_categoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>
          }
          deleteMany: {
            args: Prisma.product_categoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_categoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_categoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_categoryPayload>
          }
          aggregate: {
            args: Prisma.Product_categoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_category>
          }
          groupBy: {
            args: Prisma.product_categoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_categoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_categoryCountArgs<ExtArgs>
            result: $Utils.Optional<Product_categoryCountAggregateOutputType> | number
          }
        }
      }
      product_sub_category: {
        payload: Prisma.$product_sub_categoryPayload<ExtArgs>
        fields: Prisma.product_sub_categoryFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_sub_categoryFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_sub_categoryFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>
          }
          findFirst: {
            args: Prisma.product_sub_categoryFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_sub_categoryFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>
          }
          findMany: {
            args: Prisma.product_sub_categoryFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>[]
          }
          create: {
            args: Prisma.product_sub_categoryCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>
          }
          createMany: {
            args: Prisma.product_sub_categoryCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_sub_categoryDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>
          }
          update: {
            args: Prisma.product_sub_categoryUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>
          }
          deleteMany: {
            args: Prisma.product_sub_categoryDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_sub_categoryUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_sub_categoryUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_sub_categoryPayload>
          }
          aggregate: {
            args: Prisma.Product_sub_categoryAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_sub_category>
          }
          groupBy: {
            args: Prisma.product_sub_categoryGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_sub_categoryGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_sub_categoryCountArgs<ExtArgs>
            result: $Utils.Optional<Product_sub_categoryCountAggregateOutputType> | number
          }
        }
      }
      product_details: {
        payload: Prisma.$product_detailsPayload<ExtArgs>
        fields: Prisma.product_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.product_detailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.product_detailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>
          }
          findFirst: {
            args: Prisma.product_detailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.product_detailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>
          }
          findMany: {
            args: Prisma.product_detailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>[]
          }
          create: {
            args: Prisma.product_detailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>
          }
          createMany: {
            args: Prisma.product_detailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.product_detailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>
          }
          update: {
            args: Prisma.product_detailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>
          }
          deleteMany: {
            args: Prisma.product_detailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.product_detailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.product_detailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$product_detailsPayload>
          }
          aggregate: {
            args: Prisma.Product_detailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateProduct_details>
          }
          groupBy: {
            args: Prisma.product_detailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Product_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.product_detailsCountArgs<ExtArgs>
            result: $Utils.Optional<Product_detailsCountAggregateOutputType> | number
          }
        }
      }
      registration_details: {
        payload: Prisma.$registration_detailsPayload<ExtArgs>
        fields: Prisma.registration_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.registration_detailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.registration_detailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>
          }
          findFirst: {
            args: Prisma.registration_detailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.registration_detailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>
          }
          findMany: {
            args: Prisma.registration_detailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>[]
          }
          create: {
            args: Prisma.registration_detailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>
          }
          createMany: {
            args: Prisma.registration_detailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.registration_detailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>
          }
          update: {
            args: Prisma.registration_detailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>
          }
          deleteMany: {
            args: Prisma.registration_detailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.registration_detailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.registration_detailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$registration_detailsPayload>
          }
          aggregate: {
            args: Prisma.Registration_detailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateRegistration_details>
          }
          groupBy: {
            args: Prisma.registration_detailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Registration_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.registration_detailsCountArgs<ExtArgs>
            result: $Utils.Optional<Registration_detailsCountAggregateOutputType> | number
          }
        }
      }
      cart_details: {
        payload: Prisma.$cart_detailsPayload<ExtArgs>
        fields: Prisma.cart_detailsFieldRefs
        operations: {
          findUnique: {
            args: Prisma.cart_detailsFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.cart_detailsFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          findFirst: {
            args: Prisma.cart_detailsFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.cart_detailsFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          findMany: {
            args: Prisma.cart_detailsFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>[]
          }
          create: {
            args: Prisma.cart_detailsCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          createMany: {
            args: Prisma.cart_detailsCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.cart_detailsDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          update: {
            args: Prisma.cart_detailsUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          deleteMany: {
            args: Prisma.cart_detailsDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.cart_detailsUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.cart_detailsUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$cart_detailsPayload>
          }
          aggregate: {
            args: Prisma.Cart_detailsAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateCart_details>
          }
          groupBy: {
            args: Prisma.cart_detailsGroupByArgs<ExtArgs>
            result: $Utils.Optional<Cart_detailsGroupByOutputType>[]
          }
          count: {
            args: Prisma.cart_detailsCountArgs<ExtArgs>
            result: $Utils.Optional<Cart_detailsCountAggregateOutputType> | number
          }
        }
      }
      buy_now: {
        payload: Prisma.$buy_nowPayload<ExtArgs>
        fields: Prisma.buy_nowFieldRefs
        operations: {
          findUnique: {
            args: Prisma.buy_nowFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.buy_nowFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>
          }
          findFirst: {
            args: Prisma.buy_nowFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.buy_nowFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>
          }
          findMany: {
            args: Prisma.buy_nowFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>[]
          }
          create: {
            args: Prisma.buy_nowCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>
          }
          createMany: {
            args: Prisma.buy_nowCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.buy_nowDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>
          }
          update: {
            args: Prisma.buy_nowUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>
          }
          deleteMany: {
            args: Prisma.buy_nowDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.buy_nowUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.buy_nowUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$buy_nowPayload>
          }
          aggregate: {
            args: Prisma.Buy_nowAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateBuy_now>
          }
          groupBy: {
            args: Prisma.buy_nowGroupByArgs<ExtArgs>
            result: $Utils.Optional<Buy_nowGroupByOutputType>[]
          }
          count: {
            args: Prisma.buy_nowCountArgs<ExtArgs>
            result: $Utils.Optional<Buy_nowCountAggregateOutputType> | number
          }
        }
      }
      user_address: {
        payload: Prisma.$user_addressPayload<ExtArgs>
        fields: Prisma.user_addressFieldRefs
        operations: {
          findUnique: {
            args: Prisma.user_addressFindUniqueArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload> | null
          }
          findUniqueOrThrow: {
            args: Prisma.user_addressFindUniqueOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>
          }
          findFirst: {
            args: Prisma.user_addressFindFirstArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload> | null
          }
          findFirstOrThrow: {
            args: Prisma.user_addressFindFirstOrThrowArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>
          }
          findMany: {
            args: Prisma.user_addressFindManyArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>[]
          }
          create: {
            args: Prisma.user_addressCreateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>
          }
          createMany: {
            args: Prisma.user_addressCreateManyArgs<ExtArgs>
            result: BatchPayload
          }
          delete: {
            args: Prisma.user_addressDeleteArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>
          }
          update: {
            args: Prisma.user_addressUpdateArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>
          }
          deleteMany: {
            args: Prisma.user_addressDeleteManyArgs<ExtArgs>
            result: BatchPayload
          }
          updateMany: {
            args: Prisma.user_addressUpdateManyArgs<ExtArgs>
            result: BatchPayload
          }
          upsert: {
            args: Prisma.user_addressUpsertArgs<ExtArgs>
            result: $Utils.PayloadToResult<Prisma.$user_addressPayload>
          }
          aggregate: {
            args: Prisma.User_addressAggregateArgs<ExtArgs>
            result: $Utils.Optional<AggregateUser_address>
          }
          groupBy: {
            args: Prisma.user_addressGroupByArgs<ExtArgs>
            result: $Utils.Optional<User_addressGroupByOutputType>[]
          }
          count: {
            args: Prisma.user_addressCountArgs<ExtArgs>
            result: $Utils.Optional<User_addressCountAggregateOutputType> | number
          }
        }
      }
    }
  } & {
    other: {
      payload: any
      operations: {
        $executeRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $executeRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
        $queryRawUnsafe: {
          args: [query: string, ...values: any[]],
          result: any
        }
        $queryRaw: {
          args: [query: TemplateStringsArray | Prisma.Sql, ...values: any[]],
          result: any
        }
      }
    }
  }
  export const defineExtension: $Extensions.ExtendsHook<"define", Prisma.TypeMapCb, $Extensions.DefaultArgs>
  export type DefaultPrismaClient = PrismaClient
  export type ErrorFormat = 'pretty' | 'colorless' | 'minimal'
  export interface PrismaClientOptions {
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasources?: Datasources
    /**
     * Overwrites the datasource url from your schema.prisma file
     */
    datasourceUrl?: string
    /**
     * @default "colorless"
     */
    errorFormat?: ErrorFormat
    /**
     * @example
     * ```
     * // Defaults to stdout
     * log: ['query', 'info', 'warn', 'error']
     * 
     * // Emit as events
     * log: [
     *   { emit: 'stdout', level: 'query' },
     *   { emit: 'stdout', level: 'info' },
     *   { emit: 'stdout', level: 'warn' }
     *   { emit: 'stdout', level: 'error' }
     * ]
     * ```
     * Read more in our [docs](https://www.prisma.io/docs/reference/tools-and-interfaces/prisma-client/logging#the-log-option).
     */
    log?: (LogLevel | LogDefinition)[]
    /**
     * The default values for transactionOptions
     * maxWait ?= 2000
     * timeout ?= 5000
     */
    transactionOptions?: {
      maxWait?: number
      timeout?: number
      isolationLevel?: Prisma.TransactionIsolationLevel
    }
  }


  /* Types for Logging */
  export type LogLevel = 'info' | 'query' | 'warn' | 'error'
  export type LogDefinition = {
    level: LogLevel
    emit: 'stdout' | 'event'
  }

  export type GetLogType<T extends LogLevel | LogDefinition> = T extends LogDefinition ? T['emit'] extends 'event' ? T['level'] : never : never
  export type GetEvents<T extends any> = T extends Array<LogLevel | LogDefinition> ?
    GetLogType<T[0]> | GetLogType<T[1]> | GetLogType<T[2]> | GetLogType<T[3]>
    : never

  export type QueryEvent = {
    timestamp: Date
    query: string
    params: string
    duration: number
    target: string
  }

  export type LogEvent = {
    timestamp: Date
    message: string
    target: string
  }
  /* End Types for Logging */


  export type PrismaAction =
    | 'findUnique'
    | 'findUniqueOrThrow'
    | 'findMany'
    | 'findFirst'
    | 'findFirstOrThrow'
    | 'create'
    | 'createMany'
    | 'createManyAndReturn'
    | 'update'
    | 'updateMany'
    | 'upsert'
    | 'delete'
    | 'deleteMany'
    | 'executeRaw'
    | 'queryRaw'
    | 'aggregate'
    | 'count'
    | 'runCommandRaw'
    | 'findRaw'
    | 'groupBy'

  /**
   * These options are being passed into the middleware as "params"
   */
  export type MiddlewareParams = {
    model?: ModelName
    action: PrismaAction
    args: any
    dataPath: string[]
    runInTransaction: boolean
  }

  /**
   * The `T` type makes sure, that the `return proceed` is not forgotten in the middleware implementation
   */
  export type Middleware<T = any> = (
    params: MiddlewareParams,
    next: (params: MiddlewareParams) => $Utils.JsPromise<T>,
  ) => $Utils.JsPromise<T>

  // tested in getLogLevel.test.ts
  export function getLogLevel(log: Array<LogLevel | LogDefinition>): LogLevel | undefined;

  /**
   * `PrismaClient` proxy available in interactive transactions.
   */
  export type TransactionClient = Omit<Prisma.DefaultPrismaClient, runtime.ITXClientDenyList>

  export type Datasource = {
    url?: string
  }

  /**
   * Count Types
   */


  /**
   * Count Type CompanyCountOutputType
   */

  export type CompanyCountOutputType = {
    product_details: number
  }

  export type CompanyCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_details?: boolean | CompanyCountOutputTypeCountProduct_detailsArgs
  }

  // Custom InputTypes
  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the CompanyCountOutputType
     */
    select?: CompanyCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * CompanyCountOutputType without action
   */
  export type CompanyCountOutputTypeCountProduct_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_detailsWhereInput
  }


  /**
   * Count Type Product_categoryCountOutputType
   */

  export type Product_categoryCountOutputType = {
    product_details: number
    product_sub_category: number
  }

  export type Product_categoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_details?: boolean | Product_categoryCountOutputTypeCountProduct_detailsArgs
    product_sub_category?: boolean | Product_categoryCountOutputTypeCountProduct_sub_categoryArgs
  }

  // Custom InputTypes
  /**
   * Product_categoryCountOutputType without action
   */
  export type Product_categoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product_categoryCountOutputType
     */
    select?: Product_categoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Product_categoryCountOutputType without action
   */
  export type Product_categoryCountOutputTypeCountProduct_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_detailsWhereInput
  }

  /**
   * Product_categoryCountOutputType without action
   */
  export type Product_categoryCountOutputTypeCountProduct_sub_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_sub_categoryWhereInput
  }


  /**
   * Count Type Product_sub_categoryCountOutputType
   */

  export type Product_sub_categoryCountOutputType = {
    product_details: number
  }

  export type Product_sub_categoryCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_details?: boolean | Product_sub_categoryCountOutputTypeCountProduct_detailsArgs
  }

  // Custom InputTypes
  /**
   * Product_sub_categoryCountOutputType without action
   */
  export type Product_sub_categoryCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product_sub_categoryCountOutputType
     */
    select?: Product_sub_categoryCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Product_sub_categoryCountOutputType without action
   */
  export type Product_sub_categoryCountOutputTypeCountProduct_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_detailsWhereInput
  }


  /**
   * Count Type Product_detailsCountOutputType
   */

  export type Product_detailsCountOutputType = {
    cart_details: number
  }

  export type Product_detailsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | Product_detailsCountOutputTypeCountCart_detailsArgs
  }

  // Custom InputTypes
  /**
   * Product_detailsCountOutputType without action
   */
  export type Product_detailsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Product_detailsCountOutputType
     */
    select?: Product_detailsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Product_detailsCountOutputType without action
   */
  export type Product_detailsCountOutputTypeCountCart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_detailsWhereInput
  }


  /**
   * Count Type Cart_detailsCountOutputType
   */

  export type Cart_detailsCountOutputType = {
    buy_now: number
  }

  export type Cart_detailsCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    buy_now?: boolean | Cart_detailsCountOutputTypeCountBuy_nowArgs
  }

  // Custom InputTypes
  /**
   * Cart_detailsCountOutputType without action
   */
  export type Cart_detailsCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the Cart_detailsCountOutputType
     */
    select?: Cart_detailsCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * Cart_detailsCountOutputType without action
   */
  export type Cart_detailsCountOutputTypeCountBuy_nowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: buy_nowWhereInput
  }


  /**
   * Count Type User_addressCountOutputType
   */

  export type User_addressCountOutputType = {
    cart_details: number
  }

  export type User_addressCountOutputTypeSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | User_addressCountOutputTypeCountCart_detailsArgs
  }

  // Custom InputTypes
  /**
   * User_addressCountOutputType without action
   */
  export type User_addressCountOutputTypeDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the User_addressCountOutputType
     */
    select?: User_addressCountOutputTypeSelect<ExtArgs> | null
  }

  /**
   * User_addressCountOutputType without action
   */
  export type User_addressCountOutputTypeCountCart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_detailsWhereInput
  }


  /**
   * Models
   */

  /**
   * Model company
   */

  export type AggregateCompany = {
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  export type CompanyAvgAggregateOutputType = {
    id: number | null
  }

  export type CompanySumAggregateOutputType = {
    id: number | null
  }

  export type CompanyMinAggregateOutputType = {
    id: number | null
    company_name: string | null
  }

  export type CompanyMaxAggregateOutputType = {
    id: number | null
    company_name: string | null
  }

  export type CompanyCountAggregateOutputType = {
    id: number
    company_name: number
    _all: number
  }


  export type CompanyAvgAggregateInputType = {
    id?: true
  }

  export type CompanySumAggregateInputType = {
    id?: true
  }

  export type CompanyMinAggregateInputType = {
    id?: true
    company_name?: true
  }

  export type CompanyMaxAggregateInputType = {
    id?: true
    company_name?: true
  }

  export type CompanyCountAggregateInputType = {
    id?: true
    company_name?: true
    _all?: true
  }

  export type CompanyAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which company to aggregate.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned companies
    **/
    _count?: true | CompanyCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: CompanyAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: CompanySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: CompanyMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: CompanyMaxAggregateInputType
  }

  export type GetCompanyAggregateType<T extends CompanyAggregateArgs> = {
        [P in keyof T & keyof AggregateCompany]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCompany[P]>
      : GetScalarType<T[P], AggregateCompany[P]>
  }




  export type companyGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: companyWhereInput
    orderBy?: companyOrderByWithAggregationInput | companyOrderByWithAggregationInput[]
    by: CompanyScalarFieldEnum[] | CompanyScalarFieldEnum
    having?: companyScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: CompanyCountAggregateInputType | true
    _avg?: CompanyAvgAggregateInputType
    _sum?: CompanySumAggregateInputType
    _min?: CompanyMinAggregateInputType
    _max?: CompanyMaxAggregateInputType
  }

  export type CompanyGroupByOutputType = {
    id: number
    company_name: string | null
    _count: CompanyCountAggregateOutputType | null
    _avg: CompanyAvgAggregateOutputType | null
    _sum: CompanySumAggregateOutputType | null
    _min: CompanyMinAggregateOutputType | null
    _max: CompanyMaxAggregateOutputType | null
  }

  type GetCompanyGroupByPayload<T extends companyGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<CompanyGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof CompanyGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], CompanyGroupByOutputType[P]>
            : GetScalarType<T[P], CompanyGroupByOutputType[P]>
        }
      >
    >


  export type companySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    company_name?: boolean
    product_details?: boolean | company$product_detailsArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["company"]>


  export type companySelectScalar = {
    id?: boolean
    company_name?: boolean
  }

  export type companyInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_details?: boolean | company$product_detailsArgs<ExtArgs>
    _count?: boolean | CompanyCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $companyPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "company"
    objects: {
      product_details: Prisma.$product_detailsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      company_name: string | null
    }, ExtArgs["result"]["company"]>
    composites: {}
  }

  type companyGetPayload<S extends boolean | null | undefined | companyDefaultArgs> = $Result.GetResult<Prisma.$companyPayload, S>

  type companyCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<companyFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: CompanyCountAggregateInputType | true
    }

  export interface companyDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['company'], meta: { name: 'company' } }
    /**
     * Find zero or one Company that matches the filter.
     * @param {companyFindUniqueArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends companyFindUniqueArgs>(args: SelectSubset<T, companyFindUniqueArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Company that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {companyFindUniqueOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends companyFindUniqueOrThrowArgs>(args: SelectSubset<T, companyFindUniqueOrThrowArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Company that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyFindFirstArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends companyFindFirstArgs>(args?: SelectSubset<T, companyFindFirstArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Company that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyFindFirstOrThrowArgs} args - Arguments to find a Company
     * @example
     * // Get one Company
     * const company = await prisma.company.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends companyFindFirstOrThrowArgs>(args?: SelectSubset<T, companyFindFirstOrThrowArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Companies that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Companies
     * const companies = await prisma.company.findMany()
     * 
     * // Get first 10 Companies
     * const companies = await prisma.company.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const companyWithIdOnly = await prisma.company.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends companyFindManyArgs>(args?: SelectSubset<T, companyFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Company.
     * @param {companyCreateArgs} args - Arguments to create a Company.
     * @example
     * // Create one Company
     * const Company = await prisma.company.create({
     *   data: {
     *     // ... data to create a Company
     *   }
     * })
     * 
     */
    create<T extends companyCreateArgs>(args: SelectSubset<T, companyCreateArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Companies.
     * @param {companyCreateManyArgs} args - Arguments to create many Companies.
     * @example
     * // Create many Companies
     * const company = await prisma.company.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends companyCreateManyArgs>(args?: SelectSubset<T, companyCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Company.
     * @param {companyDeleteArgs} args - Arguments to delete one Company.
     * @example
     * // Delete one Company
     * const Company = await prisma.company.delete({
     *   where: {
     *     // ... filter to delete one Company
     *   }
     * })
     * 
     */
    delete<T extends companyDeleteArgs>(args: SelectSubset<T, companyDeleteArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Company.
     * @param {companyUpdateArgs} args - Arguments to update one Company.
     * @example
     * // Update one Company
     * const company = await prisma.company.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends companyUpdateArgs>(args: SelectSubset<T, companyUpdateArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Companies.
     * @param {companyDeleteManyArgs} args - Arguments to filter Companies to delete.
     * @example
     * // Delete a few Companies
     * const { count } = await prisma.company.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends companyDeleteManyArgs>(args?: SelectSubset<T, companyDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Companies
     * const company = await prisma.company.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends companyUpdateManyArgs>(args: SelectSubset<T, companyUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Company.
     * @param {companyUpsertArgs} args - Arguments to update or create a Company.
     * @example
     * // Update or create a Company
     * const company = await prisma.company.upsert({
     *   create: {
     *     // ... data to create a Company
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Company we want to update
     *   }
     * })
     */
    upsert<T extends companyUpsertArgs>(args: SelectSubset<T, companyUpsertArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Companies.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyCountArgs} args - Arguments to filter Companies to count.
     * @example
     * // Count the number of Companies
     * const count = await prisma.company.count({
     *   where: {
     *     // ... the filter for the Companies we want to count
     *   }
     * })
    **/
    count<T extends companyCountArgs>(
      args?: Subset<T, companyCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], CompanyCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {CompanyAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends CompanyAggregateArgs>(args: Subset<T, CompanyAggregateArgs>): Prisma.PrismaPromise<GetCompanyAggregateType<T>>

    /**
     * Group by Company.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {companyGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends companyGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: companyGroupByArgs['orderBy'] }
        : { orderBy?: companyGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, companyGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCompanyGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the company model
   */
  readonly fields: companyFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for company.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__companyClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_details<T extends company$product_detailsArgs<ExtArgs> = {}>(args?: Subset<T, company$product_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the company model
   */ 
  interface companyFieldRefs {
    readonly id: FieldRef<"company", 'Int'>
    readonly company_name: FieldRef<"company", 'String'>
  }
    

  // Custom InputTypes
  /**
   * company findUnique
   */
  export type companyFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company findUniqueOrThrow
   */
  export type companyFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company findFirst
   */
  export type companyFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companies.
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * company findFirstOrThrow
   */
  export type companyFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which company to fetch.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for companies.
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of companies.
     */
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * company findMany
   */
  export type companyFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter, which companies to fetch.
     */
    where?: companyWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of companies to fetch.
     */
    orderBy?: companyOrderByWithRelationInput | companyOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing companies.
     */
    cursor?: companyWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` companies from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` companies.
     */
    skip?: number
    distinct?: CompanyScalarFieldEnum | CompanyScalarFieldEnum[]
  }

  /**
   * company create
   */
  export type companyCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * The data needed to create a company.
     */
    data?: XOR<companyCreateInput, companyUncheckedCreateInput>
  }

  /**
   * company createMany
   */
  export type companyCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many companies.
     */
    data: companyCreateManyInput | companyCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * company update
   */
  export type companyUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * The data needed to update a company.
     */
    data: XOR<companyUpdateInput, companyUncheckedUpdateInput>
    /**
     * Choose, which company to update.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company updateMany
   */
  export type companyUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update companies.
     */
    data: XOR<companyUpdateManyMutationInput, companyUncheckedUpdateManyInput>
    /**
     * Filter which companies to update
     */
    where?: companyWhereInput
  }

  /**
   * company upsert
   */
  export type companyUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * The filter to search for the company to update in case it exists.
     */
    where: companyWhereUniqueInput
    /**
     * In case the company found by the `where` argument doesn't exist, create a new company with this data.
     */
    create: XOR<companyCreateInput, companyUncheckedCreateInput>
    /**
     * In case the company was found with the provided `where` argument, update it with this data.
     */
    update: XOR<companyUpdateInput, companyUncheckedUpdateInput>
  }

  /**
   * company delete
   */
  export type companyDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    /**
     * Filter which company to delete.
     */
    where: companyWhereUniqueInput
  }

  /**
   * company deleteMany
   */
  export type companyDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which companies to delete
     */
    where?: companyWhereInput
  }

  /**
   * company.product_details
   */
  export type company$product_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    where?: product_detailsWhereInput
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    cursor?: product_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_detailsScalarFieldEnum | Product_detailsScalarFieldEnum[]
  }

  /**
   * company without action
   */
  export type companyDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
  }


  /**
   * Model product_category
   */

  export type AggregateProduct_category = {
    _count: Product_categoryCountAggregateOutputType | null
    _avg: Product_categoryAvgAggregateOutputType | null
    _sum: Product_categorySumAggregateOutputType | null
    _min: Product_categoryMinAggregateOutputType | null
    _max: Product_categoryMaxAggregateOutputType | null
  }

  export type Product_categoryAvgAggregateOutputType = {
    id: number | null
  }

  export type Product_categorySumAggregateOutputType = {
    id: number | null
  }

  export type Product_categoryMinAggregateOutputType = {
    id: number | null
    product_category_name: string | null
  }

  export type Product_categoryMaxAggregateOutputType = {
    id: number | null
    product_category_name: string | null
  }

  export type Product_categoryCountAggregateOutputType = {
    id: number
    product_category_name: number
    _all: number
  }


  export type Product_categoryAvgAggregateInputType = {
    id?: true
  }

  export type Product_categorySumAggregateInputType = {
    id?: true
  }

  export type Product_categoryMinAggregateInputType = {
    id?: true
    product_category_name?: true
  }

  export type Product_categoryMaxAggregateInputType = {
    id?: true
    product_category_name?: true
  }

  export type Product_categoryCountAggregateInputType = {
    id?: true
    product_category_name?: true
    _all?: true
  }

  export type Product_categoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_category to aggregate.
     */
    where?: product_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoryOrderByWithRelationInput | product_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_categories
    **/
    _count?: true | Product_categoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_categoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_categorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_categoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_categoryMaxAggregateInputType
  }

  export type GetProduct_categoryAggregateType<T extends Product_categoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_category]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_category[P]>
      : GetScalarType<T[P], AggregateProduct_category[P]>
  }




  export type product_categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_categoryWhereInput
    orderBy?: product_categoryOrderByWithAggregationInput | product_categoryOrderByWithAggregationInput[]
    by: Product_categoryScalarFieldEnum[] | Product_categoryScalarFieldEnum
    having?: product_categoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_categoryCountAggregateInputType | true
    _avg?: Product_categoryAvgAggregateInputType
    _sum?: Product_categorySumAggregateInputType
    _min?: Product_categoryMinAggregateInputType
    _max?: Product_categoryMaxAggregateInputType
  }

  export type Product_categoryGroupByOutputType = {
    id: number
    product_category_name: string | null
    _count: Product_categoryCountAggregateOutputType | null
    _avg: Product_categoryAvgAggregateOutputType | null
    _sum: Product_categorySumAggregateOutputType | null
    _min: Product_categoryMinAggregateOutputType | null
    _max: Product_categoryMaxAggregateOutputType | null
  }

  type GetProduct_categoryGroupByPayload<T extends product_categoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_categoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_categoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_categoryGroupByOutputType[P]>
            : GetScalarType<T[P], Product_categoryGroupByOutputType[P]>
        }
      >
    >


  export type product_categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_category_name?: boolean
    product_details?: boolean | product_category$product_detailsArgs<ExtArgs>
    product_sub_category?: boolean | product_category$product_sub_categoryArgs<ExtArgs>
    _count?: boolean | Product_categoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_category"]>


  export type product_categorySelectScalar = {
    id?: boolean
    product_category_name?: boolean
  }

  export type product_categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_details?: boolean | product_category$product_detailsArgs<ExtArgs>
    product_sub_category?: boolean | product_category$product_sub_categoryArgs<ExtArgs>
    _count?: boolean | Product_categoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $product_categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_category"
    objects: {
      product_details: Prisma.$product_detailsPayload<ExtArgs>[]
      product_sub_category: Prisma.$product_sub_categoryPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_category_name: string | null
    }, ExtArgs["result"]["product_category"]>
    composites: {}
  }

  type product_categoryGetPayload<S extends boolean | null | undefined | product_categoryDefaultArgs> = $Result.GetResult<Prisma.$product_categoryPayload, S>

  type product_categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<product_categoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Product_categoryCountAggregateInputType | true
    }

  export interface product_categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_category'], meta: { name: 'product_category' } }
    /**
     * Find zero or one Product_category that matches the filter.
     * @param {product_categoryFindUniqueArgs} args - Arguments to find a Product_category
     * @example
     * // Get one Product_category
     * const product_category = await prisma.product_category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_categoryFindUniqueArgs>(args: SelectSubset<T, product_categoryFindUniqueArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product_category that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {product_categoryFindUniqueOrThrowArgs} args - Arguments to find a Product_category
     * @example
     * // Get one Product_category
     * const product_category = await prisma.product_category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, product_categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product_category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoryFindFirstArgs} args - Arguments to find a Product_category
     * @example
     * // Get one Product_category
     * const product_category = await prisma.product_category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_categoryFindFirstArgs>(args?: SelectSubset<T, product_categoryFindFirstArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product_category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoryFindFirstOrThrowArgs} args - Arguments to find a Product_category
     * @example
     * // Get one Product_category
     * const product_category = await prisma.product_category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, product_categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Product_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_categories
     * const product_categories = await prisma.product_category.findMany()
     * 
     * // Get first 10 Product_categories
     * const product_categories = await prisma.product_category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_categoryWithIdOnly = await prisma.product_category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_categoryFindManyArgs>(args?: SelectSubset<T, product_categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product_category.
     * @param {product_categoryCreateArgs} args - Arguments to create a Product_category.
     * @example
     * // Create one Product_category
     * const Product_category = await prisma.product_category.create({
     *   data: {
     *     // ... data to create a Product_category
     *   }
     * })
     * 
     */
    create<T extends product_categoryCreateArgs>(args: SelectSubset<T, product_categoryCreateArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Product_categories.
     * @param {product_categoryCreateManyArgs} args - Arguments to create many Product_categories.
     * @example
     * // Create many Product_categories
     * const product_category = await prisma.product_category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_categoryCreateManyArgs>(args?: SelectSubset<T, product_categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_category.
     * @param {product_categoryDeleteArgs} args - Arguments to delete one Product_category.
     * @example
     * // Delete one Product_category
     * const Product_category = await prisma.product_category.delete({
     *   where: {
     *     // ... filter to delete one Product_category
     *   }
     * })
     * 
     */
    delete<T extends product_categoryDeleteArgs>(args: SelectSubset<T, product_categoryDeleteArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product_category.
     * @param {product_categoryUpdateArgs} args - Arguments to update one Product_category.
     * @example
     * // Update one Product_category
     * const product_category = await prisma.product_category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_categoryUpdateArgs>(args: SelectSubset<T, product_categoryUpdateArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Product_categories.
     * @param {product_categoryDeleteManyArgs} args - Arguments to filter Product_categories to delete.
     * @example
     * // Delete a few Product_categories
     * const { count } = await prisma.product_category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_categoryDeleteManyArgs>(args?: SelectSubset<T, product_categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_categories
     * const product_category = await prisma.product_category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_categoryUpdateManyArgs>(args: SelectSubset<T, product_categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_category.
     * @param {product_categoryUpsertArgs} args - Arguments to update or create a Product_category.
     * @example
     * // Update or create a Product_category
     * const product_category = await prisma.product_category.upsert({
     *   create: {
     *     // ... data to create a Product_category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_category we want to update
     *   }
     * })
     */
    upsert<T extends product_categoryUpsertArgs>(args: SelectSubset<T, product_categoryUpsertArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Product_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoryCountArgs} args - Arguments to filter Product_categories to count.
     * @example
     * // Count the number of Product_categories
     * const count = await prisma.product_category.count({
     *   where: {
     *     // ... the filter for the Product_categories we want to count
     *   }
     * })
    **/
    count<T extends product_categoryCountArgs>(
      args?: Subset<T, product_categoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_categoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_categoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_categoryAggregateArgs>(args: Subset<T, Product_categoryAggregateArgs>): Prisma.PrismaPromise<GetProduct_categoryAggregateType<T>>

    /**
     * Group by Product_category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_categoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_categoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_categoryGroupByArgs['orderBy'] }
        : { orderBy?: product_categoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_categoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_category model
   */
  readonly fields: product_categoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_details<T extends product_category$product_detailsArgs<ExtArgs> = {}>(args?: Subset<T, product_category$product_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findMany"> | Null>
    product_sub_category<T extends product_category$product_sub_categoryArgs<ExtArgs> = {}>(args?: Subset<T, product_category$product_sub_categoryArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_category model
   */ 
  interface product_categoryFieldRefs {
    readonly id: FieldRef<"product_category", 'Int'>
    readonly product_category_name: FieldRef<"product_category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * product_category findUnique
   */
  export type product_categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_category to fetch.
     */
    where: product_categoryWhereUniqueInput
  }

  /**
   * product_category findUniqueOrThrow
   */
  export type product_categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_category to fetch.
     */
    where: product_categoryWhereUniqueInput
  }

  /**
   * product_category findFirst
   */
  export type product_categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_category to fetch.
     */
    where?: product_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoryOrderByWithRelationInput | product_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_categories.
     */
    cursor?: product_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_categories.
     */
    distinct?: Product_categoryScalarFieldEnum | Product_categoryScalarFieldEnum[]
  }

  /**
   * product_category findFirstOrThrow
   */
  export type product_categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_category to fetch.
     */
    where?: product_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoryOrderByWithRelationInput | product_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_categories.
     */
    cursor?: product_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_categories.
     */
    distinct?: Product_categoryScalarFieldEnum | Product_categoryScalarFieldEnum[]
  }

  /**
   * product_category findMany
   */
  export type product_categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_categories to fetch.
     */
    where?: product_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_categories to fetch.
     */
    orderBy?: product_categoryOrderByWithRelationInput | product_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_categories.
     */
    cursor?: product_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_categories.
     */
    skip?: number
    distinct?: Product_categoryScalarFieldEnum | Product_categoryScalarFieldEnum[]
  }

  /**
   * product_category create
   */
  export type product_categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * The data needed to create a product_category.
     */
    data?: XOR<product_categoryCreateInput, product_categoryUncheckedCreateInput>
  }

  /**
   * product_category createMany
   */
  export type product_categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_categories.
     */
    data: product_categoryCreateManyInput | product_categoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_category update
   */
  export type product_categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * The data needed to update a product_category.
     */
    data: XOR<product_categoryUpdateInput, product_categoryUncheckedUpdateInput>
    /**
     * Choose, which product_category to update.
     */
    where: product_categoryWhereUniqueInput
  }

  /**
   * product_category updateMany
   */
  export type product_categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_categories.
     */
    data: XOR<product_categoryUpdateManyMutationInput, product_categoryUncheckedUpdateManyInput>
    /**
     * Filter which product_categories to update
     */
    where?: product_categoryWhereInput
  }

  /**
   * product_category upsert
   */
  export type product_categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * The filter to search for the product_category to update in case it exists.
     */
    where: product_categoryWhereUniqueInput
    /**
     * In case the product_category found by the `where` argument doesn't exist, create a new product_category with this data.
     */
    create: XOR<product_categoryCreateInput, product_categoryUncheckedCreateInput>
    /**
     * In case the product_category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_categoryUpdateInput, product_categoryUncheckedUpdateInput>
  }

  /**
   * product_category delete
   */
  export type product_categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    /**
     * Filter which product_category to delete.
     */
    where: product_categoryWhereUniqueInput
  }

  /**
   * product_category deleteMany
   */
  export type product_categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_categories to delete
     */
    where?: product_categoryWhereInput
  }

  /**
   * product_category.product_details
   */
  export type product_category$product_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    where?: product_detailsWhereInput
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    cursor?: product_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_detailsScalarFieldEnum | Product_detailsScalarFieldEnum[]
  }

  /**
   * product_category.product_sub_category
   */
  export type product_category$product_sub_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    where?: product_sub_categoryWhereInput
    orderBy?: product_sub_categoryOrderByWithRelationInput | product_sub_categoryOrderByWithRelationInput[]
    cursor?: product_sub_categoryWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_sub_categoryScalarFieldEnum | Product_sub_categoryScalarFieldEnum[]
  }

  /**
   * product_category without action
   */
  export type product_categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
  }


  /**
   * Model product_sub_category
   */

  export type AggregateProduct_sub_category = {
    _count: Product_sub_categoryCountAggregateOutputType | null
    _avg: Product_sub_categoryAvgAggregateOutputType | null
    _sum: Product_sub_categorySumAggregateOutputType | null
    _min: Product_sub_categoryMinAggregateOutputType | null
    _max: Product_sub_categoryMaxAggregateOutputType | null
  }

  export type Product_sub_categoryAvgAggregateOutputType = {
    id: number | null
    product_category_id: number | null
  }

  export type Product_sub_categorySumAggregateOutputType = {
    id: number | null
    product_category_id: number | null
  }

  export type Product_sub_categoryMinAggregateOutputType = {
    id: number | null
    product_category_id: number | null
    product_sub_category_name: string | null
  }

  export type Product_sub_categoryMaxAggregateOutputType = {
    id: number | null
    product_category_id: number | null
    product_sub_category_name: string | null
  }

  export type Product_sub_categoryCountAggregateOutputType = {
    id: number
    product_category_id: number
    product_sub_category_name: number
    _all: number
  }


  export type Product_sub_categoryAvgAggregateInputType = {
    id?: true
    product_category_id?: true
  }

  export type Product_sub_categorySumAggregateInputType = {
    id?: true
    product_category_id?: true
  }

  export type Product_sub_categoryMinAggregateInputType = {
    id?: true
    product_category_id?: true
    product_sub_category_name?: true
  }

  export type Product_sub_categoryMaxAggregateInputType = {
    id?: true
    product_category_id?: true
    product_sub_category_name?: true
  }

  export type Product_sub_categoryCountAggregateInputType = {
    id?: true
    product_category_id?: true
    product_sub_category_name?: true
    _all?: true
  }

  export type Product_sub_categoryAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_sub_category to aggregate.
     */
    where?: product_sub_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_sub_categories to fetch.
     */
    orderBy?: product_sub_categoryOrderByWithRelationInput | product_sub_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_sub_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_sub_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_sub_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_sub_categories
    **/
    _count?: true | Product_sub_categoryCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_sub_categoryAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_sub_categorySumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_sub_categoryMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_sub_categoryMaxAggregateInputType
  }

  export type GetProduct_sub_categoryAggregateType<T extends Product_sub_categoryAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_sub_category]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_sub_category[P]>
      : GetScalarType<T[P], AggregateProduct_sub_category[P]>
  }




  export type product_sub_categoryGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_sub_categoryWhereInput
    orderBy?: product_sub_categoryOrderByWithAggregationInput | product_sub_categoryOrderByWithAggregationInput[]
    by: Product_sub_categoryScalarFieldEnum[] | Product_sub_categoryScalarFieldEnum
    having?: product_sub_categoryScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_sub_categoryCountAggregateInputType | true
    _avg?: Product_sub_categoryAvgAggregateInputType
    _sum?: Product_sub_categorySumAggregateInputType
    _min?: Product_sub_categoryMinAggregateInputType
    _max?: Product_sub_categoryMaxAggregateInputType
  }

  export type Product_sub_categoryGroupByOutputType = {
    id: number
    product_category_id: number
    product_sub_category_name: string | null
    _count: Product_sub_categoryCountAggregateOutputType | null
    _avg: Product_sub_categoryAvgAggregateOutputType | null
    _sum: Product_sub_categorySumAggregateOutputType | null
    _min: Product_sub_categoryMinAggregateOutputType | null
    _max: Product_sub_categoryMaxAggregateOutputType | null
  }

  type GetProduct_sub_categoryGroupByPayload<T extends product_sub_categoryGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_sub_categoryGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_sub_categoryGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_sub_categoryGroupByOutputType[P]>
            : GetScalarType<T[P], Product_sub_categoryGroupByOutputType[P]>
        }
      >
    >


  export type product_sub_categorySelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_category_id?: boolean
    product_sub_category_name?: boolean
    product_category?: boolean | product_sub_category$product_categoryArgs<ExtArgs>
    product_details?: boolean | product_sub_category$product_detailsArgs<ExtArgs>
    _count?: boolean | Product_sub_categoryCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_sub_category"]>


  export type product_sub_categorySelectScalar = {
    id?: boolean
    product_category_id?: boolean
    product_sub_category_name?: boolean
  }

  export type product_sub_categoryInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_category?: boolean | product_sub_category$product_categoryArgs<ExtArgs>
    product_details?: boolean | product_sub_category$product_detailsArgs<ExtArgs>
    _count?: boolean | Product_sub_categoryCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $product_sub_categoryPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_sub_category"
    objects: {
      product_category: Prisma.$product_categoryPayload<ExtArgs> | null
      product_details: Prisma.$product_detailsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_category_id: number
      product_sub_category_name: string | null
    }, ExtArgs["result"]["product_sub_category"]>
    composites: {}
  }

  type product_sub_categoryGetPayload<S extends boolean | null | undefined | product_sub_categoryDefaultArgs> = $Result.GetResult<Prisma.$product_sub_categoryPayload, S>

  type product_sub_categoryCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<product_sub_categoryFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Product_sub_categoryCountAggregateInputType | true
    }

  export interface product_sub_categoryDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_sub_category'], meta: { name: 'product_sub_category' } }
    /**
     * Find zero or one Product_sub_category that matches the filter.
     * @param {product_sub_categoryFindUniqueArgs} args - Arguments to find a Product_sub_category
     * @example
     * // Get one Product_sub_category
     * const product_sub_category = await prisma.product_sub_category.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_sub_categoryFindUniqueArgs>(args: SelectSubset<T, product_sub_categoryFindUniqueArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product_sub_category that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {product_sub_categoryFindUniqueOrThrowArgs} args - Arguments to find a Product_sub_category
     * @example
     * // Get one Product_sub_category
     * const product_sub_category = await prisma.product_sub_category.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_sub_categoryFindUniqueOrThrowArgs>(args: SelectSubset<T, product_sub_categoryFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product_sub_category that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_sub_categoryFindFirstArgs} args - Arguments to find a Product_sub_category
     * @example
     * // Get one Product_sub_category
     * const product_sub_category = await prisma.product_sub_category.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_sub_categoryFindFirstArgs>(args?: SelectSubset<T, product_sub_categoryFindFirstArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product_sub_category that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_sub_categoryFindFirstOrThrowArgs} args - Arguments to find a Product_sub_category
     * @example
     * // Get one Product_sub_category
     * const product_sub_category = await prisma.product_sub_category.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_sub_categoryFindFirstOrThrowArgs>(args?: SelectSubset<T, product_sub_categoryFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Product_sub_categories that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_sub_categoryFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_sub_categories
     * const product_sub_categories = await prisma.product_sub_category.findMany()
     * 
     * // Get first 10 Product_sub_categories
     * const product_sub_categories = await prisma.product_sub_category.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_sub_categoryWithIdOnly = await prisma.product_sub_category.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_sub_categoryFindManyArgs>(args?: SelectSubset<T, product_sub_categoryFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product_sub_category.
     * @param {product_sub_categoryCreateArgs} args - Arguments to create a Product_sub_category.
     * @example
     * // Create one Product_sub_category
     * const Product_sub_category = await prisma.product_sub_category.create({
     *   data: {
     *     // ... data to create a Product_sub_category
     *   }
     * })
     * 
     */
    create<T extends product_sub_categoryCreateArgs>(args: SelectSubset<T, product_sub_categoryCreateArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Product_sub_categories.
     * @param {product_sub_categoryCreateManyArgs} args - Arguments to create many Product_sub_categories.
     * @example
     * // Create many Product_sub_categories
     * const product_sub_category = await prisma.product_sub_category.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_sub_categoryCreateManyArgs>(args?: SelectSubset<T, product_sub_categoryCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_sub_category.
     * @param {product_sub_categoryDeleteArgs} args - Arguments to delete one Product_sub_category.
     * @example
     * // Delete one Product_sub_category
     * const Product_sub_category = await prisma.product_sub_category.delete({
     *   where: {
     *     // ... filter to delete one Product_sub_category
     *   }
     * })
     * 
     */
    delete<T extends product_sub_categoryDeleteArgs>(args: SelectSubset<T, product_sub_categoryDeleteArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product_sub_category.
     * @param {product_sub_categoryUpdateArgs} args - Arguments to update one Product_sub_category.
     * @example
     * // Update one Product_sub_category
     * const product_sub_category = await prisma.product_sub_category.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_sub_categoryUpdateArgs>(args: SelectSubset<T, product_sub_categoryUpdateArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Product_sub_categories.
     * @param {product_sub_categoryDeleteManyArgs} args - Arguments to filter Product_sub_categories to delete.
     * @example
     * // Delete a few Product_sub_categories
     * const { count } = await prisma.product_sub_category.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_sub_categoryDeleteManyArgs>(args?: SelectSubset<T, product_sub_categoryDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_sub_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_sub_categoryUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_sub_categories
     * const product_sub_category = await prisma.product_sub_category.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_sub_categoryUpdateManyArgs>(args: SelectSubset<T, product_sub_categoryUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_sub_category.
     * @param {product_sub_categoryUpsertArgs} args - Arguments to update or create a Product_sub_category.
     * @example
     * // Update or create a Product_sub_category
     * const product_sub_category = await prisma.product_sub_category.upsert({
     *   create: {
     *     // ... data to create a Product_sub_category
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_sub_category we want to update
     *   }
     * })
     */
    upsert<T extends product_sub_categoryUpsertArgs>(args: SelectSubset<T, product_sub_categoryUpsertArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Product_sub_categories.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_sub_categoryCountArgs} args - Arguments to filter Product_sub_categories to count.
     * @example
     * // Count the number of Product_sub_categories
     * const count = await prisma.product_sub_category.count({
     *   where: {
     *     // ... the filter for the Product_sub_categories we want to count
     *   }
     * })
    **/
    count<T extends product_sub_categoryCountArgs>(
      args?: Subset<T, product_sub_categoryCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_sub_categoryCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_sub_category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_sub_categoryAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_sub_categoryAggregateArgs>(args: Subset<T, Product_sub_categoryAggregateArgs>): Prisma.PrismaPromise<GetProduct_sub_categoryAggregateType<T>>

    /**
     * Group by Product_sub_category.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_sub_categoryGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_sub_categoryGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_sub_categoryGroupByArgs['orderBy'] }
        : { orderBy?: product_sub_categoryGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_sub_categoryGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_sub_categoryGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_sub_category model
   */
  readonly fields: product_sub_categoryFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_sub_category.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_sub_categoryClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_category<T extends product_sub_category$product_categoryArgs<ExtArgs> = {}>(args?: Subset<T, product_sub_category$product_categoryArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    product_details<T extends product_sub_category$product_detailsArgs<ExtArgs> = {}>(args?: Subset<T, product_sub_category$product_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_sub_category model
   */ 
  interface product_sub_categoryFieldRefs {
    readonly id: FieldRef<"product_sub_category", 'Int'>
    readonly product_category_id: FieldRef<"product_sub_category", 'Int'>
    readonly product_sub_category_name: FieldRef<"product_sub_category", 'String'>
  }
    

  // Custom InputTypes
  /**
   * product_sub_category findUnique
   */
  export type product_sub_categoryFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_sub_category to fetch.
     */
    where: product_sub_categoryWhereUniqueInput
  }

  /**
   * product_sub_category findUniqueOrThrow
   */
  export type product_sub_categoryFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_sub_category to fetch.
     */
    where: product_sub_categoryWhereUniqueInput
  }

  /**
   * product_sub_category findFirst
   */
  export type product_sub_categoryFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_sub_category to fetch.
     */
    where?: product_sub_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_sub_categories to fetch.
     */
    orderBy?: product_sub_categoryOrderByWithRelationInput | product_sub_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_sub_categories.
     */
    cursor?: product_sub_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_sub_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_sub_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_sub_categories.
     */
    distinct?: Product_sub_categoryScalarFieldEnum | Product_sub_categoryScalarFieldEnum[]
  }

  /**
   * product_sub_category findFirstOrThrow
   */
  export type product_sub_categoryFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_sub_category to fetch.
     */
    where?: product_sub_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_sub_categories to fetch.
     */
    orderBy?: product_sub_categoryOrderByWithRelationInput | product_sub_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_sub_categories.
     */
    cursor?: product_sub_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_sub_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_sub_categories.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_sub_categories.
     */
    distinct?: Product_sub_categoryScalarFieldEnum | Product_sub_categoryScalarFieldEnum[]
  }

  /**
   * product_sub_category findMany
   */
  export type product_sub_categoryFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * Filter, which product_sub_categories to fetch.
     */
    where?: product_sub_categoryWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_sub_categories to fetch.
     */
    orderBy?: product_sub_categoryOrderByWithRelationInput | product_sub_categoryOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_sub_categories.
     */
    cursor?: product_sub_categoryWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_sub_categories from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_sub_categories.
     */
    skip?: number
    distinct?: Product_sub_categoryScalarFieldEnum | Product_sub_categoryScalarFieldEnum[]
  }

  /**
   * product_sub_category create
   */
  export type product_sub_categoryCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * The data needed to create a product_sub_category.
     */
    data: XOR<product_sub_categoryCreateInput, product_sub_categoryUncheckedCreateInput>
  }

  /**
   * product_sub_category createMany
   */
  export type product_sub_categoryCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_sub_categories.
     */
    data: product_sub_categoryCreateManyInput | product_sub_categoryCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_sub_category update
   */
  export type product_sub_categoryUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * The data needed to update a product_sub_category.
     */
    data: XOR<product_sub_categoryUpdateInput, product_sub_categoryUncheckedUpdateInput>
    /**
     * Choose, which product_sub_category to update.
     */
    where: product_sub_categoryWhereUniqueInput
  }

  /**
   * product_sub_category updateMany
   */
  export type product_sub_categoryUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_sub_categories.
     */
    data: XOR<product_sub_categoryUpdateManyMutationInput, product_sub_categoryUncheckedUpdateManyInput>
    /**
     * Filter which product_sub_categories to update
     */
    where?: product_sub_categoryWhereInput
  }

  /**
   * product_sub_category upsert
   */
  export type product_sub_categoryUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * The filter to search for the product_sub_category to update in case it exists.
     */
    where: product_sub_categoryWhereUniqueInput
    /**
     * In case the product_sub_category found by the `where` argument doesn't exist, create a new product_sub_category with this data.
     */
    create: XOR<product_sub_categoryCreateInput, product_sub_categoryUncheckedCreateInput>
    /**
     * In case the product_sub_category was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_sub_categoryUpdateInput, product_sub_categoryUncheckedUpdateInput>
  }

  /**
   * product_sub_category delete
   */
  export type product_sub_categoryDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    /**
     * Filter which product_sub_category to delete.
     */
    where: product_sub_categoryWhereUniqueInput
  }

  /**
   * product_sub_category deleteMany
   */
  export type product_sub_categoryDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_sub_categories to delete
     */
    where?: product_sub_categoryWhereInput
  }

  /**
   * product_sub_category.product_category
   */
  export type product_sub_category$product_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    where?: product_categoryWhereInput
  }

  /**
   * product_sub_category.product_details
   */
  export type product_sub_category$product_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    where?: product_detailsWhereInput
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    cursor?: product_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Product_detailsScalarFieldEnum | Product_detailsScalarFieldEnum[]
  }

  /**
   * product_sub_category without action
   */
  export type product_sub_categoryDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
  }


  /**
   * Model product_details
   */

  export type AggregateProduct_details = {
    _count: Product_detailsCountAggregateOutputType | null
    _avg: Product_detailsAvgAggregateOutputType | null
    _sum: Product_detailsSumAggregateOutputType | null
    _min: Product_detailsMinAggregateOutputType | null
    _max: Product_detailsMaxAggregateOutputType | null
  }

  export type Product_detailsAvgAggregateOutputType = {
    id: number | null
    company_id: number | null
    product_category_id: number | null
    product_sub_category_id: number | null
  }

  export type Product_detailsSumAggregateOutputType = {
    id: number | null
    company_id: number | null
    product_category_id: number | null
    product_sub_category_id: number | null
  }

  export type Product_detailsMinAggregateOutputType = {
    id: number | null
    product_name: string | null
    product_image_url: string | null
    product_description: string | null
    product_price: string | null
    company_id: number | null
    product_category_id: number | null
    product_sub_category_id: number | null
  }

  export type Product_detailsMaxAggregateOutputType = {
    id: number | null
    product_name: string | null
    product_image_url: string | null
    product_description: string | null
    product_price: string | null
    company_id: number | null
    product_category_id: number | null
    product_sub_category_id: number | null
  }

  export type Product_detailsCountAggregateOutputType = {
    id: number
    product_name: number
    product_image_url: number
    product_description: number
    product_price: number
    company_id: number
    product_category_id: number
    product_sub_category_id: number
    _all: number
  }


  export type Product_detailsAvgAggregateInputType = {
    id?: true
    company_id?: true
    product_category_id?: true
    product_sub_category_id?: true
  }

  export type Product_detailsSumAggregateInputType = {
    id?: true
    company_id?: true
    product_category_id?: true
    product_sub_category_id?: true
  }

  export type Product_detailsMinAggregateInputType = {
    id?: true
    product_name?: true
    product_image_url?: true
    product_description?: true
    product_price?: true
    company_id?: true
    product_category_id?: true
    product_sub_category_id?: true
  }

  export type Product_detailsMaxAggregateInputType = {
    id?: true
    product_name?: true
    product_image_url?: true
    product_description?: true
    product_price?: true
    company_id?: true
    product_category_id?: true
    product_sub_category_id?: true
  }

  export type Product_detailsCountAggregateInputType = {
    id?: true
    product_name?: true
    product_image_url?: true
    product_description?: true
    product_price?: true
    company_id?: true
    product_category_id?: true
    product_sub_category_id?: true
    _all?: true
  }

  export type Product_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_details to aggregate.
     */
    where?: product_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_details to fetch.
     */
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: product_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned product_details
    **/
    _count?: true | Product_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Product_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Product_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Product_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Product_detailsMaxAggregateInputType
  }

  export type GetProduct_detailsAggregateType<T extends Product_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateProduct_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateProduct_details[P]>
      : GetScalarType<T[P], AggregateProduct_details[P]>
  }




  export type product_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: product_detailsWhereInput
    orderBy?: product_detailsOrderByWithAggregationInput | product_detailsOrderByWithAggregationInput[]
    by: Product_detailsScalarFieldEnum[] | Product_detailsScalarFieldEnum
    having?: product_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Product_detailsCountAggregateInputType | true
    _avg?: Product_detailsAvgAggregateInputType
    _sum?: Product_detailsSumAggregateInputType
    _min?: Product_detailsMinAggregateInputType
    _max?: Product_detailsMaxAggregateInputType
  }

  export type Product_detailsGroupByOutputType = {
    id: number
    product_name: string | null
    product_image_url: string | null
    product_description: string | null
    product_price: string | null
    company_id: number | null
    product_category_id: number | null
    product_sub_category_id: number | null
    _count: Product_detailsCountAggregateOutputType | null
    _avg: Product_detailsAvgAggregateOutputType | null
    _sum: Product_detailsSumAggregateOutputType | null
    _min: Product_detailsMinAggregateOutputType | null
    _max: Product_detailsMaxAggregateOutputType | null
  }

  type GetProduct_detailsGroupByPayload<T extends product_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Product_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Product_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Product_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Product_detailsGroupByOutputType[P]>
        }
      >
    >


  export type product_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_name?: boolean
    product_image_url?: boolean
    product_description?: boolean
    product_price?: boolean
    company_id?: boolean
    product_category_id?: boolean
    product_sub_category_id?: boolean
    company?: boolean | product_details$companyArgs<ExtArgs>
    product_category?: boolean | product_details$product_categoryArgs<ExtArgs>
    product_sub_category?: boolean | product_details$product_sub_categoryArgs<ExtArgs>
    cart_details?: boolean | product_details$cart_detailsArgs<ExtArgs>
    _count?: boolean | Product_detailsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["product_details"]>


  export type product_detailsSelectScalar = {
    id?: boolean
    product_name?: boolean
    product_image_url?: boolean
    product_description?: boolean
    product_price?: boolean
    company_id?: boolean
    product_category_id?: boolean
    product_sub_category_id?: boolean
  }

  export type product_detailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    company?: boolean | product_details$companyArgs<ExtArgs>
    product_category?: boolean | product_details$product_categoryArgs<ExtArgs>
    product_sub_category?: boolean | product_details$product_sub_categoryArgs<ExtArgs>
    cart_details?: boolean | product_details$cart_detailsArgs<ExtArgs>
    _count?: boolean | Product_detailsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $product_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "product_details"
    objects: {
      company: Prisma.$companyPayload<ExtArgs> | null
      product_category: Prisma.$product_categoryPayload<ExtArgs> | null
      product_sub_category: Prisma.$product_sub_categoryPayload<ExtArgs> | null
      cart_details: Prisma.$cart_detailsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_name: string | null
      product_image_url: string | null
      product_description: string | null
      product_price: string | null
      company_id: number | null
      product_category_id: number | null
      product_sub_category_id: number | null
    }, ExtArgs["result"]["product_details"]>
    composites: {}
  }

  type product_detailsGetPayload<S extends boolean | null | undefined | product_detailsDefaultArgs> = $Result.GetResult<Prisma.$product_detailsPayload, S>

  type product_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<product_detailsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Product_detailsCountAggregateInputType | true
    }

  export interface product_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['product_details'], meta: { name: 'product_details' } }
    /**
     * Find zero or one Product_details that matches the filter.
     * @param {product_detailsFindUniqueArgs} args - Arguments to find a Product_details
     * @example
     * // Get one Product_details
     * const product_details = await prisma.product_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends product_detailsFindUniqueArgs>(args: SelectSubset<T, product_detailsFindUniqueArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Product_details that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {product_detailsFindUniqueOrThrowArgs} args - Arguments to find a Product_details
     * @example
     * // Get one Product_details
     * const product_details = await prisma.product_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends product_detailsFindUniqueOrThrowArgs>(args: SelectSubset<T, product_detailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Product_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_detailsFindFirstArgs} args - Arguments to find a Product_details
     * @example
     * // Get one Product_details
     * const product_details = await prisma.product_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends product_detailsFindFirstArgs>(args?: SelectSubset<T, product_detailsFindFirstArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Product_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_detailsFindFirstOrThrowArgs} args - Arguments to find a Product_details
     * @example
     * // Get one Product_details
     * const product_details = await prisma.product_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends product_detailsFindFirstOrThrowArgs>(args?: SelectSubset<T, product_detailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Product_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Product_details
     * const product_details = await prisma.product_details.findMany()
     * 
     * // Get first 10 Product_details
     * const product_details = await prisma.product_details.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const product_detailsWithIdOnly = await prisma.product_details.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends product_detailsFindManyArgs>(args?: SelectSubset<T, product_detailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Product_details.
     * @param {product_detailsCreateArgs} args - Arguments to create a Product_details.
     * @example
     * // Create one Product_details
     * const Product_details = await prisma.product_details.create({
     *   data: {
     *     // ... data to create a Product_details
     *   }
     * })
     * 
     */
    create<T extends product_detailsCreateArgs>(args: SelectSubset<T, product_detailsCreateArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Product_details.
     * @param {product_detailsCreateManyArgs} args - Arguments to create many Product_details.
     * @example
     * // Create many Product_details
     * const product_details = await prisma.product_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends product_detailsCreateManyArgs>(args?: SelectSubset<T, product_detailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Product_details.
     * @param {product_detailsDeleteArgs} args - Arguments to delete one Product_details.
     * @example
     * // Delete one Product_details
     * const Product_details = await prisma.product_details.delete({
     *   where: {
     *     // ... filter to delete one Product_details
     *   }
     * })
     * 
     */
    delete<T extends product_detailsDeleteArgs>(args: SelectSubset<T, product_detailsDeleteArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Product_details.
     * @param {product_detailsUpdateArgs} args - Arguments to update one Product_details.
     * @example
     * // Update one Product_details
     * const product_details = await prisma.product_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends product_detailsUpdateArgs>(args: SelectSubset<T, product_detailsUpdateArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Product_details.
     * @param {product_detailsDeleteManyArgs} args - Arguments to filter Product_details to delete.
     * @example
     * // Delete a few Product_details
     * const { count } = await prisma.product_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends product_detailsDeleteManyArgs>(args?: SelectSubset<T, product_detailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Product_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Product_details
     * const product_details = await prisma.product_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends product_detailsUpdateManyArgs>(args: SelectSubset<T, product_detailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Product_details.
     * @param {product_detailsUpsertArgs} args - Arguments to update or create a Product_details.
     * @example
     * // Update or create a Product_details
     * const product_details = await prisma.product_details.upsert({
     *   create: {
     *     // ... data to create a Product_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Product_details we want to update
     *   }
     * })
     */
    upsert<T extends product_detailsUpsertArgs>(args: SelectSubset<T, product_detailsUpsertArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Product_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_detailsCountArgs} args - Arguments to filter Product_details to count.
     * @example
     * // Count the number of Product_details
     * const count = await prisma.product_details.count({
     *   where: {
     *     // ... the filter for the Product_details we want to count
     *   }
     * })
    **/
    count<T extends product_detailsCountArgs>(
      args?: Subset<T, product_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Product_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Product_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Product_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Product_detailsAggregateArgs>(args: Subset<T, Product_detailsAggregateArgs>): Prisma.PrismaPromise<GetProduct_detailsAggregateType<T>>

    /**
     * Group by Product_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {product_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends product_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: product_detailsGroupByArgs['orderBy'] }
        : { orderBy?: product_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, product_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetProduct_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the product_details model
   */
  readonly fields: product_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for product_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__product_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    company<T extends product_details$companyArgs<ExtArgs> = {}>(args?: Subset<T, product_details$companyArgs<ExtArgs>>): Prisma__companyClient<$Result.GetResult<Prisma.$companyPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    product_category<T extends product_details$product_categoryArgs<ExtArgs> = {}>(args?: Subset<T, product_details$product_categoryArgs<ExtArgs>>): Prisma__product_categoryClient<$Result.GetResult<Prisma.$product_categoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    product_sub_category<T extends product_details$product_sub_categoryArgs<ExtArgs> = {}>(args?: Subset<T, product_details$product_sub_categoryArgs<ExtArgs>>): Prisma__product_sub_categoryClient<$Result.GetResult<Prisma.$product_sub_categoryPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    cart_details<T extends product_details$cart_detailsArgs<ExtArgs> = {}>(args?: Subset<T, product_details$cart_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the product_details model
   */ 
  interface product_detailsFieldRefs {
    readonly id: FieldRef<"product_details", 'Int'>
    readonly product_name: FieldRef<"product_details", 'String'>
    readonly product_image_url: FieldRef<"product_details", 'String'>
    readonly product_description: FieldRef<"product_details", 'String'>
    readonly product_price: FieldRef<"product_details", 'String'>
    readonly company_id: FieldRef<"product_details", 'Int'>
    readonly product_category_id: FieldRef<"product_details", 'Int'>
    readonly product_sub_category_id: FieldRef<"product_details", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * product_details findUnique
   */
  export type product_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * Filter, which product_details to fetch.
     */
    where: product_detailsWhereUniqueInput
  }

  /**
   * product_details findUniqueOrThrow
   */
  export type product_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * Filter, which product_details to fetch.
     */
    where: product_detailsWhereUniqueInput
  }

  /**
   * product_details findFirst
   */
  export type product_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * Filter, which product_details to fetch.
     */
    where?: product_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_details to fetch.
     */
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_details.
     */
    cursor?: product_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_details.
     */
    distinct?: Product_detailsScalarFieldEnum | Product_detailsScalarFieldEnum[]
  }

  /**
   * product_details findFirstOrThrow
   */
  export type product_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * Filter, which product_details to fetch.
     */
    where?: product_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_details to fetch.
     */
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for product_details.
     */
    cursor?: product_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of product_details.
     */
    distinct?: Product_detailsScalarFieldEnum | Product_detailsScalarFieldEnum[]
  }

  /**
   * product_details findMany
   */
  export type product_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * Filter, which product_details to fetch.
     */
    where?: product_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of product_details to fetch.
     */
    orderBy?: product_detailsOrderByWithRelationInput | product_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing product_details.
     */
    cursor?: product_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` product_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` product_details.
     */
    skip?: number
    distinct?: Product_detailsScalarFieldEnum | Product_detailsScalarFieldEnum[]
  }

  /**
   * product_details create
   */
  export type product_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * The data needed to create a product_details.
     */
    data?: XOR<product_detailsCreateInput, product_detailsUncheckedCreateInput>
  }

  /**
   * product_details createMany
   */
  export type product_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many product_details.
     */
    data: product_detailsCreateManyInput | product_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * product_details update
   */
  export type product_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * The data needed to update a product_details.
     */
    data: XOR<product_detailsUpdateInput, product_detailsUncheckedUpdateInput>
    /**
     * Choose, which product_details to update.
     */
    where: product_detailsWhereUniqueInput
  }

  /**
   * product_details updateMany
   */
  export type product_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update product_details.
     */
    data: XOR<product_detailsUpdateManyMutationInput, product_detailsUncheckedUpdateManyInput>
    /**
     * Filter which product_details to update
     */
    where?: product_detailsWhereInput
  }

  /**
   * product_details upsert
   */
  export type product_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * The filter to search for the product_details to update in case it exists.
     */
    where: product_detailsWhereUniqueInput
    /**
     * In case the product_details found by the `where` argument doesn't exist, create a new product_details with this data.
     */
    create: XOR<product_detailsCreateInput, product_detailsUncheckedCreateInput>
    /**
     * In case the product_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<product_detailsUpdateInput, product_detailsUncheckedUpdateInput>
  }

  /**
   * product_details delete
   */
  export type product_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    /**
     * Filter which product_details to delete.
     */
    where: product_detailsWhereUniqueInput
  }

  /**
   * product_details deleteMany
   */
  export type product_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which product_details to delete
     */
    where?: product_detailsWhereInput
  }

  /**
   * product_details.company
   */
  export type product_details$companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the company
     */
    select?: companySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: companyInclude<ExtArgs> | null
    where?: companyWhereInput
  }

  /**
   * product_details.product_category
   */
  export type product_details$product_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_category
     */
    select?: product_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_categoryInclude<ExtArgs> | null
    where?: product_categoryWhereInput
  }

  /**
   * product_details.product_sub_category
   */
  export type product_details$product_sub_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_sub_category
     */
    select?: product_sub_categorySelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_sub_categoryInclude<ExtArgs> | null
    where?: product_sub_categoryWhereInput
  }

  /**
   * product_details.cart_details
   */
  export type product_details$cart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    where?: cart_detailsWhereInput
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    cursor?: cart_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * product_details without action
   */
  export type product_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
  }


  /**
   * Model registration_details
   */

  export type AggregateRegistration_details = {
    _count: Registration_detailsCountAggregateOutputType | null
    _avg: Registration_detailsAvgAggregateOutputType | null
    _sum: Registration_detailsSumAggregateOutputType | null
    _min: Registration_detailsMinAggregateOutputType | null
    _max: Registration_detailsMaxAggregateOutputType | null
  }

  export type Registration_detailsAvgAggregateOutputType = {
    id: number | null
  }

  export type Registration_detailsSumAggregateOutputType = {
    id: number | null
  }

  export type Registration_detailsMinAggregateOutputType = {
    id: number | null
    full_name: string | null
    email_id: string | null
    user_name: string | null
    password: string | null
    date_of_birth: Date | null
    contact_number: string | null
  }

  export type Registration_detailsMaxAggregateOutputType = {
    id: number | null
    full_name: string | null
    email_id: string | null
    user_name: string | null
    password: string | null
    date_of_birth: Date | null
    contact_number: string | null
  }

  export type Registration_detailsCountAggregateOutputType = {
    id: number
    full_name: number
    email_id: number
    user_name: number
    password: number
    date_of_birth: number
    contact_number: number
    _all: number
  }


  export type Registration_detailsAvgAggregateInputType = {
    id?: true
  }

  export type Registration_detailsSumAggregateInputType = {
    id?: true
  }

  export type Registration_detailsMinAggregateInputType = {
    id?: true
    full_name?: true
    email_id?: true
    user_name?: true
    password?: true
    date_of_birth?: true
    contact_number?: true
  }

  export type Registration_detailsMaxAggregateInputType = {
    id?: true
    full_name?: true
    email_id?: true
    user_name?: true
    password?: true
    date_of_birth?: true
    contact_number?: true
  }

  export type Registration_detailsCountAggregateInputType = {
    id?: true
    full_name?: true
    email_id?: true
    user_name?: true
    password?: true
    date_of_birth?: true
    contact_number?: true
    _all?: true
  }

  export type Registration_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registration_details to aggregate.
     */
    where?: registration_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_details to fetch.
     */
    orderBy?: registration_detailsOrderByWithRelationInput | registration_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: registration_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned registration_details
    **/
    _count?: true | Registration_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Registration_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Registration_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Registration_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Registration_detailsMaxAggregateInputType
  }

  export type GetRegistration_detailsAggregateType<T extends Registration_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateRegistration_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateRegistration_details[P]>
      : GetScalarType<T[P], AggregateRegistration_details[P]>
  }




  export type registration_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: registration_detailsWhereInput
    orderBy?: registration_detailsOrderByWithAggregationInput | registration_detailsOrderByWithAggregationInput[]
    by: Registration_detailsScalarFieldEnum[] | Registration_detailsScalarFieldEnum
    having?: registration_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Registration_detailsCountAggregateInputType | true
    _avg?: Registration_detailsAvgAggregateInputType
    _sum?: Registration_detailsSumAggregateInputType
    _min?: Registration_detailsMinAggregateInputType
    _max?: Registration_detailsMaxAggregateInputType
  }

  export type Registration_detailsGroupByOutputType = {
    id: number
    full_name: string
    email_id: string
    user_name: string
    password: string
    date_of_birth: Date
    contact_number: string
    _count: Registration_detailsCountAggregateOutputType | null
    _avg: Registration_detailsAvgAggregateOutputType | null
    _sum: Registration_detailsSumAggregateOutputType | null
    _min: Registration_detailsMinAggregateOutputType | null
    _max: Registration_detailsMaxAggregateOutputType | null
  }

  type GetRegistration_detailsGroupByPayload<T extends registration_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Registration_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Registration_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Registration_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Registration_detailsGroupByOutputType[P]>
        }
      >
    >


  export type registration_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    full_name?: boolean
    email_id?: boolean
    user_name?: boolean
    password?: boolean
    date_of_birth?: boolean
    contact_number?: boolean
  }, ExtArgs["result"]["registration_details"]>


  export type registration_detailsSelectScalar = {
    id?: boolean
    full_name?: boolean
    email_id?: boolean
    user_name?: boolean
    password?: boolean
    date_of_birth?: boolean
    contact_number?: boolean
  }


  export type $registration_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "registration_details"
    objects: {}
    scalars: $Extensions.GetPayloadResult<{
      id: number
      full_name: string
      email_id: string
      user_name: string
      password: string
      date_of_birth: Date
      contact_number: string
    }, ExtArgs["result"]["registration_details"]>
    composites: {}
  }

  type registration_detailsGetPayload<S extends boolean | null | undefined | registration_detailsDefaultArgs> = $Result.GetResult<Prisma.$registration_detailsPayload, S>

  type registration_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<registration_detailsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Registration_detailsCountAggregateInputType | true
    }

  export interface registration_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['registration_details'], meta: { name: 'registration_details' } }
    /**
     * Find zero or one Registration_details that matches the filter.
     * @param {registration_detailsFindUniqueArgs} args - Arguments to find a Registration_details
     * @example
     * // Get one Registration_details
     * const registration_details = await prisma.registration_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends registration_detailsFindUniqueArgs>(args: SelectSubset<T, registration_detailsFindUniqueArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Registration_details that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {registration_detailsFindUniqueOrThrowArgs} args - Arguments to find a Registration_details
     * @example
     * // Get one Registration_details
     * const registration_details = await prisma.registration_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends registration_detailsFindUniqueOrThrowArgs>(args: SelectSubset<T, registration_detailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Registration_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_detailsFindFirstArgs} args - Arguments to find a Registration_details
     * @example
     * // Get one Registration_details
     * const registration_details = await prisma.registration_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends registration_detailsFindFirstArgs>(args?: SelectSubset<T, registration_detailsFindFirstArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Registration_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_detailsFindFirstOrThrowArgs} args - Arguments to find a Registration_details
     * @example
     * // Get one Registration_details
     * const registration_details = await prisma.registration_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends registration_detailsFindFirstOrThrowArgs>(args?: SelectSubset<T, registration_detailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Registration_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Registration_details
     * const registration_details = await prisma.registration_details.findMany()
     * 
     * // Get first 10 Registration_details
     * const registration_details = await prisma.registration_details.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const registration_detailsWithIdOnly = await prisma.registration_details.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends registration_detailsFindManyArgs>(args?: SelectSubset<T, registration_detailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Registration_details.
     * @param {registration_detailsCreateArgs} args - Arguments to create a Registration_details.
     * @example
     * // Create one Registration_details
     * const Registration_details = await prisma.registration_details.create({
     *   data: {
     *     // ... data to create a Registration_details
     *   }
     * })
     * 
     */
    create<T extends registration_detailsCreateArgs>(args: SelectSubset<T, registration_detailsCreateArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Registration_details.
     * @param {registration_detailsCreateManyArgs} args - Arguments to create many Registration_details.
     * @example
     * // Create many Registration_details
     * const registration_details = await prisma.registration_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends registration_detailsCreateManyArgs>(args?: SelectSubset<T, registration_detailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Registration_details.
     * @param {registration_detailsDeleteArgs} args - Arguments to delete one Registration_details.
     * @example
     * // Delete one Registration_details
     * const Registration_details = await prisma.registration_details.delete({
     *   where: {
     *     // ... filter to delete one Registration_details
     *   }
     * })
     * 
     */
    delete<T extends registration_detailsDeleteArgs>(args: SelectSubset<T, registration_detailsDeleteArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Registration_details.
     * @param {registration_detailsUpdateArgs} args - Arguments to update one Registration_details.
     * @example
     * // Update one Registration_details
     * const registration_details = await prisma.registration_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends registration_detailsUpdateArgs>(args: SelectSubset<T, registration_detailsUpdateArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Registration_details.
     * @param {registration_detailsDeleteManyArgs} args - Arguments to filter Registration_details to delete.
     * @example
     * // Delete a few Registration_details
     * const { count } = await prisma.registration_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends registration_detailsDeleteManyArgs>(args?: SelectSubset<T, registration_detailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Registration_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Registration_details
     * const registration_details = await prisma.registration_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends registration_detailsUpdateManyArgs>(args: SelectSubset<T, registration_detailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Registration_details.
     * @param {registration_detailsUpsertArgs} args - Arguments to update or create a Registration_details.
     * @example
     * // Update or create a Registration_details
     * const registration_details = await prisma.registration_details.upsert({
     *   create: {
     *     // ... data to create a Registration_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Registration_details we want to update
     *   }
     * })
     */
    upsert<T extends registration_detailsUpsertArgs>(args: SelectSubset<T, registration_detailsUpsertArgs<ExtArgs>>): Prisma__registration_detailsClient<$Result.GetResult<Prisma.$registration_detailsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Registration_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_detailsCountArgs} args - Arguments to filter Registration_details to count.
     * @example
     * // Count the number of Registration_details
     * const count = await prisma.registration_details.count({
     *   where: {
     *     // ... the filter for the Registration_details we want to count
     *   }
     * })
    **/
    count<T extends registration_detailsCountArgs>(
      args?: Subset<T, registration_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Registration_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Registration_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Registration_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Registration_detailsAggregateArgs>(args: Subset<T, Registration_detailsAggregateArgs>): Prisma.PrismaPromise<GetRegistration_detailsAggregateType<T>>

    /**
     * Group by Registration_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {registration_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends registration_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: registration_detailsGroupByArgs['orderBy'] }
        : { orderBy?: registration_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, registration_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetRegistration_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the registration_details model
   */
  readonly fields: registration_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for registration_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__registration_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the registration_details model
   */ 
  interface registration_detailsFieldRefs {
    readonly id: FieldRef<"registration_details", 'Int'>
    readonly full_name: FieldRef<"registration_details", 'String'>
    readonly email_id: FieldRef<"registration_details", 'String'>
    readonly user_name: FieldRef<"registration_details", 'String'>
    readonly password: FieldRef<"registration_details", 'String'>
    readonly date_of_birth: FieldRef<"registration_details", 'DateTime'>
    readonly contact_number: FieldRef<"registration_details", 'String'>
  }
    

  // Custom InputTypes
  /**
   * registration_details findUnique
   */
  export type registration_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * Filter, which registration_details to fetch.
     */
    where: registration_detailsWhereUniqueInput
  }

  /**
   * registration_details findUniqueOrThrow
   */
  export type registration_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * Filter, which registration_details to fetch.
     */
    where: registration_detailsWhereUniqueInput
  }

  /**
   * registration_details findFirst
   */
  export type registration_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * Filter, which registration_details to fetch.
     */
    where?: registration_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_details to fetch.
     */
    orderBy?: registration_detailsOrderByWithRelationInput | registration_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registration_details.
     */
    cursor?: registration_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registration_details.
     */
    distinct?: Registration_detailsScalarFieldEnum | Registration_detailsScalarFieldEnum[]
  }

  /**
   * registration_details findFirstOrThrow
   */
  export type registration_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * Filter, which registration_details to fetch.
     */
    where?: registration_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_details to fetch.
     */
    orderBy?: registration_detailsOrderByWithRelationInput | registration_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for registration_details.
     */
    cursor?: registration_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of registration_details.
     */
    distinct?: Registration_detailsScalarFieldEnum | Registration_detailsScalarFieldEnum[]
  }

  /**
   * registration_details findMany
   */
  export type registration_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * Filter, which registration_details to fetch.
     */
    where?: registration_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of registration_details to fetch.
     */
    orderBy?: registration_detailsOrderByWithRelationInput | registration_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing registration_details.
     */
    cursor?: registration_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` registration_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` registration_details.
     */
    skip?: number
    distinct?: Registration_detailsScalarFieldEnum | Registration_detailsScalarFieldEnum[]
  }

  /**
   * registration_details create
   */
  export type registration_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * The data needed to create a registration_details.
     */
    data: XOR<registration_detailsCreateInput, registration_detailsUncheckedCreateInput>
  }

  /**
   * registration_details createMany
   */
  export type registration_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many registration_details.
     */
    data: registration_detailsCreateManyInput | registration_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * registration_details update
   */
  export type registration_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * The data needed to update a registration_details.
     */
    data: XOR<registration_detailsUpdateInput, registration_detailsUncheckedUpdateInput>
    /**
     * Choose, which registration_details to update.
     */
    where: registration_detailsWhereUniqueInput
  }

  /**
   * registration_details updateMany
   */
  export type registration_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update registration_details.
     */
    data: XOR<registration_detailsUpdateManyMutationInput, registration_detailsUncheckedUpdateManyInput>
    /**
     * Filter which registration_details to update
     */
    where?: registration_detailsWhereInput
  }

  /**
   * registration_details upsert
   */
  export type registration_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * The filter to search for the registration_details to update in case it exists.
     */
    where: registration_detailsWhereUniqueInput
    /**
     * In case the registration_details found by the `where` argument doesn't exist, create a new registration_details with this data.
     */
    create: XOR<registration_detailsCreateInput, registration_detailsUncheckedCreateInput>
    /**
     * In case the registration_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<registration_detailsUpdateInput, registration_detailsUncheckedUpdateInput>
  }

  /**
   * registration_details delete
   */
  export type registration_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
    /**
     * Filter which registration_details to delete.
     */
    where: registration_detailsWhereUniqueInput
  }

  /**
   * registration_details deleteMany
   */
  export type registration_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which registration_details to delete
     */
    where?: registration_detailsWhereInput
  }

  /**
   * registration_details without action
   */
  export type registration_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the registration_details
     */
    select?: registration_detailsSelect<ExtArgs> | null
  }


  /**
   * Model cart_details
   */

  export type AggregateCart_details = {
    _count: Cart_detailsCountAggregateOutputType | null
    _avg: Cart_detailsAvgAggregateOutputType | null
    _sum: Cart_detailsSumAggregateOutputType | null
    _min: Cart_detailsMinAggregateOutputType | null
    _max: Cart_detailsMaxAggregateOutputType | null
  }

  export type Cart_detailsAvgAggregateOutputType = {
    id: number | null
    product_id: number | null
    price: number | null
    quantity: number | null
    total_amount: number | null
    userId: number | null
    userAddressId: number | null
  }

  export type Cart_detailsSumAggregateOutputType = {
    id: number | null
    product_id: number | null
    price: number | null
    quantity: number | null
    total_amount: number | null
    userId: number | null
    userAddressId: number | null
  }

  export type Cart_detailsMinAggregateOutputType = {
    id: number | null
    product_id: number | null
    price: number | null
    quantity: number | null
    total_amount: number | null
    userId: number | null
    userAddressId: number | null
  }

  export type Cart_detailsMaxAggregateOutputType = {
    id: number | null
    product_id: number | null
    price: number | null
    quantity: number | null
    total_amount: number | null
    userId: number | null
    userAddressId: number | null
  }

  export type Cart_detailsCountAggregateOutputType = {
    id: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId: number
    userAddressId: number
    _all: number
  }


  export type Cart_detailsAvgAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    quantity?: true
    total_amount?: true
    userId?: true
    userAddressId?: true
  }

  export type Cart_detailsSumAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    quantity?: true
    total_amount?: true
    userId?: true
    userAddressId?: true
  }

  export type Cart_detailsMinAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    quantity?: true
    total_amount?: true
    userId?: true
    userAddressId?: true
  }

  export type Cart_detailsMaxAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    quantity?: true
    total_amount?: true
    userId?: true
    userAddressId?: true
  }

  export type Cart_detailsCountAggregateInputType = {
    id?: true
    product_id?: true
    price?: true
    quantity?: true
    total_amount?: true
    userId?: true
    userAddressId?: true
    _all?: true
  }

  export type Cart_detailsAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cart_details to aggregate.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned cart_details
    **/
    _count?: true | Cart_detailsCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Cart_detailsAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Cart_detailsSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Cart_detailsMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Cart_detailsMaxAggregateInputType
  }

  export type GetCart_detailsAggregateType<T extends Cart_detailsAggregateArgs> = {
        [P in keyof T & keyof AggregateCart_details]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateCart_details[P]>
      : GetScalarType<T[P], AggregateCart_details[P]>
  }




  export type cart_detailsGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: cart_detailsWhereInput
    orderBy?: cart_detailsOrderByWithAggregationInput | cart_detailsOrderByWithAggregationInput[]
    by: Cart_detailsScalarFieldEnum[] | Cart_detailsScalarFieldEnum
    having?: cart_detailsScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Cart_detailsCountAggregateInputType | true
    _avg?: Cart_detailsAvgAggregateInputType
    _sum?: Cart_detailsSumAggregateInputType
    _min?: Cart_detailsMinAggregateInputType
    _max?: Cart_detailsMaxAggregateInputType
  }

  export type Cart_detailsGroupByOutputType = {
    id: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId: number | null
    userAddressId: number | null
    _count: Cart_detailsCountAggregateOutputType | null
    _avg: Cart_detailsAvgAggregateOutputType | null
    _sum: Cart_detailsSumAggregateOutputType | null
    _min: Cart_detailsMinAggregateOutputType | null
    _max: Cart_detailsMaxAggregateOutputType | null
  }

  type GetCart_detailsGroupByPayload<T extends cart_detailsGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Cart_detailsGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Cart_detailsGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Cart_detailsGroupByOutputType[P]>
            : GetScalarType<T[P], Cart_detailsGroupByOutputType[P]>
        }
      >
    >


  export type cart_detailsSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    product_id?: boolean
    price?: boolean
    quantity?: boolean
    total_amount?: boolean
    userId?: boolean
    userAddressId?: boolean
    product_details?: boolean | cart_details$product_detailsArgs<ExtArgs>
    buy_now?: boolean | cart_details$buy_nowArgs<ExtArgs>
    user_address?: boolean | cart_details$user_addressArgs<ExtArgs>
    _count?: boolean | Cart_detailsCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["cart_details"]>


  export type cart_detailsSelectScalar = {
    id?: boolean
    product_id?: boolean
    price?: boolean
    quantity?: boolean
    total_amount?: boolean
    userId?: boolean
    userAddressId?: boolean
  }

  export type cart_detailsInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    product_details?: boolean | cart_details$product_detailsArgs<ExtArgs>
    buy_now?: boolean | cart_details$buy_nowArgs<ExtArgs>
    user_address?: boolean | cart_details$user_addressArgs<ExtArgs>
    _count?: boolean | Cart_detailsCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $cart_detailsPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "cart_details"
    objects: {
      product_details: Prisma.$product_detailsPayload<ExtArgs> | null
      buy_now: Prisma.$buy_nowPayload<ExtArgs>[]
      user_address: Prisma.$user_addressPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      product_id: number
      price: number
      quantity: number
      total_amount: number
      userId: number | null
      userAddressId: number | null
    }, ExtArgs["result"]["cart_details"]>
    composites: {}
  }

  type cart_detailsGetPayload<S extends boolean | null | undefined | cart_detailsDefaultArgs> = $Result.GetResult<Prisma.$cart_detailsPayload, S>

  type cart_detailsCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<cart_detailsFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Cart_detailsCountAggregateInputType | true
    }

  export interface cart_detailsDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['cart_details'], meta: { name: 'cart_details' } }
    /**
     * Find zero or one Cart_details that matches the filter.
     * @param {cart_detailsFindUniqueArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends cart_detailsFindUniqueArgs>(args: SelectSubset<T, cart_detailsFindUniqueArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Cart_details that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {cart_detailsFindUniqueOrThrowArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends cart_detailsFindUniqueOrThrowArgs>(args: SelectSubset<T, cart_detailsFindUniqueOrThrowArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Cart_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsFindFirstArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends cart_detailsFindFirstArgs>(args?: SelectSubset<T, cart_detailsFindFirstArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Cart_details that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsFindFirstOrThrowArgs} args - Arguments to find a Cart_details
     * @example
     * // Get one Cart_details
     * const cart_details = await prisma.cart_details.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends cart_detailsFindFirstOrThrowArgs>(args?: SelectSubset<T, cart_detailsFindFirstOrThrowArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Cart_details that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Cart_details
     * const cart_details = await prisma.cart_details.findMany()
     * 
     * // Get first 10 Cart_details
     * const cart_details = await prisma.cart_details.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const cart_detailsWithIdOnly = await prisma.cart_details.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends cart_detailsFindManyArgs>(args?: SelectSubset<T, cart_detailsFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Cart_details.
     * @param {cart_detailsCreateArgs} args - Arguments to create a Cart_details.
     * @example
     * // Create one Cart_details
     * const Cart_details = await prisma.cart_details.create({
     *   data: {
     *     // ... data to create a Cart_details
     *   }
     * })
     * 
     */
    create<T extends cart_detailsCreateArgs>(args: SelectSubset<T, cart_detailsCreateArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Cart_details.
     * @param {cart_detailsCreateManyArgs} args - Arguments to create many Cart_details.
     * @example
     * // Create many Cart_details
     * const cart_details = await prisma.cart_details.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends cart_detailsCreateManyArgs>(args?: SelectSubset<T, cart_detailsCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Cart_details.
     * @param {cart_detailsDeleteArgs} args - Arguments to delete one Cart_details.
     * @example
     * // Delete one Cart_details
     * const Cart_details = await prisma.cart_details.delete({
     *   where: {
     *     // ... filter to delete one Cart_details
     *   }
     * })
     * 
     */
    delete<T extends cart_detailsDeleteArgs>(args: SelectSubset<T, cart_detailsDeleteArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Cart_details.
     * @param {cart_detailsUpdateArgs} args - Arguments to update one Cart_details.
     * @example
     * // Update one Cart_details
     * const cart_details = await prisma.cart_details.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends cart_detailsUpdateArgs>(args: SelectSubset<T, cart_detailsUpdateArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Cart_details.
     * @param {cart_detailsDeleteManyArgs} args - Arguments to filter Cart_details to delete.
     * @example
     * // Delete a few Cart_details
     * const { count } = await prisma.cart_details.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends cart_detailsDeleteManyArgs>(args?: SelectSubset<T, cart_detailsDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Cart_details
     * const cart_details = await prisma.cart_details.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends cart_detailsUpdateManyArgs>(args: SelectSubset<T, cart_detailsUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Cart_details.
     * @param {cart_detailsUpsertArgs} args - Arguments to update or create a Cart_details.
     * @example
     * // Update or create a Cart_details
     * const cart_details = await prisma.cart_details.upsert({
     *   create: {
     *     // ... data to create a Cart_details
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Cart_details we want to update
     *   }
     * })
     */
    upsert<T extends cart_detailsUpsertArgs>(args: SelectSubset<T, cart_detailsUpsertArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsCountArgs} args - Arguments to filter Cart_details to count.
     * @example
     * // Count the number of Cart_details
     * const count = await prisma.cart_details.count({
     *   where: {
     *     // ... the filter for the Cart_details we want to count
     *   }
     * })
    **/
    count<T extends cart_detailsCountArgs>(
      args?: Subset<T, cart_detailsCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Cart_detailsCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Cart_detailsAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Cart_detailsAggregateArgs>(args: Subset<T, Cart_detailsAggregateArgs>): Prisma.PrismaPromise<GetCart_detailsAggregateType<T>>

    /**
     * Group by Cart_details.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {cart_detailsGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends cart_detailsGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: cart_detailsGroupByArgs['orderBy'] }
        : { orderBy?: cart_detailsGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, cart_detailsGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetCart_detailsGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the cart_details model
   */
  readonly fields: cart_detailsFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for cart_details.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__cart_detailsClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    product_details<T extends cart_details$product_detailsArgs<ExtArgs> = {}>(args?: Subset<T, cart_details$product_detailsArgs<ExtArgs>>): Prisma__product_detailsClient<$Result.GetResult<Prisma.$product_detailsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    buy_now<T extends cart_details$buy_nowArgs<ExtArgs> = {}>(args?: Subset<T, cart_details$buy_nowArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "findMany"> | Null>
    user_address<T extends cart_details$user_addressArgs<ExtArgs> = {}>(args?: Subset<T, cart_details$user_addressArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the cart_details model
   */ 
  interface cart_detailsFieldRefs {
    readonly id: FieldRef<"cart_details", 'Int'>
    readonly product_id: FieldRef<"cart_details", 'Int'>
    readonly price: FieldRef<"cart_details", 'Int'>
    readonly quantity: FieldRef<"cart_details", 'Int'>
    readonly total_amount: FieldRef<"cart_details", 'Int'>
    readonly userId: FieldRef<"cart_details", 'Int'>
    readonly userAddressId: FieldRef<"cart_details", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * cart_details findUnique
   */
  export type cart_detailsFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details findUniqueOrThrow
   */
  export type cart_detailsFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details findFirst
   */
  export type cart_detailsFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cart_details.
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cart_details.
     */
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * cart_details findFirstOrThrow
   */
  export type cart_detailsFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for cart_details.
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of cart_details.
     */
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * cart_details findMany
   */
  export type cart_detailsFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter, which cart_details to fetch.
     */
    where?: cart_detailsWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of cart_details to fetch.
     */
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing cart_details.
     */
    cursor?: cart_detailsWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` cart_details from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` cart_details.
     */
    skip?: number
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * cart_details create
   */
  export type cart_detailsCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * The data needed to create a cart_details.
     */
    data: XOR<cart_detailsCreateInput, cart_detailsUncheckedCreateInput>
  }

  /**
   * cart_details createMany
   */
  export type cart_detailsCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many cart_details.
     */
    data: cart_detailsCreateManyInput | cart_detailsCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * cart_details update
   */
  export type cart_detailsUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * The data needed to update a cart_details.
     */
    data: XOR<cart_detailsUpdateInput, cart_detailsUncheckedUpdateInput>
    /**
     * Choose, which cart_details to update.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details updateMany
   */
  export type cart_detailsUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update cart_details.
     */
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyInput>
    /**
     * Filter which cart_details to update
     */
    where?: cart_detailsWhereInput
  }

  /**
   * cart_details upsert
   */
  export type cart_detailsUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * The filter to search for the cart_details to update in case it exists.
     */
    where: cart_detailsWhereUniqueInput
    /**
     * In case the cart_details found by the `where` argument doesn't exist, create a new cart_details with this data.
     */
    create: XOR<cart_detailsCreateInput, cart_detailsUncheckedCreateInput>
    /**
     * In case the cart_details was found with the provided `where` argument, update it with this data.
     */
    update: XOR<cart_detailsUpdateInput, cart_detailsUncheckedUpdateInput>
  }

  /**
   * cart_details delete
   */
  export type cart_detailsDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    /**
     * Filter which cart_details to delete.
     */
    where: cart_detailsWhereUniqueInput
  }

  /**
   * cart_details deleteMany
   */
  export type cart_detailsDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which cart_details to delete
     */
    where?: cart_detailsWhereInput
  }

  /**
   * cart_details.product_details
   */
  export type cart_details$product_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the product_details
     */
    select?: product_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: product_detailsInclude<ExtArgs> | null
    where?: product_detailsWhereInput
  }

  /**
   * cart_details.buy_now
   */
  export type cart_details$buy_nowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    where?: buy_nowWhereInput
    orderBy?: buy_nowOrderByWithRelationInput | buy_nowOrderByWithRelationInput[]
    cursor?: buy_nowWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Buy_nowScalarFieldEnum | Buy_nowScalarFieldEnum[]
  }

  /**
   * cart_details.user_address
   */
  export type cart_details$user_addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    where?: user_addressWhereInput
  }

  /**
   * cart_details without action
   */
  export type cart_detailsDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
  }


  /**
   * Model buy_now
   */

  export type AggregateBuy_now = {
    _count: Buy_nowCountAggregateOutputType | null
    _avg: Buy_nowAvgAggregateOutputType | null
    _sum: Buy_nowSumAggregateOutputType | null
    _min: Buy_nowMinAggregateOutputType | null
    _max: Buy_nowMaxAggregateOutputType | null
  }

  export type Buy_nowAvgAggregateOutputType = {
    id: number | null
    cart_id: number | null
    total_amount: number | null
  }

  export type Buy_nowSumAggregateOutputType = {
    id: number | null
    cart_id: number | null
    total_amount: number | null
  }

  export type Buy_nowMinAggregateOutputType = {
    id: number | null
    cart_id: number | null
    total_amount: number | null
  }

  export type Buy_nowMaxAggregateOutputType = {
    id: number | null
    cart_id: number | null
    total_amount: number | null
  }

  export type Buy_nowCountAggregateOutputType = {
    id: number
    cart_id: number
    total_amount: number
    _all: number
  }


  export type Buy_nowAvgAggregateInputType = {
    id?: true
    cart_id?: true
    total_amount?: true
  }

  export type Buy_nowSumAggregateInputType = {
    id?: true
    cart_id?: true
    total_amount?: true
  }

  export type Buy_nowMinAggregateInputType = {
    id?: true
    cart_id?: true
    total_amount?: true
  }

  export type Buy_nowMaxAggregateInputType = {
    id?: true
    cart_id?: true
    total_amount?: true
  }

  export type Buy_nowCountAggregateInputType = {
    id?: true
    cart_id?: true
    total_amount?: true
    _all?: true
  }

  export type Buy_nowAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buy_now to aggregate.
     */
    where?: buy_nowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buy_nows to fetch.
     */
    orderBy?: buy_nowOrderByWithRelationInput | buy_nowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: buy_nowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buy_nows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buy_nows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned buy_nows
    **/
    _count?: true | Buy_nowCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: Buy_nowAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: Buy_nowSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: Buy_nowMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: Buy_nowMaxAggregateInputType
  }

  export type GetBuy_nowAggregateType<T extends Buy_nowAggregateArgs> = {
        [P in keyof T & keyof AggregateBuy_now]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateBuy_now[P]>
      : GetScalarType<T[P], AggregateBuy_now[P]>
  }




  export type buy_nowGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: buy_nowWhereInput
    orderBy?: buy_nowOrderByWithAggregationInput | buy_nowOrderByWithAggregationInput[]
    by: Buy_nowScalarFieldEnum[] | Buy_nowScalarFieldEnum
    having?: buy_nowScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: Buy_nowCountAggregateInputType | true
    _avg?: Buy_nowAvgAggregateInputType
    _sum?: Buy_nowSumAggregateInputType
    _min?: Buy_nowMinAggregateInputType
    _max?: Buy_nowMaxAggregateInputType
  }

  export type Buy_nowGroupByOutputType = {
    id: number
    cart_id: number
    total_amount: number
    _count: Buy_nowCountAggregateOutputType | null
    _avg: Buy_nowAvgAggregateOutputType | null
    _sum: Buy_nowSumAggregateOutputType | null
    _min: Buy_nowMinAggregateOutputType | null
    _max: Buy_nowMaxAggregateOutputType | null
  }

  type GetBuy_nowGroupByPayload<T extends buy_nowGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<Buy_nowGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof Buy_nowGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], Buy_nowGroupByOutputType[P]>
            : GetScalarType<T[P], Buy_nowGroupByOutputType[P]>
        }
      >
    >


  export type buy_nowSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    cart_id?: boolean
    total_amount?: boolean
    cart_details?: boolean | buy_now$cart_detailsArgs<ExtArgs>
  }, ExtArgs["result"]["buy_now"]>


  export type buy_nowSelectScalar = {
    id?: boolean
    cart_id?: boolean
    total_amount?: boolean
  }

  export type buy_nowInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | buy_now$cart_detailsArgs<ExtArgs>
  }

  export type $buy_nowPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "buy_now"
    objects: {
      cart_details: Prisma.$cart_detailsPayload<ExtArgs> | null
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      cart_id: number
      total_amount: number
    }, ExtArgs["result"]["buy_now"]>
    composites: {}
  }

  type buy_nowGetPayload<S extends boolean | null | undefined | buy_nowDefaultArgs> = $Result.GetResult<Prisma.$buy_nowPayload, S>

  type buy_nowCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<buy_nowFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: Buy_nowCountAggregateInputType | true
    }

  export interface buy_nowDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['buy_now'], meta: { name: 'buy_now' } }
    /**
     * Find zero or one Buy_now that matches the filter.
     * @param {buy_nowFindUniqueArgs} args - Arguments to find a Buy_now
     * @example
     * // Get one Buy_now
     * const buy_now = await prisma.buy_now.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends buy_nowFindUniqueArgs>(args: SelectSubset<T, buy_nowFindUniqueArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one Buy_now that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {buy_nowFindUniqueOrThrowArgs} args - Arguments to find a Buy_now
     * @example
     * // Get one Buy_now
     * const buy_now = await prisma.buy_now.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends buy_nowFindUniqueOrThrowArgs>(args: SelectSubset<T, buy_nowFindUniqueOrThrowArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first Buy_now that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buy_nowFindFirstArgs} args - Arguments to find a Buy_now
     * @example
     * // Get one Buy_now
     * const buy_now = await prisma.buy_now.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends buy_nowFindFirstArgs>(args?: SelectSubset<T, buy_nowFindFirstArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first Buy_now that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buy_nowFindFirstOrThrowArgs} args - Arguments to find a Buy_now
     * @example
     * // Get one Buy_now
     * const buy_now = await prisma.buy_now.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends buy_nowFindFirstOrThrowArgs>(args?: SelectSubset<T, buy_nowFindFirstOrThrowArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more Buy_nows that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buy_nowFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all Buy_nows
     * const buy_nows = await prisma.buy_now.findMany()
     * 
     * // Get first 10 Buy_nows
     * const buy_nows = await prisma.buy_now.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const buy_nowWithIdOnly = await prisma.buy_now.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends buy_nowFindManyArgs>(args?: SelectSubset<T, buy_nowFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a Buy_now.
     * @param {buy_nowCreateArgs} args - Arguments to create a Buy_now.
     * @example
     * // Create one Buy_now
     * const Buy_now = await prisma.buy_now.create({
     *   data: {
     *     // ... data to create a Buy_now
     *   }
     * })
     * 
     */
    create<T extends buy_nowCreateArgs>(args: SelectSubset<T, buy_nowCreateArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many Buy_nows.
     * @param {buy_nowCreateManyArgs} args - Arguments to create many Buy_nows.
     * @example
     * // Create many Buy_nows
     * const buy_now = await prisma.buy_now.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends buy_nowCreateManyArgs>(args?: SelectSubset<T, buy_nowCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a Buy_now.
     * @param {buy_nowDeleteArgs} args - Arguments to delete one Buy_now.
     * @example
     * // Delete one Buy_now
     * const Buy_now = await prisma.buy_now.delete({
     *   where: {
     *     // ... filter to delete one Buy_now
     *   }
     * })
     * 
     */
    delete<T extends buy_nowDeleteArgs>(args: SelectSubset<T, buy_nowDeleteArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one Buy_now.
     * @param {buy_nowUpdateArgs} args - Arguments to update one Buy_now.
     * @example
     * // Update one Buy_now
     * const buy_now = await prisma.buy_now.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends buy_nowUpdateArgs>(args: SelectSubset<T, buy_nowUpdateArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more Buy_nows.
     * @param {buy_nowDeleteManyArgs} args - Arguments to filter Buy_nows to delete.
     * @example
     * // Delete a few Buy_nows
     * const { count } = await prisma.buy_now.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends buy_nowDeleteManyArgs>(args?: SelectSubset<T, buy_nowDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more Buy_nows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buy_nowUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many Buy_nows
     * const buy_now = await prisma.buy_now.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends buy_nowUpdateManyArgs>(args: SelectSubset<T, buy_nowUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one Buy_now.
     * @param {buy_nowUpsertArgs} args - Arguments to update or create a Buy_now.
     * @example
     * // Update or create a Buy_now
     * const buy_now = await prisma.buy_now.upsert({
     *   create: {
     *     // ... data to create a Buy_now
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the Buy_now we want to update
     *   }
     * })
     */
    upsert<T extends buy_nowUpsertArgs>(args: SelectSubset<T, buy_nowUpsertArgs<ExtArgs>>): Prisma__buy_nowClient<$Result.GetResult<Prisma.$buy_nowPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of Buy_nows.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buy_nowCountArgs} args - Arguments to filter Buy_nows to count.
     * @example
     * // Count the number of Buy_nows
     * const count = await prisma.buy_now.count({
     *   where: {
     *     // ... the filter for the Buy_nows we want to count
     *   }
     * })
    **/
    count<T extends buy_nowCountArgs>(
      args?: Subset<T, buy_nowCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], Buy_nowCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a Buy_now.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {Buy_nowAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends Buy_nowAggregateArgs>(args: Subset<T, Buy_nowAggregateArgs>): Prisma.PrismaPromise<GetBuy_nowAggregateType<T>>

    /**
     * Group by Buy_now.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {buy_nowGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends buy_nowGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: buy_nowGroupByArgs['orderBy'] }
        : { orderBy?: buy_nowGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, buy_nowGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetBuy_nowGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the buy_now model
   */
  readonly fields: buy_nowFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for buy_now.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__buy_nowClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cart_details<T extends buy_now$cart_detailsArgs<ExtArgs> = {}>(args?: Subset<T, buy_now$cart_detailsArgs<ExtArgs>>): Prisma__cart_detailsClient<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findUniqueOrThrow"> | null, null, ExtArgs>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the buy_now model
   */ 
  interface buy_nowFieldRefs {
    readonly id: FieldRef<"buy_now", 'Int'>
    readonly cart_id: FieldRef<"buy_now", 'Int'>
    readonly total_amount: FieldRef<"buy_now", 'Int'>
  }
    

  // Custom InputTypes
  /**
   * buy_now findUnique
   */
  export type buy_nowFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * Filter, which buy_now to fetch.
     */
    where: buy_nowWhereUniqueInput
  }

  /**
   * buy_now findUniqueOrThrow
   */
  export type buy_nowFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * Filter, which buy_now to fetch.
     */
    where: buy_nowWhereUniqueInput
  }

  /**
   * buy_now findFirst
   */
  export type buy_nowFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * Filter, which buy_now to fetch.
     */
    where?: buy_nowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buy_nows to fetch.
     */
    orderBy?: buy_nowOrderByWithRelationInput | buy_nowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buy_nows.
     */
    cursor?: buy_nowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buy_nows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buy_nows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buy_nows.
     */
    distinct?: Buy_nowScalarFieldEnum | Buy_nowScalarFieldEnum[]
  }

  /**
   * buy_now findFirstOrThrow
   */
  export type buy_nowFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * Filter, which buy_now to fetch.
     */
    where?: buy_nowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buy_nows to fetch.
     */
    orderBy?: buy_nowOrderByWithRelationInput | buy_nowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for buy_nows.
     */
    cursor?: buy_nowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buy_nows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buy_nows.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of buy_nows.
     */
    distinct?: Buy_nowScalarFieldEnum | Buy_nowScalarFieldEnum[]
  }

  /**
   * buy_now findMany
   */
  export type buy_nowFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * Filter, which buy_nows to fetch.
     */
    where?: buy_nowWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of buy_nows to fetch.
     */
    orderBy?: buy_nowOrderByWithRelationInput | buy_nowOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing buy_nows.
     */
    cursor?: buy_nowWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` buy_nows from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` buy_nows.
     */
    skip?: number
    distinct?: Buy_nowScalarFieldEnum | Buy_nowScalarFieldEnum[]
  }

  /**
   * buy_now create
   */
  export type buy_nowCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * The data needed to create a buy_now.
     */
    data: XOR<buy_nowCreateInput, buy_nowUncheckedCreateInput>
  }

  /**
   * buy_now createMany
   */
  export type buy_nowCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many buy_nows.
     */
    data: buy_nowCreateManyInput | buy_nowCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * buy_now update
   */
  export type buy_nowUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * The data needed to update a buy_now.
     */
    data: XOR<buy_nowUpdateInput, buy_nowUncheckedUpdateInput>
    /**
     * Choose, which buy_now to update.
     */
    where: buy_nowWhereUniqueInput
  }

  /**
   * buy_now updateMany
   */
  export type buy_nowUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update buy_nows.
     */
    data: XOR<buy_nowUpdateManyMutationInput, buy_nowUncheckedUpdateManyInput>
    /**
     * Filter which buy_nows to update
     */
    where?: buy_nowWhereInput
  }

  /**
   * buy_now upsert
   */
  export type buy_nowUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * The filter to search for the buy_now to update in case it exists.
     */
    where: buy_nowWhereUniqueInput
    /**
     * In case the buy_now found by the `where` argument doesn't exist, create a new buy_now with this data.
     */
    create: XOR<buy_nowCreateInput, buy_nowUncheckedCreateInput>
    /**
     * In case the buy_now was found with the provided `where` argument, update it with this data.
     */
    update: XOR<buy_nowUpdateInput, buy_nowUncheckedUpdateInput>
  }

  /**
   * buy_now delete
   */
  export type buy_nowDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
    /**
     * Filter which buy_now to delete.
     */
    where: buy_nowWhereUniqueInput
  }

  /**
   * buy_now deleteMany
   */
  export type buy_nowDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which buy_nows to delete
     */
    where?: buy_nowWhereInput
  }

  /**
   * buy_now.cart_details
   */
  export type buy_now$cart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    where?: cart_detailsWhereInput
  }

  /**
   * buy_now without action
   */
  export type buy_nowDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the buy_now
     */
    select?: buy_nowSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: buy_nowInclude<ExtArgs> | null
  }


  /**
   * Model user_address
   */

  export type AggregateUser_address = {
    _count: User_addressCountAggregateOutputType | null
    _avg: User_addressAvgAggregateOutputType | null
    _sum: User_addressSumAggregateOutputType | null
    _min: User_addressMinAggregateOutputType | null
    _max: User_addressMaxAggregateOutputType | null
  }

  export type User_addressAvgAggregateOutputType = {
    id: number | null
    pincode: number | null
  }

  export type User_addressSumAggregateOutputType = {
    id: number | null
    pincode: number | null
  }

  export type User_addressMinAggregateOutputType = {
    id: number | null
    house_number: string | null
    society_name: string | null
    landmark: string | null
    pincode: number | null
    state: string | null
    city: string | null
  }

  export type User_addressMaxAggregateOutputType = {
    id: number | null
    house_number: string | null
    society_name: string | null
    landmark: string | null
    pincode: number | null
    state: string | null
    city: string | null
  }

  export type User_addressCountAggregateOutputType = {
    id: number
    house_number: number
    society_name: number
    landmark: number
    pincode: number
    state: number
    city: number
    _all: number
  }


  export type User_addressAvgAggregateInputType = {
    id?: true
    pincode?: true
  }

  export type User_addressSumAggregateInputType = {
    id?: true
    pincode?: true
  }

  export type User_addressMinAggregateInputType = {
    id?: true
    house_number?: true
    society_name?: true
    landmark?: true
    pincode?: true
    state?: true
    city?: true
  }

  export type User_addressMaxAggregateInputType = {
    id?: true
    house_number?: true
    society_name?: true
    landmark?: true
    pincode?: true
    state?: true
    city?: true
  }

  export type User_addressCountAggregateInputType = {
    id?: true
    house_number?: true
    society_name?: true
    landmark?: true
    pincode?: true
    state?: true
    city?: true
    _all?: true
  }

  export type User_addressAggregateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_address to aggregate.
     */
    where?: user_addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_addresses to fetch.
     */
    orderBy?: user_addressOrderByWithRelationInput | user_addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the start position
     */
    cursor?: user_addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Count returned user_addresses
    **/
    _count?: true | User_addressCountAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to average
    **/
    _avg?: User_addressAvgAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to sum
    **/
    _sum?: User_addressSumAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the minimum value
    **/
    _min?: User_addressMinAggregateInputType
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/aggregations Aggregation Docs}
     * 
     * Select which fields to find the maximum value
    **/
    _max?: User_addressMaxAggregateInputType
  }

  export type GetUser_addressAggregateType<T extends User_addressAggregateArgs> = {
        [P in keyof T & keyof AggregateUser_address]: P extends '_count' | 'count'
      ? T[P] extends true
        ? number
        : GetScalarType<T[P], AggregateUser_address[P]>
      : GetScalarType<T[P], AggregateUser_address[P]>
  }




  export type user_addressGroupByArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    where?: user_addressWhereInput
    orderBy?: user_addressOrderByWithAggregationInput | user_addressOrderByWithAggregationInput[]
    by: User_addressScalarFieldEnum[] | User_addressScalarFieldEnum
    having?: user_addressScalarWhereWithAggregatesInput
    take?: number
    skip?: number
    _count?: User_addressCountAggregateInputType | true
    _avg?: User_addressAvgAggregateInputType
    _sum?: User_addressSumAggregateInputType
    _min?: User_addressMinAggregateInputType
    _max?: User_addressMaxAggregateInputType
  }

  export type User_addressGroupByOutputType = {
    id: number
    house_number: string
    society_name: string
    landmark: string
    pincode: number
    state: string
    city: string
    _count: User_addressCountAggregateOutputType | null
    _avg: User_addressAvgAggregateOutputType | null
    _sum: User_addressSumAggregateOutputType | null
    _min: User_addressMinAggregateOutputType | null
    _max: User_addressMaxAggregateOutputType | null
  }

  type GetUser_addressGroupByPayload<T extends user_addressGroupByArgs> = Prisma.PrismaPromise<
    Array<
      PickEnumerable<User_addressGroupByOutputType, T['by']> &
        {
          [P in ((keyof T) & (keyof User_addressGroupByOutputType))]: P extends '_count'
            ? T[P] extends boolean
              ? number
              : GetScalarType<T[P], User_addressGroupByOutputType[P]>
            : GetScalarType<T[P], User_addressGroupByOutputType[P]>
        }
      >
    >


  export type user_addressSelect<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = $Extensions.GetSelect<{
    id?: boolean
    house_number?: boolean
    society_name?: boolean
    landmark?: boolean
    pincode?: boolean
    state?: boolean
    city?: boolean
    cart_details?: boolean | user_address$cart_detailsArgs<ExtArgs>
    _count?: boolean | User_addressCountOutputTypeDefaultArgs<ExtArgs>
  }, ExtArgs["result"]["user_address"]>


  export type user_addressSelectScalar = {
    id?: boolean
    house_number?: boolean
    society_name?: boolean
    landmark?: boolean
    pincode?: boolean
    state?: boolean
    city?: boolean
  }

  export type user_addressInclude<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    cart_details?: boolean | user_address$cart_detailsArgs<ExtArgs>
    _count?: boolean | User_addressCountOutputTypeDefaultArgs<ExtArgs>
  }

  export type $user_addressPayload<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    name: "user_address"
    objects: {
      cart_details: Prisma.$cart_detailsPayload<ExtArgs>[]
    }
    scalars: $Extensions.GetPayloadResult<{
      id: number
      house_number: string
      society_name: string
      landmark: string
      pincode: number
      state: string
      city: string
    }, ExtArgs["result"]["user_address"]>
    composites: {}
  }

  type user_addressGetPayload<S extends boolean | null | undefined | user_addressDefaultArgs> = $Result.GetResult<Prisma.$user_addressPayload, S>

  type user_addressCountArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = 
    Omit<user_addressFindManyArgs, 'select' | 'include' | 'distinct'> & {
      select?: User_addressCountAggregateInputType | true
    }

  export interface user_addressDelegate<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> {
    [K: symbol]: { types: Prisma.TypeMap<ExtArgs>['model']['user_address'], meta: { name: 'user_address' } }
    /**
     * Find zero or one User_address that matches the filter.
     * @param {user_addressFindUniqueArgs} args - Arguments to find a User_address
     * @example
     * // Get one User_address
     * const user_address = await prisma.user_address.findUnique({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUnique<T extends user_addressFindUniqueArgs>(args: SelectSubset<T, user_addressFindUniqueArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "findUnique"> | null, null, ExtArgs>

    /**
     * Find one User_address that matches the filter or throw an error with `error.code='P2025'` 
     * if no matches were found.
     * @param {user_addressFindUniqueOrThrowArgs} args - Arguments to find a User_address
     * @example
     * // Get one User_address
     * const user_address = await prisma.user_address.findUniqueOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findUniqueOrThrow<T extends user_addressFindUniqueOrThrowArgs>(args: SelectSubset<T, user_addressFindUniqueOrThrowArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "findUniqueOrThrow">, never, ExtArgs>

    /**
     * Find the first User_address that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_addressFindFirstArgs} args - Arguments to find a User_address
     * @example
     * // Get one User_address
     * const user_address = await prisma.user_address.findFirst({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirst<T extends user_addressFindFirstArgs>(args?: SelectSubset<T, user_addressFindFirstArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "findFirst"> | null, null, ExtArgs>

    /**
     * Find the first User_address that matches the filter or
     * throw `PrismaKnownClientError` with `P2025` code if no matches were found.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_addressFindFirstOrThrowArgs} args - Arguments to find a User_address
     * @example
     * // Get one User_address
     * const user_address = await prisma.user_address.findFirstOrThrow({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     */
    findFirstOrThrow<T extends user_addressFindFirstOrThrowArgs>(args?: SelectSubset<T, user_addressFindFirstOrThrowArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "findFirstOrThrow">, never, ExtArgs>

    /**
     * Find zero or more User_addresses that matches the filter.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_addressFindManyArgs} args - Arguments to filter and select certain fields only.
     * @example
     * // Get all User_addresses
     * const user_addresses = await prisma.user_address.findMany()
     * 
     * // Get first 10 User_addresses
     * const user_addresses = await prisma.user_address.findMany({ take: 10 })
     * 
     * // Only select the `id`
     * const user_addressWithIdOnly = await prisma.user_address.findMany({ select: { id: true } })
     * 
     */
    findMany<T extends user_addressFindManyArgs>(args?: SelectSubset<T, user_addressFindManyArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "findMany">>

    /**
     * Create a User_address.
     * @param {user_addressCreateArgs} args - Arguments to create a User_address.
     * @example
     * // Create one User_address
     * const User_address = await prisma.user_address.create({
     *   data: {
     *     // ... data to create a User_address
     *   }
     * })
     * 
     */
    create<T extends user_addressCreateArgs>(args: SelectSubset<T, user_addressCreateArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "create">, never, ExtArgs>

    /**
     * Create many User_addresses.
     * @param {user_addressCreateManyArgs} args - Arguments to create many User_addresses.
     * @example
     * // Create many User_addresses
     * const user_address = await prisma.user_address.createMany({
     *   data: [
     *     // ... provide data here
     *   ]
     * })
     *     
     */
    createMany<T extends user_addressCreateManyArgs>(args?: SelectSubset<T, user_addressCreateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Delete a User_address.
     * @param {user_addressDeleteArgs} args - Arguments to delete one User_address.
     * @example
     * // Delete one User_address
     * const User_address = await prisma.user_address.delete({
     *   where: {
     *     // ... filter to delete one User_address
     *   }
     * })
     * 
     */
    delete<T extends user_addressDeleteArgs>(args: SelectSubset<T, user_addressDeleteArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "delete">, never, ExtArgs>

    /**
     * Update one User_address.
     * @param {user_addressUpdateArgs} args - Arguments to update one User_address.
     * @example
     * // Update one User_address
     * const user_address = await prisma.user_address.update({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    update<T extends user_addressUpdateArgs>(args: SelectSubset<T, user_addressUpdateArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "update">, never, ExtArgs>

    /**
     * Delete zero or more User_addresses.
     * @param {user_addressDeleteManyArgs} args - Arguments to filter User_addresses to delete.
     * @example
     * // Delete a few User_addresses
     * const { count } = await prisma.user_address.deleteMany({
     *   where: {
     *     // ... provide filter here
     *   }
     * })
     * 
     */
    deleteMany<T extends user_addressDeleteManyArgs>(args?: SelectSubset<T, user_addressDeleteManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Update zero or more User_addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_addressUpdateManyArgs} args - Arguments to update one or more rows.
     * @example
     * // Update many User_addresses
     * const user_address = await prisma.user_address.updateMany({
     *   where: {
     *     // ... provide filter here
     *   },
     *   data: {
     *     // ... provide data here
     *   }
     * })
     * 
     */
    updateMany<T extends user_addressUpdateManyArgs>(args: SelectSubset<T, user_addressUpdateManyArgs<ExtArgs>>): Prisma.PrismaPromise<BatchPayload>

    /**
     * Create or update one User_address.
     * @param {user_addressUpsertArgs} args - Arguments to update or create a User_address.
     * @example
     * // Update or create a User_address
     * const user_address = await prisma.user_address.upsert({
     *   create: {
     *     // ... data to create a User_address
     *   },
     *   update: {
     *     // ... in case it already exists, update
     *   },
     *   where: {
     *     // ... the filter for the User_address we want to update
     *   }
     * })
     */
    upsert<T extends user_addressUpsertArgs>(args: SelectSubset<T, user_addressUpsertArgs<ExtArgs>>): Prisma__user_addressClient<$Result.GetResult<Prisma.$user_addressPayload<ExtArgs>, T, "upsert">, never, ExtArgs>


    /**
     * Count the number of User_addresses.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_addressCountArgs} args - Arguments to filter User_addresses to count.
     * @example
     * // Count the number of User_addresses
     * const count = await prisma.user_address.count({
     *   where: {
     *     // ... the filter for the User_addresses we want to count
     *   }
     * })
    **/
    count<T extends user_addressCountArgs>(
      args?: Subset<T, user_addressCountArgs>,
    ): Prisma.PrismaPromise<
      T extends $Utils.Record<'select', any>
        ? T['select'] extends true
          ? number
          : GetScalarType<T['select'], User_addressCountAggregateOutputType>
        : number
    >

    /**
     * Allows you to perform aggregations operations on a User_address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {User_addressAggregateArgs} args - Select which aggregations you would like to apply and on what fields.
     * @example
     * // Ordered by age ascending
     * // Where email contains prisma.io
     * // Limited to the 10 users
     * const aggregations = await prisma.user.aggregate({
     *   _avg: {
     *     age: true,
     *   },
     *   where: {
     *     email: {
     *       contains: "prisma.io",
     *     },
     *   },
     *   orderBy: {
     *     age: "asc",
     *   },
     *   take: 10,
     * })
    **/
    aggregate<T extends User_addressAggregateArgs>(args: Subset<T, User_addressAggregateArgs>): Prisma.PrismaPromise<GetUser_addressAggregateType<T>>

    /**
     * Group by User_address.
     * Note, that providing `undefined` is treated as the value not being there.
     * Read more here: https://pris.ly/d/null-undefined
     * @param {user_addressGroupByArgs} args - Group by arguments.
     * @example
     * // Group by city, order by createdAt, get count
     * const result = await prisma.user.groupBy({
     *   by: ['city', 'createdAt'],
     *   orderBy: {
     *     createdAt: true
     *   },
     *   _count: {
     *     _all: true
     *   },
     * })
     * 
    **/
    groupBy<
      T extends user_addressGroupByArgs,
      HasSelectOrTake extends Or<
        Extends<'skip', Keys<T>>,
        Extends<'take', Keys<T>>
      >,
      OrderByArg extends True extends HasSelectOrTake
        ? { orderBy: user_addressGroupByArgs['orderBy'] }
        : { orderBy?: user_addressGroupByArgs['orderBy'] },
      OrderFields extends ExcludeUnderscoreKeys<Keys<MaybeTupleToUnion<T['orderBy']>>>,
      ByFields extends MaybeTupleToUnion<T['by']>,
      ByValid extends Has<ByFields, OrderFields>,
      HavingFields extends GetHavingFields<T['having']>,
      HavingValid extends Has<ByFields, HavingFields>,
      ByEmpty extends T['by'] extends never[] ? True : False,
      InputErrors extends ByEmpty extends True
      ? `Error: "by" must not be empty.`
      : HavingValid extends False
      ? {
          [P in HavingFields]: P extends ByFields
            ? never
            : P extends string
            ? `Error: Field "${P}" used in "having" needs to be provided in "by".`
            : [
                Error,
                'Field ',
                P,
                ` in "having" needs to be provided in "by"`,
              ]
        }[HavingFields]
      : 'take' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "take", you also need to provide "orderBy"'
      : 'skip' extends Keys<T>
      ? 'orderBy' extends Keys<T>
        ? ByValid extends True
          ? {}
          : {
              [P in OrderFields]: P extends ByFields
                ? never
                : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
            }[OrderFields]
        : 'Error: If you provide "skip", you also need to provide "orderBy"'
      : ByValid extends True
      ? {}
      : {
          [P in OrderFields]: P extends ByFields
            ? never
            : `Error: Field "${P}" in "orderBy" needs to be provided in "by"`
        }[OrderFields]
    >(args: SubsetIntersection<T, user_addressGroupByArgs, OrderByArg> & InputErrors): {} extends InputErrors ? GetUser_addressGroupByPayload<T> : Prisma.PrismaPromise<InputErrors>
  /**
   * Fields of the user_address model
   */
  readonly fields: user_addressFieldRefs;
  }

  /**
   * The delegate class that acts as a "Promise-like" for user_address.
   * Why is this prefixed with `Prisma__`?
   * Because we want to prevent naming conflicts as mentioned in
   * https://github.com/prisma/prisma-client-js/issues/707
   */
  export interface Prisma__user_addressClient<T, Null = never, ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> extends Prisma.PrismaPromise<T> {
    readonly [Symbol.toStringTag]: "PrismaPromise"
    cart_details<T extends user_address$cart_detailsArgs<ExtArgs> = {}>(args?: Subset<T, user_address$cart_detailsArgs<ExtArgs>>): Prisma.PrismaPromise<$Result.GetResult<Prisma.$cart_detailsPayload<ExtArgs>, T, "findMany"> | Null>
    /**
     * Attaches callbacks for the resolution and/or rejection of the Promise.
     * @param onfulfilled The callback to execute when the Promise is resolved.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of which ever callback is executed.
     */
    then<TResult1 = T, TResult2 = never>(onfulfilled?: ((value: T) => TResult1 | PromiseLike<TResult1>) | undefined | null, onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null): $Utils.JsPromise<TResult1 | TResult2>
    /**
     * Attaches a callback for only the rejection of the Promise.
     * @param onrejected The callback to execute when the Promise is rejected.
     * @returns A Promise for the completion of the callback.
     */
    catch<TResult = never>(onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null): $Utils.JsPromise<T | TResult>
    /**
     * Attaches a callback that is invoked when the Promise is settled (fulfilled or rejected). The
     * resolved value cannot be modified from the callback.
     * @param onfinally The callback to execute when the Promise is settled (fulfilled or rejected).
     * @returns A Promise for the completion of the callback.
     */
    finally(onfinally?: (() => void) | undefined | null): $Utils.JsPromise<T>
  }




  /**
   * Fields of the user_address model
   */ 
  interface user_addressFieldRefs {
    readonly id: FieldRef<"user_address", 'Int'>
    readonly house_number: FieldRef<"user_address", 'String'>
    readonly society_name: FieldRef<"user_address", 'String'>
    readonly landmark: FieldRef<"user_address", 'String'>
    readonly pincode: FieldRef<"user_address", 'Int'>
    readonly state: FieldRef<"user_address", 'String'>
    readonly city: FieldRef<"user_address", 'String'>
  }
    

  // Custom InputTypes
  /**
   * user_address findUnique
   */
  export type user_addressFindUniqueArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * Filter, which user_address to fetch.
     */
    where: user_addressWhereUniqueInput
  }

  /**
   * user_address findUniqueOrThrow
   */
  export type user_addressFindUniqueOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * Filter, which user_address to fetch.
     */
    where: user_addressWhereUniqueInput
  }

  /**
   * user_address findFirst
   */
  export type user_addressFindFirstArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * Filter, which user_address to fetch.
     */
    where?: user_addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_addresses to fetch.
     */
    orderBy?: user_addressOrderByWithRelationInput | user_addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_addresses.
     */
    cursor?: user_addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_addresses.
     */
    distinct?: User_addressScalarFieldEnum | User_addressScalarFieldEnum[]
  }

  /**
   * user_address findFirstOrThrow
   */
  export type user_addressFindFirstOrThrowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * Filter, which user_address to fetch.
     */
    where?: user_addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_addresses to fetch.
     */
    orderBy?: user_addressOrderByWithRelationInput | user_addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for searching for user_addresses.
     */
    cursor?: user_addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_addresses.
     */
    skip?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/distinct Distinct Docs}
     * 
     * Filter by unique combinations of user_addresses.
     */
    distinct?: User_addressScalarFieldEnum | User_addressScalarFieldEnum[]
  }

  /**
   * user_address findMany
   */
  export type user_addressFindManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * Filter, which user_addresses to fetch.
     */
    where?: user_addressWhereInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/sorting Sorting Docs}
     * 
     * Determine the order of user_addresses to fetch.
     */
    orderBy?: user_addressOrderByWithRelationInput | user_addressOrderByWithRelationInput[]
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination#cursor-based-pagination Cursor Docs}
     * 
     * Sets the position for listing user_addresses.
     */
    cursor?: user_addressWhereUniqueInput
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Take `±n` user_addresses from the position of the cursor.
     */
    take?: number
    /**
     * {@link https://www.prisma.io/docs/concepts/components/prisma-client/pagination Pagination Docs}
     * 
     * Skip the first `n` user_addresses.
     */
    skip?: number
    distinct?: User_addressScalarFieldEnum | User_addressScalarFieldEnum[]
  }

  /**
   * user_address create
   */
  export type user_addressCreateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * The data needed to create a user_address.
     */
    data: XOR<user_addressCreateInput, user_addressUncheckedCreateInput>
  }

  /**
   * user_address createMany
   */
  export type user_addressCreateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to create many user_addresses.
     */
    data: user_addressCreateManyInput | user_addressCreateManyInput[]
    skipDuplicates?: boolean
  }

  /**
   * user_address update
   */
  export type user_addressUpdateArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * The data needed to update a user_address.
     */
    data: XOR<user_addressUpdateInput, user_addressUncheckedUpdateInput>
    /**
     * Choose, which user_address to update.
     */
    where: user_addressWhereUniqueInput
  }

  /**
   * user_address updateMany
   */
  export type user_addressUpdateManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * The data used to update user_addresses.
     */
    data: XOR<user_addressUpdateManyMutationInput, user_addressUncheckedUpdateManyInput>
    /**
     * Filter which user_addresses to update
     */
    where?: user_addressWhereInput
  }

  /**
   * user_address upsert
   */
  export type user_addressUpsertArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * The filter to search for the user_address to update in case it exists.
     */
    where: user_addressWhereUniqueInput
    /**
     * In case the user_address found by the `where` argument doesn't exist, create a new user_address with this data.
     */
    create: XOR<user_addressCreateInput, user_addressUncheckedCreateInput>
    /**
     * In case the user_address was found with the provided `where` argument, update it with this data.
     */
    update: XOR<user_addressUpdateInput, user_addressUncheckedUpdateInput>
  }

  /**
   * user_address delete
   */
  export type user_addressDeleteArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
    /**
     * Filter which user_address to delete.
     */
    where: user_addressWhereUniqueInput
  }

  /**
   * user_address deleteMany
   */
  export type user_addressDeleteManyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Filter which user_addresses to delete
     */
    where?: user_addressWhereInput
  }

  /**
   * user_address.cart_details
   */
  export type user_address$cart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the cart_details
     */
    select?: cart_detailsSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: cart_detailsInclude<ExtArgs> | null
    where?: cart_detailsWhereInput
    orderBy?: cart_detailsOrderByWithRelationInput | cart_detailsOrderByWithRelationInput[]
    cursor?: cart_detailsWhereUniqueInput
    take?: number
    skip?: number
    distinct?: Cart_detailsScalarFieldEnum | Cart_detailsScalarFieldEnum[]
  }

  /**
   * user_address without action
   */
  export type user_addressDefaultArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = {
    /**
     * Select specific fields to fetch from the user_address
     */
    select?: user_addressSelect<ExtArgs> | null
    /**
     * Choose, which related nodes to fetch as well
     */
    include?: user_addressInclude<ExtArgs> | null
  }


  /**
   * Enums
   */

  export const TransactionIsolationLevel: {
    ReadUncommitted: 'ReadUncommitted',
    ReadCommitted: 'ReadCommitted',
    RepeatableRead: 'RepeatableRead',
    Serializable: 'Serializable'
  };

  export type TransactionIsolationLevel = (typeof TransactionIsolationLevel)[keyof typeof TransactionIsolationLevel]


  export const CompanyScalarFieldEnum: {
    id: 'id',
    company_name: 'company_name'
  };

  export type CompanyScalarFieldEnum = (typeof CompanyScalarFieldEnum)[keyof typeof CompanyScalarFieldEnum]


  export const Product_categoryScalarFieldEnum: {
    id: 'id',
    product_category_name: 'product_category_name'
  };

  export type Product_categoryScalarFieldEnum = (typeof Product_categoryScalarFieldEnum)[keyof typeof Product_categoryScalarFieldEnum]


  export const Product_sub_categoryScalarFieldEnum: {
    id: 'id',
    product_category_id: 'product_category_id',
    product_sub_category_name: 'product_sub_category_name'
  };

  export type Product_sub_categoryScalarFieldEnum = (typeof Product_sub_categoryScalarFieldEnum)[keyof typeof Product_sub_categoryScalarFieldEnum]


  export const Product_detailsScalarFieldEnum: {
    id: 'id',
    product_name: 'product_name',
    product_image_url: 'product_image_url',
    product_description: 'product_description',
    product_price: 'product_price',
    company_id: 'company_id',
    product_category_id: 'product_category_id',
    product_sub_category_id: 'product_sub_category_id'
  };

  export type Product_detailsScalarFieldEnum = (typeof Product_detailsScalarFieldEnum)[keyof typeof Product_detailsScalarFieldEnum]


  export const Registration_detailsScalarFieldEnum: {
    id: 'id',
    full_name: 'full_name',
    email_id: 'email_id',
    user_name: 'user_name',
    password: 'password',
    date_of_birth: 'date_of_birth',
    contact_number: 'contact_number'
  };

  export type Registration_detailsScalarFieldEnum = (typeof Registration_detailsScalarFieldEnum)[keyof typeof Registration_detailsScalarFieldEnum]


  export const Cart_detailsScalarFieldEnum: {
    id: 'id',
    product_id: 'product_id',
    price: 'price',
    quantity: 'quantity',
    total_amount: 'total_amount',
    userId: 'userId',
    userAddressId: 'userAddressId'
  };

  export type Cart_detailsScalarFieldEnum = (typeof Cart_detailsScalarFieldEnum)[keyof typeof Cart_detailsScalarFieldEnum]


  export const Buy_nowScalarFieldEnum: {
    id: 'id',
    cart_id: 'cart_id',
    total_amount: 'total_amount'
  };

  export type Buy_nowScalarFieldEnum = (typeof Buy_nowScalarFieldEnum)[keyof typeof Buy_nowScalarFieldEnum]


  export const User_addressScalarFieldEnum: {
    id: 'id',
    house_number: 'house_number',
    society_name: 'society_name',
    landmark: 'landmark',
    pincode: 'pincode',
    state: 'state',
    city: 'city'
  };

  export type User_addressScalarFieldEnum = (typeof User_addressScalarFieldEnum)[keyof typeof User_addressScalarFieldEnum]


  export const SortOrder: {
    asc: 'asc',
    desc: 'desc'
  };

  export type SortOrder = (typeof SortOrder)[keyof typeof SortOrder]


  export const NullsOrder: {
    first: 'first',
    last: 'last'
  };

  export type NullsOrder = (typeof NullsOrder)[keyof typeof NullsOrder]


  /**
   * Field references 
   */


  /**
   * Reference to a field of type 'Int'
   */
  export type IntFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Int'>
    


  /**
   * Reference to a field of type 'String'
   */
  export type StringFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'String'>
    


  /**
   * Reference to a field of type 'DateTime'
   */
  export type DateTimeFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'DateTime'>
    


  /**
   * Reference to a field of type 'Float'
   */
  export type FloatFieldRefInput<$PrismaModel> = FieldRefInputType<$PrismaModel, 'Float'>
    
  /**
   * Deep Input Types
   */


  export type companyWhereInput = {
    AND?: companyWhereInput | companyWhereInput[]
    OR?: companyWhereInput[]
    NOT?: companyWhereInput | companyWhereInput[]
    id?: IntFilter<"company"> | number
    company_name?: StringNullableFilter<"company"> | string | null
    product_details?: Product_detailsListRelationFilter
  }

  export type companyOrderByWithRelationInput = {
    id?: SortOrder
    company_name?: SortOrderInput | SortOrder
    product_details?: product_detailsOrderByRelationAggregateInput
  }

  export type companyWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: companyWhereInput | companyWhereInput[]
    OR?: companyWhereInput[]
    NOT?: companyWhereInput | companyWhereInput[]
    company_name?: StringNullableFilter<"company"> | string | null
    product_details?: Product_detailsListRelationFilter
  }, "id">

  export type companyOrderByWithAggregationInput = {
    id?: SortOrder
    company_name?: SortOrderInput | SortOrder
    _count?: companyCountOrderByAggregateInput
    _avg?: companyAvgOrderByAggregateInput
    _max?: companyMaxOrderByAggregateInput
    _min?: companyMinOrderByAggregateInput
    _sum?: companySumOrderByAggregateInput
  }

  export type companyScalarWhereWithAggregatesInput = {
    AND?: companyScalarWhereWithAggregatesInput | companyScalarWhereWithAggregatesInput[]
    OR?: companyScalarWhereWithAggregatesInput[]
    NOT?: companyScalarWhereWithAggregatesInput | companyScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"company"> | number
    company_name?: StringNullableWithAggregatesFilter<"company"> | string | null
  }

  export type product_categoryWhereInput = {
    AND?: product_categoryWhereInput | product_categoryWhereInput[]
    OR?: product_categoryWhereInput[]
    NOT?: product_categoryWhereInput | product_categoryWhereInput[]
    id?: IntFilter<"product_category"> | number
    product_category_name?: StringNullableFilter<"product_category"> | string | null
    product_details?: Product_detailsListRelationFilter
    product_sub_category?: Product_sub_categoryListRelationFilter
  }

  export type product_categoryOrderByWithRelationInput = {
    id?: SortOrder
    product_category_name?: SortOrderInput | SortOrder
    product_details?: product_detailsOrderByRelationAggregateInput
    product_sub_category?: product_sub_categoryOrderByRelationAggregateInput
  }

  export type product_categoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: product_categoryWhereInput | product_categoryWhereInput[]
    OR?: product_categoryWhereInput[]
    NOT?: product_categoryWhereInput | product_categoryWhereInput[]
    product_category_name?: StringNullableFilter<"product_category"> | string | null
    product_details?: Product_detailsListRelationFilter
    product_sub_category?: Product_sub_categoryListRelationFilter
  }, "id">

  export type product_categoryOrderByWithAggregationInput = {
    id?: SortOrder
    product_category_name?: SortOrderInput | SortOrder
    _count?: product_categoryCountOrderByAggregateInput
    _avg?: product_categoryAvgOrderByAggregateInput
    _max?: product_categoryMaxOrderByAggregateInput
    _min?: product_categoryMinOrderByAggregateInput
    _sum?: product_categorySumOrderByAggregateInput
  }

  export type product_categoryScalarWhereWithAggregatesInput = {
    AND?: product_categoryScalarWhereWithAggregatesInput | product_categoryScalarWhereWithAggregatesInput[]
    OR?: product_categoryScalarWhereWithAggregatesInput[]
    NOT?: product_categoryScalarWhereWithAggregatesInput | product_categoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_category"> | number
    product_category_name?: StringNullableWithAggregatesFilter<"product_category"> | string | null
  }

  export type product_sub_categoryWhereInput = {
    AND?: product_sub_categoryWhereInput | product_sub_categoryWhereInput[]
    OR?: product_sub_categoryWhereInput[]
    NOT?: product_sub_categoryWhereInput | product_sub_categoryWhereInput[]
    id?: IntFilter<"product_sub_category"> | number
    product_category_id?: IntFilter<"product_sub_category"> | number
    product_sub_category_name?: StringNullableFilter<"product_sub_category"> | string | null
    product_category?: XOR<Product_categoryNullableRelationFilter, product_categoryWhereInput> | null
    product_details?: Product_detailsListRelationFilter
  }

  export type product_sub_categoryOrderByWithRelationInput = {
    id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_name?: SortOrderInput | SortOrder
    product_category?: product_categoryOrderByWithRelationInput
    product_details?: product_detailsOrderByRelationAggregateInput
  }

  export type product_sub_categoryWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: product_sub_categoryWhereInput | product_sub_categoryWhereInput[]
    OR?: product_sub_categoryWhereInput[]
    NOT?: product_sub_categoryWhereInput | product_sub_categoryWhereInput[]
    product_category_id?: IntFilter<"product_sub_category"> | number
    product_sub_category_name?: StringNullableFilter<"product_sub_category"> | string | null
    product_category?: XOR<Product_categoryNullableRelationFilter, product_categoryWhereInput> | null
    product_details?: Product_detailsListRelationFilter
  }, "id">

  export type product_sub_categoryOrderByWithAggregationInput = {
    id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_name?: SortOrderInput | SortOrder
    _count?: product_sub_categoryCountOrderByAggregateInput
    _avg?: product_sub_categoryAvgOrderByAggregateInput
    _max?: product_sub_categoryMaxOrderByAggregateInput
    _min?: product_sub_categoryMinOrderByAggregateInput
    _sum?: product_sub_categorySumOrderByAggregateInput
  }

  export type product_sub_categoryScalarWhereWithAggregatesInput = {
    AND?: product_sub_categoryScalarWhereWithAggregatesInput | product_sub_categoryScalarWhereWithAggregatesInput[]
    OR?: product_sub_categoryScalarWhereWithAggregatesInput[]
    NOT?: product_sub_categoryScalarWhereWithAggregatesInput | product_sub_categoryScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_sub_category"> | number
    product_category_id?: IntWithAggregatesFilter<"product_sub_category"> | number
    product_sub_category_name?: StringNullableWithAggregatesFilter<"product_sub_category"> | string | null
  }

  export type product_detailsWhereInput = {
    AND?: product_detailsWhereInput | product_detailsWhereInput[]
    OR?: product_detailsWhereInput[]
    NOT?: product_detailsWhereInput | product_detailsWhereInput[]
    id?: IntFilter<"product_details"> | number
    product_name?: StringNullableFilter<"product_details"> | string | null
    product_image_url?: StringNullableFilter<"product_details"> | string | null
    product_description?: StringNullableFilter<"product_details"> | string | null
    product_price?: StringNullableFilter<"product_details"> | string | null
    company_id?: IntNullableFilter<"product_details"> | number | null
    product_category_id?: IntNullableFilter<"product_details"> | number | null
    product_sub_category_id?: IntNullableFilter<"product_details"> | number | null
    company?: XOR<CompanyNullableRelationFilter, companyWhereInput> | null
    product_category?: XOR<Product_categoryNullableRelationFilter, product_categoryWhereInput> | null
    product_sub_category?: XOR<Product_sub_categoryNullableRelationFilter, product_sub_categoryWhereInput> | null
    cart_details?: Cart_detailsListRelationFilter
  }

  export type product_detailsOrderByWithRelationInput = {
    id?: SortOrder
    product_name?: SortOrderInput | SortOrder
    product_image_url?: SortOrderInput | SortOrder
    product_description?: SortOrderInput | SortOrder
    product_price?: SortOrderInput | SortOrder
    company_id?: SortOrderInput | SortOrder
    product_category_id?: SortOrderInput | SortOrder
    product_sub_category_id?: SortOrderInput | SortOrder
    company?: companyOrderByWithRelationInput
    product_category?: product_categoryOrderByWithRelationInput
    product_sub_category?: product_sub_categoryOrderByWithRelationInput
    cart_details?: cart_detailsOrderByRelationAggregateInput
  }

  export type product_detailsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: product_detailsWhereInput | product_detailsWhereInput[]
    OR?: product_detailsWhereInput[]
    NOT?: product_detailsWhereInput | product_detailsWhereInput[]
    product_name?: StringNullableFilter<"product_details"> | string | null
    product_image_url?: StringNullableFilter<"product_details"> | string | null
    product_description?: StringNullableFilter<"product_details"> | string | null
    product_price?: StringNullableFilter<"product_details"> | string | null
    company_id?: IntNullableFilter<"product_details"> | number | null
    product_category_id?: IntNullableFilter<"product_details"> | number | null
    product_sub_category_id?: IntNullableFilter<"product_details"> | number | null
    company?: XOR<CompanyNullableRelationFilter, companyWhereInput> | null
    product_category?: XOR<Product_categoryNullableRelationFilter, product_categoryWhereInput> | null
    product_sub_category?: XOR<Product_sub_categoryNullableRelationFilter, product_sub_categoryWhereInput> | null
    cart_details?: Cart_detailsListRelationFilter
  }, "id">

  export type product_detailsOrderByWithAggregationInput = {
    id?: SortOrder
    product_name?: SortOrderInput | SortOrder
    product_image_url?: SortOrderInput | SortOrder
    product_description?: SortOrderInput | SortOrder
    product_price?: SortOrderInput | SortOrder
    company_id?: SortOrderInput | SortOrder
    product_category_id?: SortOrderInput | SortOrder
    product_sub_category_id?: SortOrderInput | SortOrder
    _count?: product_detailsCountOrderByAggregateInput
    _avg?: product_detailsAvgOrderByAggregateInput
    _max?: product_detailsMaxOrderByAggregateInput
    _min?: product_detailsMinOrderByAggregateInput
    _sum?: product_detailsSumOrderByAggregateInput
  }

  export type product_detailsScalarWhereWithAggregatesInput = {
    AND?: product_detailsScalarWhereWithAggregatesInput | product_detailsScalarWhereWithAggregatesInput[]
    OR?: product_detailsScalarWhereWithAggregatesInput[]
    NOT?: product_detailsScalarWhereWithAggregatesInput | product_detailsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"product_details"> | number
    product_name?: StringNullableWithAggregatesFilter<"product_details"> | string | null
    product_image_url?: StringNullableWithAggregatesFilter<"product_details"> | string | null
    product_description?: StringNullableWithAggregatesFilter<"product_details"> | string | null
    product_price?: StringNullableWithAggregatesFilter<"product_details"> | string | null
    company_id?: IntNullableWithAggregatesFilter<"product_details"> | number | null
    product_category_id?: IntNullableWithAggregatesFilter<"product_details"> | number | null
    product_sub_category_id?: IntNullableWithAggregatesFilter<"product_details"> | number | null
  }

  export type registration_detailsWhereInput = {
    AND?: registration_detailsWhereInput | registration_detailsWhereInput[]
    OR?: registration_detailsWhereInput[]
    NOT?: registration_detailsWhereInput | registration_detailsWhereInput[]
    id?: IntFilter<"registration_details"> | number
    full_name?: StringFilter<"registration_details"> | string
    email_id?: StringFilter<"registration_details"> | string
    user_name?: StringFilter<"registration_details"> | string
    password?: StringFilter<"registration_details"> | string
    date_of_birth?: DateTimeFilter<"registration_details"> | Date | string
    contact_number?: StringFilter<"registration_details"> | string
  }

  export type registration_detailsOrderByWithRelationInput = {
    id?: SortOrder
    full_name?: SortOrder
    email_id?: SortOrder
    user_name?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    contact_number?: SortOrder
  }

  export type registration_detailsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    email_id?: string
    user_name?: string
    AND?: registration_detailsWhereInput | registration_detailsWhereInput[]
    OR?: registration_detailsWhereInput[]
    NOT?: registration_detailsWhereInput | registration_detailsWhereInput[]
    full_name?: StringFilter<"registration_details"> | string
    password?: StringFilter<"registration_details"> | string
    date_of_birth?: DateTimeFilter<"registration_details"> | Date | string
    contact_number?: StringFilter<"registration_details"> | string
  }, "id" | "email_id" | "user_name">

  export type registration_detailsOrderByWithAggregationInput = {
    id?: SortOrder
    full_name?: SortOrder
    email_id?: SortOrder
    user_name?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    contact_number?: SortOrder
    _count?: registration_detailsCountOrderByAggregateInput
    _avg?: registration_detailsAvgOrderByAggregateInput
    _max?: registration_detailsMaxOrderByAggregateInput
    _min?: registration_detailsMinOrderByAggregateInput
    _sum?: registration_detailsSumOrderByAggregateInput
  }

  export type registration_detailsScalarWhereWithAggregatesInput = {
    AND?: registration_detailsScalarWhereWithAggregatesInput | registration_detailsScalarWhereWithAggregatesInput[]
    OR?: registration_detailsScalarWhereWithAggregatesInput[]
    NOT?: registration_detailsScalarWhereWithAggregatesInput | registration_detailsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"registration_details"> | number
    full_name?: StringWithAggregatesFilter<"registration_details"> | string
    email_id?: StringWithAggregatesFilter<"registration_details"> | string
    user_name?: StringWithAggregatesFilter<"registration_details"> | string
    password?: StringWithAggregatesFilter<"registration_details"> | string
    date_of_birth?: DateTimeWithAggregatesFilter<"registration_details"> | Date | string
    contact_number?: StringWithAggregatesFilter<"registration_details"> | string
  }

  export type cart_detailsWhereInput = {
    AND?: cart_detailsWhereInput | cart_detailsWhereInput[]
    OR?: cart_detailsWhereInput[]
    NOT?: cart_detailsWhereInput | cart_detailsWhereInput[]
    id?: IntFilter<"cart_details"> | number
    product_id?: IntFilter<"cart_details"> | number
    price?: IntFilter<"cart_details"> | number
    quantity?: IntFilter<"cart_details"> | number
    total_amount?: IntFilter<"cart_details"> | number
    userId?: IntNullableFilter<"cart_details"> | number | null
    userAddressId?: IntNullableFilter<"cart_details"> | number | null
    product_details?: XOR<Product_detailsNullableRelationFilter, product_detailsWhereInput> | null
    buy_now?: Buy_nowListRelationFilter
    user_address?: XOR<User_addressNullableRelationFilter, user_addressWhereInput> | null
  }

  export type cart_detailsOrderByWithRelationInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrderInput | SortOrder
    userAddressId?: SortOrderInput | SortOrder
    product_details?: product_detailsOrderByWithRelationInput
    buy_now?: buy_nowOrderByRelationAggregateInput
    user_address?: user_addressOrderByWithRelationInput
  }

  export type cart_detailsWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    product_id_userId?: cart_detailsProduct_idUserIdCompoundUniqueInput
    AND?: cart_detailsWhereInput | cart_detailsWhereInput[]
    OR?: cart_detailsWhereInput[]
    NOT?: cart_detailsWhereInput | cart_detailsWhereInput[]
    product_id?: IntFilter<"cart_details"> | number
    price?: IntFilter<"cart_details"> | number
    quantity?: IntFilter<"cart_details"> | number
    total_amount?: IntFilter<"cart_details"> | number
    userId?: IntNullableFilter<"cart_details"> | number | null
    userAddressId?: IntNullableFilter<"cart_details"> | number | null
    product_details?: XOR<Product_detailsNullableRelationFilter, product_detailsWhereInput> | null
    buy_now?: Buy_nowListRelationFilter
    user_address?: XOR<User_addressNullableRelationFilter, user_addressWhereInput> | null
  }, "id" | "product_id_userId">

  export type cart_detailsOrderByWithAggregationInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrderInput | SortOrder
    userAddressId?: SortOrderInput | SortOrder
    _count?: cart_detailsCountOrderByAggregateInput
    _avg?: cart_detailsAvgOrderByAggregateInput
    _max?: cart_detailsMaxOrderByAggregateInput
    _min?: cart_detailsMinOrderByAggregateInput
    _sum?: cart_detailsSumOrderByAggregateInput
  }

  export type cart_detailsScalarWhereWithAggregatesInput = {
    AND?: cart_detailsScalarWhereWithAggregatesInput | cart_detailsScalarWhereWithAggregatesInput[]
    OR?: cart_detailsScalarWhereWithAggregatesInput[]
    NOT?: cart_detailsScalarWhereWithAggregatesInput | cart_detailsScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"cart_details"> | number
    product_id?: IntWithAggregatesFilter<"cart_details"> | number
    price?: IntWithAggregatesFilter<"cart_details"> | number
    quantity?: IntWithAggregatesFilter<"cart_details"> | number
    total_amount?: IntWithAggregatesFilter<"cart_details"> | number
    userId?: IntNullableWithAggregatesFilter<"cart_details"> | number | null
    userAddressId?: IntNullableWithAggregatesFilter<"cart_details"> | number | null
  }

  export type buy_nowWhereInput = {
    AND?: buy_nowWhereInput | buy_nowWhereInput[]
    OR?: buy_nowWhereInput[]
    NOT?: buy_nowWhereInput | buy_nowWhereInput[]
    id?: IntFilter<"buy_now"> | number
    cart_id?: IntFilter<"buy_now"> | number
    total_amount?: IntFilter<"buy_now"> | number
    cart_details?: XOR<Cart_detailsNullableRelationFilter, cart_detailsWhereInput> | null
  }

  export type buy_nowOrderByWithRelationInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
    cart_details?: cart_detailsOrderByWithRelationInput
  }

  export type buy_nowWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: buy_nowWhereInput | buy_nowWhereInput[]
    OR?: buy_nowWhereInput[]
    NOT?: buy_nowWhereInput | buy_nowWhereInput[]
    cart_id?: IntFilter<"buy_now"> | number
    total_amount?: IntFilter<"buy_now"> | number
    cart_details?: XOR<Cart_detailsNullableRelationFilter, cart_detailsWhereInput> | null
  }, "id">

  export type buy_nowOrderByWithAggregationInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
    _count?: buy_nowCountOrderByAggregateInput
    _avg?: buy_nowAvgOrderByAggregateInput
    _max?: buy_nowMaxOrderByAggregateInput
    _min?: buy_nowMinOrderByAggregateInput
    _sum?: buy_nowSumOrderByAggregateInput
  }

  export type buy_nowScalarWhereWithAggregatesInput = {
    AND?: buy_nowScalarWhereWithAggregatesInput | buy_nowScalarWhereWithAggregatesInput[]
    OR?: buy_nowScalarWhereWithAggregatesInput[]
    NOT?: buy_nowScalarWhereWithAggregatesInput | buy_nowScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"buy_now"> | number
    cart_id?: IntWithAggregatesFilter<"buy_now"> | number
    total_amount?: IntWithAggregatesFilter<"buy_now"> | number
  }

  export type user_addressWhereInput = {
    AND?: user_addressWhereInput | user_addressWhereInput[]
    OR?: user_addressWhereInput[]
    NOT?: user_addressWhereInput | user_addressWhereInput[]
    id?: IntFilter<"user_address"> | number
    house_number?: StringFilter<"user_address"> | string
    society_name?: StringFilter<"user_address"> | string
    landmark?: StringFilter<"user_address"> | string
    pincode?: IntFilter<"user_address"> | number
    state?: StringFilter<"user_address"> | string
    city?: StringFilter<"user_address"> | string
    cart_details?: Cart_detailsListRelationFilter
  }

  export type user_addressOrderByWithRelationInput = {
    id?: SortOrder
    house_number?: SortOrder
    society_name?: SortOrder
    landmark?: SortOrder
    pincode?: SortOrder
    state?: SortOrder
    city?: SortOrder
    cart_details?: cart_detailsOrderByRelationAggregateInput
  }

  export type user_addressWhereUniqueInput = Prisma.AtLeast<{
    id?: number
    AND?: user_addressWhereInput | user_addressWhereInput[]
    OR?: user_addressWhereInput[]
    NOT?: user_addressWhereInput | user_addressWhereInput[]
    house_number?: StringFilter<"user_address"> | string
    society_name?: StringFilter<"user_address"> | string
    landmark?: StringFilter<"user_address"> | string
    pincode?: IntFilter<"user_address"> | number
    state?: StringFilter<"user_address"> | string
    city?: StringFilter<"user_address"> | string
    cart_details?: Cart_detailsListRelationFilter
  }, "id">

  export type user_addressOrderByWithAggregationInput = {
    id?: SortOrder
    house_number?: SortOrder
    society_name?: SortOrder
    landmark?: SortOrder
    pincode?: SortOrder
    state?: SortOrder
    city?: SortOrder
    _count?: user_addressCountOrderByAggregateInput
    _avg?: user_addressAvgOrderByAggregateInput
    _max?: user_addressMaxOrderByAggregateInput
    _min?: user_addressMinOrderByAggregateInput
    _sum?: user_addressSumOrderByAggregateInput
  }

  export type user_addressScalarWhereWithAggregatesInput = {
    AND?: user_addressScalarWhereWithAggregatesInput | user_addressScalarWhereWithAggregatesInput[]
    OR?: user_addressScalarWhereWithAggregatesInput[]
    NOT?: user_addressScalarWhereWithAggregatesInput | user_addressScalarWhereWithAggregatesInput[]
    id?: IntWithAggregatesFilter<"user_address"> | number
    house_number?: StringWithAggregatesFilter<"user_address"> | string
    society_name?: StringWithAggregatesFilter<"user_address"> | string
    landmark?: StringWithAggregatesFilter<"user_address"> | string
    pincode?: IntWithAggregatesFilter<"user_address"> | number
    state?: StringWithAggregatesFilter<"user_address"> | string
    city?: StringWithAggregatesFilter<"user_address"> | string
  }

  export type companyCreateInput = {
    company_name?: string | null
    product_details?: product_detailsCreateNestedManyWithoutCompanyInput
  }

  export type companyUncheckedCreateInput = {
    id?: number
    company_name?: string | null
    product_details?: product_detailsUncheckedCreateNestedManyWithoutCompanyInput
  }

  export type companyUpdateInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUpdateManyWithoutCompanyNestedInput
  }

  export type companyUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUncheckedUpdateManyWithoutCompanyNestedInput
  }

  export type companyCreateManyInput = {
    id?: number
    company_name?: string | null
  }

  export type companyUpdateManyMutationInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type companyUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_categoryCreateInput = {
    product_category_name?: string | null
    product_details?: product_detailsCreateNestedManyWithoutProduct_categoryInput
    product_sub_category?: product_sub_categoryCreateNestedManyWithoutProduct_categoryInput
  }

  export type product_categoryUncheckedCreateInput = {
    id?: number
    product_category_name?: string | null
    product_details?: product_detailsUncheckedCreateNestedManyWithoutProduct_categoryInput
    product_sub_category?: product_sub_categoryUncheckedCreateNestedManyWithoutProduct_categoryInput
  }

  export type product_categoryUpdateInput = {
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUpdateManyWithoutProduct_categoryNestedInput
    product_sub_category?: product_sub_categoryUpdateManyWithoutProduct_categoryNestedInput
  }

  export type product_categoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUncheckedUpdateManyWithoutProduct_categoryNestedInput
    product_sub_category?: product_sub_categoryUncheckedUpdateManyWithoutProduct_categoryNestedInput
  }

  export type product_categoryCreateManyInput = {
    id?: number
    product_category_name?: string | null
  }

  export type product_categoryUpdateManyMutationInput = {
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_categoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_sub_categoryCreateInput = {
    product_sub_category_name?: string | null
    product_category?: product_categoryCreateNestedOneWithoutProduct_sub_categoryInput
    product_details?: product_detailsCreateNestedManyWithoutProduct_sub_categoryInput
  }

  export type product_sub_categoryUncheckedCreateInput = {
    id?: number
    product_category_id: number
    product_sub_category_name?: string | null
    product_details?: product_detailsUncheckedCreateNestedManyWithoutProduct_sub_categoryInput
  }

  export type product_sub_categoryUpdateInput = {
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_category?: product_categoryUpdateOneWithoutProduct_sub_categoryNestedInput
    product_details?: product_detailsUpdateManyWithoutProduct_sub_categoryNestedInput
  }

  export type product_sub_categoryUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_id?: IntFieldUpdateOperationsInput | number
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUncheckedUpdateManyWithoutProduct_sub_categoryNestedInput
  }

  export type product_sub_categoryCreateManyInput = {
    id?: number
    product_category_id: number
    product_sub_category_name?: string | null
  }

  export type product_sub_categoryUpdateManyMutationInput = {
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_sub_categoryUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_id?: IntFieldUpdateOperationsInput | number
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_detailsCreateInput = {
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company?: companyCreateNestedOneWithoutProduct_detailsInput
    product_category?: product_categoryCreateNestedOneWithoutProduct_detailsInput
    product_sub_category?: product_sub_categoryCreateNestedOneWithoutProduct_detailsInput
    cart_details?: cart_detailsCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsUncheckedCreateInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_category_id?: number | null
    product_sub_category_id?: number | null
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsUpdateInput = {
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company?: companyUpdateOneWithoutProduct_detailsNestedInput
    product_category?: product_categoryUpdateOneWithoutProduct_detailsNestedInput
    product_sub_category?: product_sub_categoryUpdateOneWithoutProduct_detailsNestedInput
    cart_details?: cart_detailsUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    cart_details?: cart_detailsUncheckedUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsCreateManyInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_category_id?: number | null
    product_sub_category_id?: number | null
  }

  export type product_detailsUpdateManyMutationInput = {
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_detailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type registration_detailsCreateInput = {
    full_name: string
    email_id: string
    user_name: string
    password: string
    date_of_birth: Date | string
    contact_number: string
  }

  export type registration_detailsUncheckedCreateInput = {
    id?: number
    full_name: string
    email_id: string
    user_name: string
    password: string
    date_of_birth: Date | string
    contact_number: string
  }

  export type registration_detailsUpdateInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email_id?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_number?: StringFieldUpdateOperationsInput | string
  }

  export type registration_detailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email_id?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_number?: StringFieldUpdateOperationsInput | string
  }

  export type registration_detailsCreateManyInput = {
    id?: number
    full_name: string
    email_id: string
    user_name: string
    password: string
    date_of_birth: Date | string
    contact_number: string
  }

  export type registration_detailsUpdateManyMutationInput = {
    full_name?: StringFieldUpdateOperationsInput | string
    email_id?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_number?: StringFieldUpdateOperationsInput | string
  }

  export type registration_detailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    full_name?: StringFieldUpdateOperationsInput | string
    email_id?: StringFieldUpdateOperationsInput | string
    user_name?: StringFieldUpdateOperationsInput | string
    password?: StringFieldUpdateOperationsInput | string
    date_of_birth?: DateTimeFieldUpdateOperationsInput | Date | string
    contact_number?: StringFieldUpdateOperationsInput | string
  }

  export type cart_detailsCreateInput = {
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    product_details?: product_detailsCreateNestedOneWithoutCart_detailsInput
    buy_now?: buy_nowCreateNestedManyWithoutCart_detailsInput
    user_address?: user_addressCreateNestedOneWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateInput = {
    id?: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    userAddressId?: number | null
    buy_now?: buy_nowUncheckedCreateNestedManyWithoutCart_detailsInput
  }

  export type cart_detailsUpdateInput = {
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    product_details?: product_detailsUpdateOneWithoutCart_detailsNestedInput
    buy_now?: buy_nowUpdateManyWithoutCart_detailsNestedInput
    user_address?: user_addressUpdateOneWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    userAddressId?: NullableIntFieldUpdateOperationsInput | number | null
    buy_now?: buy_nowUncheckedUpdateManyWithoutCart_detailsNestedInput
  }

  export type cart_detailsCreateManyInput = {
    id?: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    userAddressId?: number | null
  }

  export type cart_detailsUpdateManyMutationInput = {
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type cart_detailsUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    userAddressId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type buy_nowCreateInput = {
    total_amount: number
    cart_details?: cart_detailsCreateNestedOneWithoutBuy_nowInput
  }

  export type buy_nowUncheckedCreateInput = {
    id?: number
    cart_id: number
    total_amount: number
  }

  export type buy_nowUpdateInput = {
    total_amount?: IntFieldUpdateOperationsInput | number
    cart_details?: cart_detailsUpdateOneWithoutBuy_nowNestedInput
  }

  export type buy_nowUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    cart_id?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
  }

  export type buy_nowCreateManyInput = {
    id?: number
    cart_id: number
    total_amount: number
  }

  export type buy_nowUpdateManyMutationInput = {
    total_amount?: IntFieldUpdateOperationsInput | number
  }

  export type buy_nowUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    cart_id?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
  }

  export type user_addressCreateInput = {
    house_number: string
    society_name: string
    landmark: string
    pincode: number
    state: string
    city: string
    cart_details?: cart_detailsCreateNestedManyWithoutUser_addressInput
  }

  export type user_addressUncheckedCreateInput = {
    id?: number
    house_number: string
    society_name: string
    landmark: string
    pincode: number
    state: string
    city: string
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutUser_addressInput
  }

  export type user_addressUpdateInput = {
    house_number?: StringFieldUpdateOperationsInput | string
    society_name?: StringFieldUpdateOperationsInput | string
    landmark?: StringFieldUpdateOperationsInput | string
    pincode?: IntFieldUpdateOperationsInput | number
    state?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUpdateManyWithoutUser_addressNestedInput
  }

  export type user_addressUncheckedUpdateInput = {
    id?: IntFieldUpdateOperationsInput | number
    house_number?: StringFieldUpdateOperationsInput | string
    society_name?: StringFieldUpdateOperationsInput | string
    landmark?: StringFieldUpdateOperationsInput | string
    pincode?: IntFieldUpdateOperationsInput | number
    state?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
    cart_details?: cart_detailsUncheckedUpdateManyWithoutUser_addressNestedInput
  }

  export type user_addressCreateManyInput = {
    id?: number
    house_number: string
    society_name: string
    landmark: string
    pincode: number
    state: string
    city: string
  }

  export type user_addressUpdateManyMutationInput = {
    house_number?: StringFieldUpdateOperationsInput | string
    society_name?: StringFieldUpdateOperationsInput | string
    landmark?: StringFieldUpdateOperationsInput | string
    pincode?: IntFieldUpdateOperationsInput | number
    state?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
  }

  export type user_addressUncheckedUpdateManyInput = {
    id?: IntFieldUpdateOperationsInput | number
    house_number?: StringFieldUpdateOperationsInput | string
    society_name?: StringFieldUpdateOperationsInput | string
    landmark?: StringFieldUpdateOperationsInput | string
    pincode?: IntFieldUpdateOperationsInput | number
    state?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
  }

  export type IntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type StringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type Product_detailsListRelationFilter = {
    every?: product_detailsWhereInput
    some?: product_detailsWhereInput
    none?: product_detailsWhereInput
  }

  export type SortOrderInput = {
    sort: SortOrder
    nulls?: NullsOrder
  }

  export type product_detailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type companyCountOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
  }

  export type companyAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type companyMaxOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
  }

  export type companyMinOrderByAggregateInput = {
    id?: SortOrder
    company_name?: SortOrder
  }

  export type companySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type IntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type StringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type Product_sub_categoryListRelationFilter = {
    every?: product_sub_categoryWhereInput
    some?: product_sub_categoryWhereInput
    none?: product_sub_categoryWhereInput
  }

  export type product_sub_categoryOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_categoryCountOrderByAggregateInput = {
    id?: SortOrder
    product_category_name?: SortOrder
  }

  export type product_categoryAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type product_categoryMaxOrderByAggregateInput = {
    id?: SortOrder
    product_category_name?: SortOrder
  }

  export type product_categoryMinOrderByAggregateInput = {
    id?: SortOrder
    product_category_name?: SortOrder
  }

  export type product_categorySumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type Product_categoryNullableRelationFilter = {
    is?: product_categoryWhereInput | null
    isNot?: product_categoryWhereInput | null
  }

  export type product_sub_categoryCountOrderByAggregateInput = {
    id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_name?: SortOrder
  }

  export type product_sub_categoryAvgOrderByAggregateInput = {
    id?: SortOrder
    product_category_id?: SortOrder
  }

  export type product_sub_categoryMaxOrderByAggregateInput = {
    id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_name?: SortOrder
  }

  export type product_sub_categoryMinOrderByAggregateInput = {
    id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_name?: SortOrder
  }

  export type product_sub_categorySumOrderByAggregateInput = {
    id?: SortOrder
    product_category_id?: SortOrder
  }

  export type IntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type CompanyNullableRelationFilter = {
    is?: companyWhereInput | null
    isNot?: companyWhereInput | null
  }

  export type Product_sub_categoryNullableRelationFilter = {
    is?: product_sub_categoryWhereInput | null
    isNot?: product_sub_categoryWhereInput | null
  }

  export type Cart_detailsListRelationFilter = {
    every?: cart_detailsWhereInput
    some?: cart_detailsWhereInput
    none?: cart_detailsWhereInput
  }

  export type cart_detailsOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type product_detailsCountOrderByAggregateInput = {
    id?: SortOrder
    product_name?: SortOrder
    product_image_url?: SortOrder
    product_description?: SortOrder
    product_price?: SortOrder
    company_id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_id?: SortOrder
  }

  export type product_detailsAvgOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_id?: SortOrder
  }

  export type product_detailsMaxOrderByAggregateInput = {
    id?: SortOrder
    product_name?: SortOrder
    product_image_url?: SortOrder
    product_description?: SortOrder
    product_price?: SortOrder
    company_id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_id?: SortOrder
  }

  export type product_detailsMinOrderByAggregateInput = {
    id?: SortOrder
    product_name?: SortOrder
    product_image_url?: SortOrder
    product_description?: SortOrder
    product_price?: SortOrder
    company_id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_id?: SortOrder
  }

  export type product_detailsSumOrderByAggregateInput = {
    id?: SortOrder
    company_id?: SortOrder
    product_category_id?: SortOrder
    product_sub_category_id?: SortOrder
  }

  export type IntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type StringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type DateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type registration_detailsCountOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email_id?: SortOrder
    user_name?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    contact_number?: SortOrder
  }

  export type registration_detailsAvgOrderByAggregateInput = {
    id?: SortOrder
  }

  export type registration_detailsMaxOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email_id?: SortOrder
    user_name?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    contact_number?: SortOrder
  }

  export type registration_detailsMinOrderByAggregateInput = {
    id?: SortOrder
    full_name?: SortOrder
    email_id?: SortOrder
    user_name?: SortOrder
    password?: SortOrder
    date_of_birth?: SortOrder
    contact_number?: SortOrder
  }

  export type registration_detailsSumOrderByAggregateInput = {
    id?: SortOrder
  }

  export type StringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type DateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type Product_detailsNullableRelationFilter = {
    is?: product_detailsWhereInput | null
    isNot?: product_detailsWhereInput | null
  }

  export type Buy_nowListRelationFilter = {
    every?: buy_nowWhereInput
    some?: buy_nowWhereInput
    none?: buy_nowWhereInput
  }

  export type User_addressNullableRelationFilter = {
    is?: user_addressWhereInput | null
    isNot?: user_addressWhereInput | null
  }

  export type buy_nowOrderByRelationAggregateInput = {
    _count?: SortOrder
  }

  export type cart_detailsProduct_idUserIdCompoundUniqueInput = {
    product_id: number
    userId: number
  }

  export type cart_detailsCountOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrder
    userAddressId?: SortOrder
  }

  export type cart_detailsAvgOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrder
    userAddressId?: SortOrder
  }

  export type cart_detailsMaxOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrder
    userAddressId?: SortOrder
  }

  export type cart_detailsMinOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrder
    userAddressId?: SortOrder
  }

  export type cart_detailsSumOrderByAggregateInput = {
    id?: SortOrder
    product_id?: SortOrder
    price?: SortOrder
    quantity?: SortOrder
    total_amount?: SortOrder
    userId?: SortOrder
    userAddressId?: SortOrder
  }

  export type Cart_detailsNullableRelationFilter = {
    is?: cart_detailsWhereInput | null
    isNot?: cart_detailsWhereInput | null
  }

  export type buy_nowCountOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
  }

  export type buy_nowAvgOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
  }

  export type buy_nowMaxOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
  }

  export type buy_nowMinOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
  }

  export type buy_nowSumOrderByAggregateInput = {
    id?: SortOrder
    cart_id?: SortOrder
    total_amount?: SortOrder
  }

  export type user_addressCountOrderByAggregateInput = {
    id?: SortOrder
    house_number?: SortOrder
    society_name?: SortOrder
    landmark?: SortOrder
    pincode?: SortOrder
    state?: SortOrder
    city?: SortOrder
  }

  export type user_addressAvgOrderByAggregateInput = {
    id?: SortOrder
    pincode?: SortOrder
  }

  export type user_addressMaxOrderByAggregateInput = {
    id?: SortOrder
    house_number?: SortOrder
    society_name?: SortOrder
    landmark?: SortOrder
    pincode?: SortOrder
    state?: SortOrder
    city?: SortOrder
  }

  export type user_addressMinOrderByAggregateInput = {
    id?: SortOrder
    house_number?: SortOrder
    society_name?: SortOrder
    landmark?: SortOrder
    pincode?: SortOrder
    state?: SortOrder
    city?: SortOrder
  }

  export type user_addressSumOrderByAggregateInput = {
    id?: SortOrder
    pincode?: SortOrder
  }

  export type product_detailsCreateNestedManyWithoutCompanyInput = {
    create?: XOR<product_detailsCreateWithoutCompanyInput, product_detailsUncheckedCreateWithoutCompanyInput> | product_detailsCreateWithoutCompanyInput[] | product_detailsUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutCompanyInput | product_detailsCreateOrConnectWithoutCompanyInput[]
    createMany?: product_detailsCreateManyCompanyInputEnvelope
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
  }

  export type product_detailsUncheckedCreateNestedManyWithoutCompanyInput = {
    create?: XOR<product_detailsCreateWithoutCompanyInput, product_detailsUncheckedCreateWithoutCompanyInput> | product_detailsCreateWithoutCompanyInput[] | product_detailsUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutCompanyInput | product_detailsCreateOrConnectWithoutCompanyInput[]
    createMany?: product_detailsCreateManyCompanyInputEnvelope
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
  }

  export type NullableStringFieldUpdateOperationsInput = {
    set?: string | null
  }

  export type product_detailsUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<product_detailsCreateWithoutCompanyInput, product_detailsUncheckedCreateWithoutCompanyInput> | product_detailsCreateWithoutCompanyInput[] | product_detailsUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutCompanyInput | product_detailsCreateOrConnectWithoutCompanyInput[]
    upsert?: product_detailsUpsertWithWhereUniqueWithoutCompanyInput | product_detailsUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: product_detailsCreateManyCompanyInputEnvelope
    set?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    disconnect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    delete?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    update?: product_detailsUpdateWithWhereUniqueWithoutCompanyInput | product_detailsUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: product_detailsUpdateManyWithWhereWithoutCompanyInput | product_detailsUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
  }

  export type IntFieldUpdateOperationsInput = {
    set?: number
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type product_detailsUncheckedUpdateManyWithoutCompanyNestedInput = {
    create?: XOR<product_detailsCreateWithoutCompanyInput, product_detailsUncheckedCreateWithoutCompanyInput> | product_detailsCreateWithoutCompanyInput[] | product_detailsUncheckedCreateWithoutCompanyInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutCompanyInput | product_detailsCreateOrConnectWithoutCompanyInput[]
    upsert?: product_detailsUpsertWithWhereUniqueWithoutCompanyInput | product_detailsUpsertWithWhereUniqueWithoutCompanyInput[]
    createMany?: product_detailsCreateManyCompanyInputEnvelope
    set?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    disconnect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    delete?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    update?: product_detailsUpdateWithWhereUniqueWithoutCompanyInput | product_detailsUpdateWithWhereUniqueWithoutCompanyInput[]
    updateMany?: product_detailsUpdateManyWithWhereWithoutCompanyInput | product_detailsUpdateManyWithWhereWithoutCompanyInput[]
    deleteMany?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
  }

  export type product_detailsCreateNestedManyWithoutProduct_categoryInput = {
    create?: XOR<product_detailsCreateWithoutProduct_categoryInput, product_detailsUncheckedCreateWithoutProduct_categoryInput> | product_detailsCreateWithoutProduct_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_categoryInput | product_detailsCreateOrConnectWithoutProduct_categoryInput[]
    createMany?: product_detailsCreateManyProduct_categoryInputEnvelope
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
  }

  export type product_sub_categoryCreateNestedManyWithoutProduct_categoryInput = {
    create?: XOR<product_sub_categoryCreateWithoutProduct_categoryInput, product_sub_categoryUncheckedCreateWithoutProduct_categoryInput> | product_sub_categoryCreateWithoutProduct_categoryInput[] | product_sub_categoryUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_sub_categoryCreateOrConnectWithoutProduct_categoryInput | product_sub_categoryCreateOrConnectWithoutProduct_categoryInput[]
    createMany?: product_sub_categoryCreateManyProduct_categoryInputEnvelope
    connect?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
  }

  export type product_detailsUncheckedCreateNestedManyWithoutProduct_categoryInput = {
    create?: XOR<product_detailsCreateWithoutProduct_categoryInput, product_detailsUncheckedCreateWithoutProduct_categoryInput> | product_detailsCreateWithoutProduct_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_categoryInput | product_detailsCreateOrConnectWithoutProduct_categoryInput[]
    createMany?: product_detailsCreateManyProduct_categoryInputEnvelope
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
  }

  export type product_sub_categoryUncheckedCreateNestedManyWithoutProduct_categoryInput = {
    create?: XOR<product_sub_categoryCreateWithoutProduct_categoryInput, product_sub_categoryUncheckedCreateWithoutProduct_categoryInput> | product_sub_categoryCreateWithoutProduct_categoryInput[] | product_sub_categoryUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_sub_categoryCreateOrConnectWithoutProduct_categoryInput | product_sub_categoryCreateOrConnectWithoutProduct_categoryInput[]
    createMany?: product_sub_categoryCreateManyProduct_categoryInputEnvelope
    connect?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
  }

  export type product_detailsUpdateManyWithoutProduct_categoryNestedInput = {
    create?: XOR<product_detailsCreateWithoutProduct_categoryInput, product_detailsUncheckedCreateWithoutProduct_categoryInput> | product_detailsCreateWithoutProduct_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_categoryInput | product_detailsCreateOrConnectWithoutProduct_categoryInput[]
    upsert?: product_detailsUpsertWithWhereUniqueWithoutProduct_categoryInput | product_detailsUpsertWithWhereUniqueWithoutProduct_categoryInput[]
    createMany?: product_detailsCreateManyProduct_categoryInputEnvelope
    set?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    disconnect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    delete?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    update?: product_detailsUpdateWithWhereUniqueWithoutProduct_categoryInput | product_detailsUpdateWithWhereUniqueWithoutProduct_categoryInput[]
    updateMany?: product_detailsUpdateManyWithWhereWithoutProduct_categoryInput | product_detailsUpdateManyWithWhereWithoutProduct_categoryInput[]
    deleteMany?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
  }

  export type product_sub_categoryUpdateManyWithoutProduct_categoryNestedInput = {
    create?: XOR<product_sub_categoryCreateWithoutProduct_categoryInput, product_sub_categoryUncheckedCreateWithoutProduct_categoryInput> | product_sub_categoryCreateWithoutProduct_categoryInput[] | product_sub_categoryUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_sub_categoryCreateOrConnectWithoutProduct_categoryInput | product_sub_categoryCreateOrConnectWithoutProduct_categoryInput[]
    upsert?: product_sub_categoryUpsertWithWhereUniqueWithoutProduct_categoryInput | product_sub_categoryUpsertWithWhereUniqueWithoutProduct_categoryInput[]
    createMany?: product_sub_categoryCreateManyProduct_categoryInputEnvelope
    set?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    disconnect?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    delete?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    connect?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    update?: product_sub_categoryUpdateWithWhereUniqueWithoutProduct_categoryInput | product_sub_categoryUpdateWithWhereUniqueWithoutProduct_categoryInput[]
    updateMany?: product_sub_categoryUpdateManyWithWhereWithoutProduct_categoryInput | product_sub_categoryUpdateManyWithWhereWithoutProduct_categoryInput[]
    deleteMany?: product_sub_categoryScalarWhereInput | product_sub_categoryScalarWhereInput[]
  }

  export type product_detailsUncheckedUpdateManyWithoutProduct_categoryNestedInput = {
    create?: XOR<product_detailsCreateWithoutProduct_categoryInput, product_detailsUncheckedCreateWithoutProduct_categoryInput> | product_detailsCreateWithoutProduct_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_categoryInput | product_detailsCreateOrConnectWithoutProduct_categoryInput[]
    upsert?: product_detailsUpsertWithWhereUniqueWithoutProduct_categoryInput | product_detailsUpsertWithWhereUniqueWithoutProduct_categoryInput[]
    createMany?: product_detailsCreateManyProduct_categoryInputEnvelope
    set?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    disconnect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    delete?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    update?: product_detailsUpdateWithWhereUniqueWithoutProduct_categoryInput | product_detailsUpdateWithWhereUniqueWithoutProduct_categoryInput[]
    updateMany?: product_detailsUpdateManyWithWhereWithoutProduct_categoryInput | product_detailsUpdateManyWithWhereWithoutProduct_categoryInput[]
    deleteMany?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
  }

  export type product_sub_categoryUncheckedUpdateManyWithoutProduct_categoryNestedInput = {
    create?: XOR<product_sub_categoryCreateWithoutProduct_categoryInput, product_sub_categoryUncheckedCreateWithoutProduct_categoryInput> | product_sub_categoryCreateWithoutProduct_categoryInput[] | product_sub_categoryUncheckedCreateWithoutProduct_categoryInput[]
    connectOrCreate?: product_sub_categoryCreateOrConnectWithoutProduct_categoryInput | product_sub_categoryCreateOrConnectWithoutProduct_categoryInput[]
    upsert?: product_sub_categoryUpsertWithWhereUniqueWithoutProduct_categoryInput | product_sub_categoryUpsertWithWhereUniqueWithoutProduct_categoryInput[]
    createMany?: product_sub_categoryCreateManyProduct_categoryInputEnvelope
    set?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    disconnect?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    delete?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    connect?: product_sub_categoryWhereUniqueInput | product_sub_categoryWhereUniqueInput[]
    update?: product_sub_categoryUpdateWithWhereUniqueWithoutProduct_categoryInput | product_sub_categoryUpdateWithWhereUniqueWithoutProduct_categoryInput[]
    updateMany?: product_sub_categoryUpdateManyWithWhereWithoutProduct_categoryInput | product_sub_categoryUpdateManyWithWhereWithoutProduct_categoryInput[]
    deleteMany?: product_sub_categoryScalarWhereInput | product_sub_categoryScalarWhereInput[]
  }

  export type product_categoryCreateNestedOneWithoutProduct_sub_categoryInput = {
    create?: XOR<product_categoryCreateWithoutProduct_sub_categoryInput, product_categoryUncheckedCreateWithoutProduct_sub_categoryInput>
    connectOrCreate?: product_categoryCreateOrConnectWithoutProduct_sub_categoryInput
    connect?: product_categoryWhereUniqueInput
  }

  export type product_detailsCreateNestedManyWithoutProduct_sub_categoryInput = {
    create?: XOR<product_detailsCreateWithoutProduct_sub_categoryInput, product_detailsUncheckedCreateWithoutProduct_sub_categoryInput> | product_detailsCreateWithoutProduct_sub_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_sub_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_sub_categoryInput | product_detailsCreateOrConnectWithoutProduct_sub_categoryInput[]
    createMany?: product_detailsCreateManyProduct_sub_categoryInputEnvelope
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
  }

  export type product_detailsUncheckedCreateNestedManyWithoutProduct_sub_categoryInput = {
    create?: XOR<product_detailsCreateWithoutProduct_sub_categoryInput, product_detailsUncheckedCreateWithoutProduct_sub_categoryInput> | product_detailsCreateWithoutProduct_sub_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_sub_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_sub_categoryInput | product_detailsCreateOrConnectWithoutProduct_sub_categoryInput[]
    createMany?: product_detailsCreateManyProduct_sub_categoryInputEnvelope
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
  }

  export type product_categoryUpdateOneWithoutProduct_sub_categoryNestedInput = {
    create?: XOR<product_categoryCreateWithoutProduct_sub_categoryInput, product_categoryUncheckedCreateWithoutProduct_sub_categoryInput>
    connectOrCreate?: product_categoryCreateOrConnectWithoutProduct_sub_categoryInput
    upsert?: product_categoryUpsertWithoutProduct_sub_categoryInput
    disconnect?: product_categoryWhereInput | boolean
    delete?: product_categoryWhereInput | boolean
    connect?: product_categoryWhereUniqueInput
    update?: XOR<XOR<product_categoryUpdateToOneWithWhereWithoutProduct_sub_categoryInput, product_categoryUpdateWithoutProduct_sub_categoryInput>, product_categoryUncheckedUpdateWithoutProduct_sub_categoryInput>
  }

  export type product_detailsUpdateManyWithoutProduct_sub_categoryNestedInput = {
    create?: XOR<product_detailsCreateWithoutProduct_sub_categoryInput, product_detailsUncheckedCreateWithoutProduct_sub_categoryInput> | product_detailsCreateWithoutProduct_sub_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_sub_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_sub_categoryInput | product_detailsCreateOrConnectWithoutProduct_sub_categoryInput[]
    upsert?: product_detailsUpsertWithWhereUniqueWithoutProduct_sub_categoryInput | product_detailsUpsertWithWhereUniqueWithoutProduct_sub_categoryInput[]
    createMany?: product_detailsCreateManyProduct_sub_categoryInputEnvelope
    set?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    disconnect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    delete?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    update?: product_detailsUpdateWithWhereUniqueWithoutProduct_sub_categoryInput | product_detailsUpdateWithWhereUniqueWithoutProduct_sub_categoryInput[]
    updateMany?: product_detailsUpdateManyWithWhereWithoutProduct_sub_categoryInput | product_detailsUpdateManyWithWhereWithoutProduct_sub_categoryInput[]
    deleteMany?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
  }

  export type product_detailsUncheckedUpdateManyWithoutProduct_sub_categoryNestedInput = {
    create?: XOR<product_detailsCreateWithoutProduct_sub_categoryInput, product_detailsUncheckedCreateWithoutProduct_sub_categoryInput> | product_detailsCreateWithoutProduct_sub_categoryInput[] | product_detailsUncheckedCreateWithoutProduct_sub_categoryInput[]
    connectOrCreate?: product_detailsCreateOrConnectWithoutProduct_sub_categoryInput | product_detailsCreateOrConnectWithoutProduct_sub_categoryInput[]
    upsert?: product_detailsUpsertWithWhereUniqueWithoutProduct_sub_categoryInput | product_detailsUpsertWithWhereUniqueWithoutProduct_sub_categoryInput[]
    createMany?: product_detailsCreateManyProduct_sub_categoryInputEnvelope
    set?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    disconnect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    delete?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    connect?: product_detailsWhereUniqueInput | product_detailsWhereUniqueInput[]
    update?: product_detailsUpdateWithWhereUniqueWithoutProduct_sub_categoryInput | product_detailsUpdateWithWhereUniqueWithoutProduct_sub_categoryInput[]
    updateMany?: product_detailsUpdateManyWithWhereWithoutProduct_sub_categoryInput | product_detailsUpdateManyWithWhereWithoutProduct_sub_categoryInput[]
    deleteMany?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
  }

  export type companyCreateNestedOneWithoutProduct_detailsInput = {
    create?: XOR<companyCreateWithoutProduct_detailsInput, companyUncheckedCreateWithoutProduct_detailsInput>
    connectOrCreate?: companyCreateOrConnectWithoutProduct_detailsInput
    connect?: companyWhereUniqueInput
  }

  export type product_categoryCreateNestedOneWithoutProduct_detailsInput = {
    create?: XOR<product_categoryCreateWithoutProduct_detailsInput, product_categoryUncheckedCreateWithoutProduct_detailsInput>
    connectOrCreate?: product_categoryCreateOrConnectWithoutProduct_detailsInput
    connect?: product_categoryWhereUniqueInput
  }

  export type product_sub_categoryCreateNestedOneWithoutProduct_detailsInput = {
    create?: XOR<product_sub_categoryCreateWithoutProduct_detailsInput, product_sub_categoryUncheckedCreateWithoutProduct_detailsInput>
    connectOrCreate?: product_sub_categoryCreateOrConnectWithoutProduct_detailsInput
    connect?: product_sub_categoryWhereUniqueInput
  }

  export type cart_detailsCreateNestedManyWithoutProduct_detailsInput = {
    create?: XOR<cart_detailsCreateWithoutProduct_detailsInput, cart_detailsUncheckedCreateWithoutProduct_detailsInput> | cart_detailsCreateWithoutProduct_detailsInput[] | cart_detailsUncheckedCreateWithoutProduct_detailsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutProduct_detailsInput | cart_detailsCreateOrConnectWithoutProduct_detailsInput[]
    createMany?: cart_detailsCreateManyProduct_detailsInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type cart_detailsUncheckedCreateNestedManyWithoutProduct_detailsInput = {
    create?: XOR<cart_detailsCreateWithoutProduct_detailsInput, cart_detailsUncheckedCreateWithoutProduct_detailsInput> | cart_detailsCreateWithoutProduct_detailsInput[] | cart_detailsUncheckedCreateWithoutProduct_detailsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutProduct_detailsInput | cart_detailsCreateOrConnectWithoutProduct_detailsInput[]
    createMany?: cart_detailsCreateManyProduct_detailsInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type companyUpdateOneWithoutProduct_detailsNestedInput = {
    create?: XOR<companyCreateWithoutProduct_detailsInput, companyUncheckedCreateWithoutProduct_detailsInput>
    connectOrCreate?: companyCreateOrConnectWithoutProduct_detailsInput
    upsert?: companyUpsertWithoutProduct_detailsInput
    disconnect?: companyWhereInput | boolean
    delete?: companyWhereInput | boolean
    connect?: companyWhereUniqueInput
    update?: XOR<XOR<companyUpdateToOneWithWhereWithoutProduct_detailsInput, companyUpdateWithoutProduct_detailsInput>, companyUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type product_categoryUpdateOneWithoutProduct_detailsNestedInput = {
    create?: XOR<product_categoryCreateWithoutProduct_detailsInput, product_categoryUncheckedCreateWithoutProduct_detailsInput>
    connectOrCreate?: product_categoryCreateOrConnectWithoutProduct_detailsInput
    upsert?: product_categoryUpsertWithoutProduct_detailsInput
    disconnect?: product_categoryWhereInput | boolean
    delete?: product_categoryWhereInput | boolean
    connect?: product_categoryWhereUniqueInput
    update?: XOR<XOR<product_categoryUpdateToOneWithWhereWithoutProduct_detailsInput, product_categoryUpdateWithoutProduct_detailsInput>, product_categoryUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type product_sub_categoryUpdateOneWithoutProduct_detailsNestedInput = {
    create?: XOR<product_sub_categoryCreateWithoutProduct_detailsInput, product_sub_categoryUncheckedCreateWithoutProduct_detailsInput>
    connectOrCreate?: product_sub_categoryCreateOrConnectWithoutProduct_detailsInput
    upsert?: product_sub_categoryUpsertWithoutProduct_detailsInput
    disconnect?: product_sub_categoryWhereInput | boolean
    delete?: product_sub_categoryWhereInput | boolean
    connect?: product_sub_categoryWhereUniqueInput
    update?: XOR<XOR<product_sub_categoryUpdateToOneWithWhereWithoutProduct_detailsInput, product_sub_categoryUpdateWithoutProduct_detailsInput>, product_sub_categoryUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type cart_detailsUpdateManyWithoutProduct_detailsNestedInput = {
    create?: XOR<cart_detailsCreateWithoutProduct_detailsInput, cart_detailsUncheckedCreateWithoutProduct_detailsInput> | cart_detailsCreateWithoutProduct_detailsInput[] | cart_detailsUncheckedCreateWithoutProduct_detailsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutProduct_detailsInput | cart_detailsCreateOrConnectWithoutProduct_detailsInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutProduct_detailsInput | cart_detailsUpsertWithWhereUniqueWithoutProduct_detailsInput[]
    createMany?: cart_detailsCreateManyProduct_detailsInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutProduct_detailsInput | cart_detailsUpdateWithWhereUniqueWithoutProduct_detailsInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutProduct_detailsInput | cart_detailsUpdateManyWithWhereWithoutProduct_detailsInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type NullableIntFieldUpdateOperationsInput = {
    set?: number | null
    increment?: number
    decrement?: number
    multiply?: number
    divide?: number
  }

  export type cart_detailsUncheckedUpdateManyWithoutProduct_detailsNestedInput = {
    create?: XOR<cart_detailsCreateWithoutProduct_detailsInput, cart_detailsUncheckedCreateWithoutProduct_detailsInput> | cart_detailsCreateWithoutProduct_detailsInput[] | cart_detailsUncheckedCreateWithoutProduct_detailsInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutProduct_detailsInput | cart_detailsCreateOrConnectWithoutProduct_detailsInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutProduct_detailsInput | cart_detailsUpsertWithWhereUniqueWithoutProduct_detailsInput[]
    createMany?: cart_detailsCreateManyProduct_detailsInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutProduct_detailsInput | cart_detailsUpdateWithWhereUniqueWithoutProduct_detailsInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutProduct_detailsInput | cart_detailsUpdateManyWithWhereWithoutProduct_detailsInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type StringFieldUpdateOperationsInput = {
    set?: string
  }

  export type DateTimeFieldUpdateOperationsInput = {
    set?: Date | string
  }

  export type product_detailsCreateNestedOneWithoutCart_detailsInput = {
    create?: XOR<product_detailsCreateWithoutCart_detailsInput, product_detailsUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: product_detailsCreateOrConnectWithoutCart_detailsInput
    connect?: product_detailsWhereUniqueInput
  }

  export type buy_nowCreateNestedManyWithoutCart_detailsInput = {
    create?: XOR<buy_nowCreateWithoutCart_detailsInput, buy_nowUncheckedCreateWithoutCart_detailsInput> | buy_nowCreateWithoutCart_detailsInput[] | buy_nowUncheckedCreateWithoutCart_detailsInput[]
    connectOrCreate?: buy_nowCreateOrConnectWithoutCart_detailsInput | buy_nowCreateOrConnectWithoutCart_detailsInput[]
    createMany?: buy_nowCreateManyCart_detailsInputEnvelope
    connect?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
  }

  export type user_addressCreateNestedOneWithoutCart_detailsInput = {
    create?: XOR<user_addressCreateWithoutCart_detailsInput, user_addressUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: user_addressCreateOrConnectWithoutCart_detailsInput
    connect?: user_addressWhereUniqueInput
  }

  export type buy_nowUncheckedCreateNestedManyWithoutCart_detailsInput = {
    create?: XOR<buy_nowCreateWithoutCart_detailsInput, buy_nowUncheckedCreateWithoutCart_detailsInput> | buy_nowCreateWithoutCart_detailsInput[] | buy_nowUncheckedCreateWithoutCart_detailsInput[]
    connectOrCreate?: buy_nowCreateOrConnectWithoutCart_detailsInput | buy_nowCreateOrConnectWithoutCart_detailsInput[]
    createMany?: buy_nowCreateManyCart_detailsInputEnvelope
    connect?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
  }

  export type product_detailsUpdateOneWithoutCart_detailsNestedInput = {
    create?: XOR<product_detailsCreateWithoutCart_detailsInput, product_detailsUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: product_detailsCreateOrConnectWithoutCart_detailsInput
    upsert?: product_detailsUpsertWithoutCart_detailsInput
    disconnect?: product_detailsWhereInput | boolean
    delete?: product_detailsWhereInput | boolean
    connect?: product_detailsWhereUniqueInput
    update?: XOR<XOR<product_detailsUpdateToOneWithWhereWithoutCart_detailsInput, product_detailsUpdateWithoutCart_detailsInput>, product_detailsUncheckedUpdateWithoutCart_detailsInput>
  }

  export type buy_nowUpdateManyWithoutCart_detailsNestedInput = {
    create?: XOR<buy_nowCreateWithoutCart_detailsInput, buy_nowUncheckedCreateWithoutCart_detailsInput> | buy_nowCreateWithoutCart_detailsInput[] | buy_nowUncheckedCreateWithoutCart_detailsInput[]
    connectOrCreate?: buy_nowCreateOrConnectWithoutCart_detailsInput | buy_nowCreateOrConnectWithoutCart_detailsInput[]
    upsert?: buy_nowUpsertWithWhereUniqueWithoutCart_detailsInput | buy_nowUpsertWithWhereUniqueWithoutCart_detailsInput[]
    createMany?: buy_nowCreateManyCart_detailsInputEnvelope
    set?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    disconnect?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    delete?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    connect?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    update?: buy_nowUpdateWithWhereUniqueWithoutCart_detailsInput | buy_nowUpdateWithWhereUniqueWithoutCart_detailsInput[]
    updateMany?: buy_nowUpdateManyWithWhereWithoutCart_detailsInput | buy_nowUpdateManyWithWhereWithoutCart_detailsInput[]
    deleteMany?: buy_nowScalarWhereInput | buy_nowScalarWhereInput[]
  }

  export type user_addressUpdateOneWithoutCart_detailsNestedInput = {
    create?: XOR<user_addressCreateWithoutCart_detailsInput, user_addressUncheckedCreateWithoutCart_detailsInput>
    connectOrCreate?: user_addressCreateOrConnectWithoutCart_detailsInput
    upsert?: user_addressUpsertWithoutCart_detailsInput
    disconnect?: user_addressWhereInput | boolean
    delete?: user_addressWhereInput | boolean
    connect?: user_addressWhereUniqueInput
    update?: XOR<XOR<user_addressUpdateToOneWithWhereWithoutCart_detailsInput, user_addressUpdateWithoutCart_detailsInput>, user_addressUncheckedUpdateWithoutCart_detailsInput>
  }

  export type buy_nowUncheckedUpdateManyWithoutCart_detailsNestedInput = {
    create?: XOR<buy_nowCreateWithoutCart_detailsInput, buy_nowUncheckedCreateWithoutCart_detailsInput> | buy_nowCreateWithoutCart_detailsInput[] | buy_nowUncheckedCreateWithoutCart_detailsInput[]
    connectOrCreate?: buy_nowCreateOrConnectWithoutCart_detailsInput | buy_nowCreateOrConnectWithoutCart_detailsInput[]
    upsert?: buy_nowUpsertWithWhereUniqueWithoutCart_detailsInput | buy_nowUpsertWithWhereUniqueWithoutCart_detailsInput[]
    createMany?: buy_nowCreateManyCart_detailsInputEnvelope
    set?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    disconnect?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    delete?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    connect?: buy_nowWhereUniqueInput | buy_nowWhereUniqueInput[]
    update?: buy_nowUpdateWithWhereUniqueWithoutCart_detailsInput | buy_nowUpdateWithWhereUniqueWithoutCart_detailsInput[]
    updateMany?: buy_nowUpdateManyWithWhereWithoutCart_detailsInput | buy_nowUpdateManyWithWhereWithoutCart_detailsInput[]
    deleteMany?: buy_nowScalarWhereInput | buy_nowScalarWhereInput[]
  }

  export type cart_detailsCreateNestedOneWithoutBuy_nowInput = {
    create?: XOR<cart_detailsCreateWithoutBuy_nowInput, cart_detailsUncheckedCreateWithoutBuy_nowInput>
    connectOrCreate?: cart_detailsCreateOrConnectWithoutBuy_nowInput
    connect?: cart_detailsWhereUniqueInput
  }

  export type cart_detailsUpdateOneWithoutBuy_nowNestedInput = {
    create?: XOR<cart_detailsCreateWithoutBuy_nowInput, cart_detailsUncheckedCreateWithoutBuy_nowInput>
    connectOrCreate?: cart_detailsCreateOrConnectWithoutBuy_nowInput
    upsert?: cart_detailsUpsertWithoutBuy_nowInput
    disconnect?: cart_detailsWhereInput | boolean
    delete?: cart_detailsWhereInput | boolean
    connect?: cart_detailsWhereUniqueInput
    update?: XOR<XOR<cart_detailsUpdateToOneWithWhereWithoutBuy_nowInput, cart_detailsUpdateWithoutBuy_nowInput>, cart_detailsUncheckedUpdateWithoutBuy_nowInput>
  }

  export type cart_detailsCreateNestedManyWithoutUser_addressInput = {
    create?: XOR<cart_detailsCreateWithoutUser_addressInput, cart_detailsUncheckedCreateWithoutUser_addressInput> | cart_detailsCreateWithoutUser_addressInput[] | cart_detailsUncheckedCreateWithoutUser_addressInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutUser_addressInput | cart_detailsCreateOrConnectWithoutUser_addressInput[]
    createMany?: cart_detailsCreateManyUser_addressInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type cart_detailsUncheckedCreateNestedManyWithoutUser_addressInput = {
    create?: XOR<cart_detailsCreateWithoutUser_addressInput, cart_detailsUncheckedCreateWithoutUser_addressInput> | cart_detailsCreateWithoutUser_addressInput[] | cart_detailsUncheckedCreateWithoutUser_addressInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutUser_addressInput | cart_detailsCreateOrConnectWithoutUser_addressInput[]
    createMany?: cart_detailsCreateManyUser_addressInputEnvelope
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
  }

  export type cart_detailsUpdateManyWithoutUser_addressNestedInput = {
    create?: XOR<cart_detailsCreateWithoutUser_addressInput, cart_detailsUncheckedCreateWithoutUser_addressInput> | cart_detailsCreateWithoutUser_addressInput[] | cart_detailsUncheckedCreateWithoutUser_addressInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutUser_addressInput | cart_detailsCreateOrConnectWithoutUser_addressInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutUser_addressInput | cart_detailsUpsertWithWhereUniqueWithoutUser_addressInput[]
    createMany?: cart_detailsCreateManyUser_addressInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutUser_addressInput | cart_detailsUpdateWithWhereUniqueWithoutUser_addressInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutUser_addressInput | cart_detailsUpdateManyWithWhereWithoutUser_addressInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type cart_detailsUncheckedUpdateManyWithoutUser_addressNestedInput = {
    create?: XOR<cart_detailsCreateWithoutUser_addressInput, cart_detailsUncheckedCreateWithoutUser_addressInput> | cart_detailsCreateWithoutUser_addressInput[] | cart_detailsUncheckedCreateWithoutUser_addressInput[]
    connectOrCreate?: cart_detailsCreateOrConnectWithoutUser_addressInput | cart_detailsCreateOrConnectWithoutUser_addressInput[]
    upsert?: cart_detailsUpsertWithWhereUniqueWithoutUser_addressInput | cart_detailsUpsertWithWhereUniqueWithoutUser_addressInput[]
    createMany?: cart_detailsCreateManyUser_addressInputEnvelope
    set?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    disconnect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    delete?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    connect?: cart_detailsWhereUniqueInput | cart_detailsWhereUniqueInput[]
    update?: cart_detailsUpdateWithWhereUniqueWithoutUser_addressInput | cart_detailsUpdateWithWhereUniqueWithoutUser_addressInput[]
    updateMany?: cart_detailsUpdateManyWithWhereWithoutUser_addressInput | cart_detailsUpdateManyWithWhereWithoutUser_addressInput[]
    deleteMany?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
  }

  export type NestedIntFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntFilter<$PrismaModel> | number
  }

  export type NestedStringNullableFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableFilter<$PrismaModel> | string | null
  }

  export type NestedIntWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntWithAggregatesFilter<$PrismaModel> | number
    _count?: NestedIntFilter<$PrismaModel>
    _avg?: NestedFloatFilter<$PrismaModel>
    _sum?: NestedIntFilter<$PrismaModel>
    _min?: NestedIntFilter<$PrismaModel>
    _max?: NestedIntFilter<$PrismaModel>
  }

  export type NestedFloatFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel>
    in?: number[]
    notIn?: number[]
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatFilter<$PrismaModel> | number
  }

  export type NestedStringNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel> | null
    in?: string[] | null
    notIn?: string[] | null
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringNullableWithAggregatesFilter<$PrismaModel> | string | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedStringNullableFilter<$PrismaModel>
    _max?: NestedStringNullableFilter<$PrismaModel>
  }

  export type NestedIntNullableFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableFilter<$PrismaModel> | number | null
  }

  export type NestedIntNullableWithAggregatesFilter<$PrismaModel = never> = {
    equals?: number | IntFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | IntFieldRefInput<$PrismaModel>
    lte?: number | IntFieldRefInput<$PrismaModel>
    gt?: number | IntFieldRefInput<$PrismaModel>
    gte?: number | IntFieldRefInput<$PrismaModel>
    not?: NestedIntNullableWithAggregatesFilter<$PrismaModel> | number | null
    _count?: NestedIntNullableFilter<$PrismaModel>
    _avg?: NestedFloatNullableFilter<$PrismaModel>
    _sum?: NestedIntNullableFilter<$PrismaModel>
    _min?: NestedIntNullableFilter<$PrismaModel>
    _max?: NestedIntNullableFilter<$PrismaModel>
  }

  export type NestedFloatNullableFilter<$PrismaModel = never> = {
    equals?: number | FloatFieldRefInput<$PrismaModel> | null
    in?: number[] | null
    notIn?: number[] | null
    lt?: number | FloatFieldRefInput<$PrismaModel>
    lte?: number | FloatFieldRefInput<$PrismaModel>
    gt?: number | FloatFieldRefInput<$PrismaModel>
    gte?: number | FloatFieldRefInput<$PrismaModel>
    not?: NestedFloatNullableFilter<$PrismaModel> | number | null
  }

  export type NestedStringFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringFilter<$PrismaModel> | string
  }

  export type NestedDateTimeFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeFilter<$PrismaModel> | Date | string
  }

  export type NestedStringWithAggregatesFilter<$PrismaModel = never> = {
    equals?: string | StringFieldRefInput<$PrismaModel>
    in?: string[]
    notIn?: string[]
    lt?: string | StringFieldRefInput<$PrismaModel>
    lte?: string | StringFieldRefInput<$PrismaModel>
    gt?: string | StringFieldRefInput<$PrismaModel>
    gte?: string | StringFieldRefInput<$PrismaModel>
    contains?: string | StringFieldRefInput<$PrismaModel>
    startsWith?: string | StringFieldRefInput<$PrismaModel>
    endsWith?: string | StringFieldRefInput<$PrismaModel>
    not?: NestedStringWithAggregatesFilter<$PrismaModel> | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedStringFilter<$PrismaModel>
    _max?: NestedStringFilter<$PrismaModel>
  }

  export type NestedDateTimeWithAggregatesFilter<$PrismaModel = never> = {
    equals?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    in?: Date[] | string[]
    notIn?: Date[] | string[]
    lt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    lte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gt?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    gte?: Date | string | DateTimeFieldRefInput<$PrismaModel>
    not?: NestedDateTimeWithAggregatesFilter<$PrismaModel> | Date | string
    _count?: NestedIntFilter<$PrismaModel>
    _min?: NestedDateTimeFilter<$PrismaModel>
    _max?: NestedDateTimeFilter<$PrismaModel>
  }

  export type product_detailsCreateWithoutCompanyInput = {
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    product_category?: product_categoryCreateNestedOneWithoutProduct_detailsInput
    product_sub_category?: product_sub_categoryCreateNestedOneWithoutProduct_detailsInput
    cart_details?: cart_detailsCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsUncheckedCreateWithoutCompanyInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    product_category_id?: number | null
    product_sub_category_id?: number | null
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsCreateOrConnectWithoutCompanyInput = {
    where: product_detailsWhereUniqueInput
    create: XOR<product_detailsCreateWithoutCompanyInput, product_detailsUncheckedCreateWithoutCompanyInput>
  }

  export type product_detailsCreateManyCompanyInputEnvelope = {
    data: product_detailsCreateManyCompanyInput | product_detailsCreateManyCompanyInput[]
    skipDuplicates?: boolean
  }

  export type product_detailsUpsertWithWhereUniqueWithoutCompanyInput = {
    where: product_detailsWhereUniqueInput
    update: XOR<product_detailsUpdateWithoutCompanyInput, product_detailsUncheckedUpdateWithoutCompanyInput>
    create: XOR<product_detailsCreateWithoutCompanyInput, product_detailsUncheckedCreateWithoutCompanyInput>
  }

  export type product_detailsUpdateWithWhereUniqueWithoutCompanyInput = {
    where: product_detailsWhereUniqueInput
    data: XOR<product_detailsUpdateWithoutCompanyInput, product_detailsUncheckedUpdateWithoutCompanyInput>
  }

  export type product_detailsUpdateManyWithWhereWithoutCompanyInput = {
    where: product_detailsScalarWhereInput
    data: XOR<product_detailsUpdateManyMutationInput, product_detailsUncheckedUpdateManyWithoutCompanyInput>
  }

  export type product_detailsScalarWhereInput = {
    AND?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
    OR?: product_detailsScalarWhereInput[]
    NOT?: product_detailsScalarWhereInput | product_detailsScalarWhereInput[]
    id?: IntFilter<"product_details"> | number
    product_name?: StringNullableFilter<"product_details"> | string | null
    product_image_url?: StringNullableFilter<"product_details"> | string | null
    product_description?: StringNullableFilter<"product_details"> | string | null
    product_price?: StringNullableFilter<"product_details"> | string | null
    company_id?: IntNullableFilter<"product_details"> | number | null
    product_category_id?: IntNullableFilter<"product_details"> | number | null
    product_sub_category_id?: IntNullableFilter<"product_details"> | number | null
  }

  export type product_detailsCreateWithoutProduct_categoryInput = {
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company?: companyCreateNestedOneWithoutProduct_detailsInput
    product_sub_category?: product_sub_categoryCreateNestedOneWithoutProduct_detailsInput
    cart_details?: cart_detailsCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsUncheckedCreateWithoutProduct_categoryInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_sub_category_id?: number | null
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsCreateOrConnectWithoutProduct_categoryInput = {
    where: product_detailsWhereUniqueInput
    create: XOR<product_detailsCreateWithoutProduct_categoryInput, product_detailsUncheckedCreateWithoutProduct_categoryInput>
  }

  export type product_detailsCreateManyProduct_categoryInputEnvelope = {
    data: product_detailsCreateManyProduct_categoryInput | product_detailsCreateManyProduct_categoryInput[]
    skipDuplicates?: boolean
  }

  export type product_sub_categoryCreateWithoutProduct_categoryInput = {
    product_sub_category_name?: string | null
    product_details?: product_detailsCreateNestedManyWithoutProduct_sub_categoryInput
  }

  export type product_sub_categoryUncheckedCreateWithoutProduct_categoryInput = {
    id?: number
    product_sub_category_name?: string | null
    product_details?: product_detailsUncheckedCreateNestedManyWithoutProduct_sub_categoryInput
  }

  export type product_sub_categoryCreateOrConnectWithoutProduct_categoryInput = {
    where: product_sub_categoryWhereUniqueInput
    create: XOR<product_sub_categoryCreateWithoutProduct_categoryInput, product_sub_categoryUncheckedCreateWithoutProduct_categoryInput>
  }

  export type product_sub_categoryCreateManyProduct_categoryInputEnvelope = {
    data: product_sub_categoryCreateManyProduct_categoryInput | product_sub_categoryCreateManyProduct_categoryInput[]
    skipDuplicates?: boolean
  }

  export type product_detailsUpsertWithWhereUniqueWithoutProduct_categoryInput = {
    where: product_detailsWhereUniqueInput
    update: XOR<product_detailsUpdateWithoutProduct_categoryInput, product_detailsUncheckedUpdateWithoutProduct_categoryInput>
    create: XOR<product_detailsCreateWithoutProduct_categoryInput, product_detailsUncheckedCreateWithoutProduct_categoryInput>
  }

  export type product_detailsUpdateWithWhereUniqueWithoutProduct_categoryInput = {
    where: product_detailsWhereUniqueInput
    data: XOR<product_detailsUpdateWithoutProduct_categoryInput, product_detailsUncheckedUpdateWithoutProduct_categoryInput>
  }

  export type product_detailsUpdateManyWithWhereWithoutProduct_categoryInput = {
    where: product_detailsScalarWhereInput
    data: XOR<product_detailsUpdateManyMutationInput, product_detailsUncheckedUpdateManyWithoutProduct_categoryInput>
  }

  export type product_sub_categoryUpsertWithWhereUniqueWithoutProduct_categoryInput = {
    where: product_sub_categoryWhereUniqueInput
    update: XOR<product_sub_categoryUpdateWithoutProduct_categoryInput, product_sub_categoryUncheckedUpdateWithoutProduct_categoryInput>
    create: XOR<product_sub_categoryCreateWithoutProduct_categoryInput, product_sub_categoryUncheckedCreateWithoutProduct_categoryInput>
  }

  export type product_sub_categoryUpdateWithWhereUniqueWithoutProduct_categoryInput = {
    where: product_sub_categoryWhereUniqueInput
    data: XOR<product_sub_categoryUpdateWithoutProduct_categoryInput, product_sub_categoryUncheckedUpdateWithoutProduct_categoryInput>
  }

  export type product_sub_categoryUpdateManyWithWhereWithoutProduct_categoryInput = {
    where: product_sub_categoryScalarWhereInput
    data: XOR<product_sub_categoryUpdateManyMutationInput, product_sub_categoryUncheckedUpdateManyWithoutProduct_categoryInput>
  }

  export type product_sub_categoryScalarWhereInput = {
    AND?: product_sub_categoryScalarWhereInput | product_sub_categoryScalarWhereInput[]
    OR?: product_sub_categoryScalarWhereInput[]
    NOT?: product_sub_categoryScalarWhereInput | product_sub_categoryScalarWhereInput[]
    id?: IntFilter<"product_sub_category"> | number
    product_category_id?: IntFilter<"product_sub_category"> | number
    product_sub_category_name?: StringNullableFilter<"product_sub_category"> | string | null
  }

  export type product_categoryCreateWithoutProduct_sub_categoryInput = {
    product_category_name?: string | null
    product_details?: product_detailsCreateNestedManyWithoutProduct_categoryInput
  }

  export type product_categoryUncheckedCreateWithoutProduct_sub_categoryInput = {
    id?: number
    product_category_name?: string | null
    product_details?: product_detailsUncheckedCreateNestedManyWithoutProduct_categoryInput
  }

  export type product_categoryCreateOrConnectWithoutProduct_sub_categoryInput = {
    where: product_categoryWhereUniqueInput
    create: XOR<product_categoryCreateWithoutProduct_sub_categoryInput, product_categoryUncheckedCreateWithoutProduct_sub_categoryInput>
  }

  export type product_detailsCreateWithoutProduct_sub_categoryInput = {
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company?: companyCreateNestedOneWithoutProduct_detailsInput
    product_category?: product_categoryCreateNestedOneWithoutProduct_detailsInput
    cart_details?: cart_detailsCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsUncheckedCreateWithoutProduct_sub_categoryInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_category_id?: number | null
    cart_details?: cart_detailsUncheckedCreateNestedManyWithoutProduct_detailsInput
  }

  export type product_detailsCreateOrConnectWithoutProduct_sub_categoryInput = {
    where: product_detailsWhereUniqueInput
    create: XOR<product_detailsCreateWithoutProduct_sub_categoryInput, product_detailsUncheckedCreateWithoutProduct_sub_categoryInput>
  }

  export type product_detailsCreateManyProduct_sub_categoryInputEnvelope = {
    data: product_detailsCreateManyProduct_sub_categoryInput | product_detailsCreateManyProduct_sub_categoryInput[]
    skipDuplicates?: boolean
  }

  export type product_categoryUpsertWithoutProduct_sub_categoryInput = {
    update: XOR<product_categoryUpdateWithoutProduct_sub_categoryInput, product_categoryUncheckedUpdateWithoutProduct_sub_categoryInput>
    create: XOR<product_categoryCreateWithoutProduct_sub_categoryInput, product_categoryUncheckedCreateWithoutProduct_sub_categoryInput>
    where?: product_categoryWhereInput
  }

  export type product_categoryUpdateToOneWithWhereWithoutProduct_sub_categoryInput = {
    where?: product_categoryWhereInput
    data: XOR<product_categoryUpdateWithoutProduct_sub_categoryInput, product_categoryUncheckedUpdateWithoutProduct_sub_categoryInput>
  }

  export type product_categoryUpdateWithoutProduct_sub_categoryInput = {
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUpdateManyWithoutProduct_categoryNestedInput
  }

  export type product_categoryUncheckedUpdateWithoutProduct_sub_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUncheckedUpdateManyWithoutProduct_categoryNestedInput
  }

  export type product_detailsUpsertWithWhereUniqueWithoutProduct_sub_categoryInput = {
    where: product_detailsWhereUniqueInput
    update: XOR<product_detailsUpdateWithoutProduct_sub_categoryInput, product_detailsUncheckedUpdateWithoutProduct_sub_categoryInput>
    create: XOR<product_detailsCreateWithoutProduct_sub_categoryInput, product_detailsUncheckedCreateWithoutProduct_sub_categoryInput>
  }

  export type product_detailsUpdateWithWhereUniqueWithoutProduct_sub_categoryInput = {
    where: product_detailsWhereUniqueInput
    data: XOR<product_detailsUpdateWithoutProduct_sub_categoryInput, product_detailsUncheckedUpdateWithoutProduct_sub_categoryInput>
  }

  export type product_detailsUpdateManyWithWhereWithoutProduct_sub_categoryInput = {
    where: product_detailsScalarWhereInput
    data: XOR<product_detailsUpdateManyMutationInput, product_detailsUncheckedUpdateManyWithoutProduct_sub_categoryInput>
  }

  export type companyCreateWithoutProduct_detailsInput = {
    company_name?: string | null
  }

  export type companyUncheckedCreateWithoutProduct_detailsInput = {
    id?: number
    company_name?: string | null
  }

  export type companyCreateOrConnectWithoutProduct_detailsInput = {
    where: companyWhereUniqueInput
    create: XOR<companyCreateWithoutProduct_detailsInput, companyUncheckedCreateWithoutProduct_detailsInput>
  }

  export type product_categoryCreateWithoutProduct_detailsInput = {
    product_category_name?: string | null
    product_sub_category?: product_sub_categoryCreateNestedManyWithoutProduct_categoryInput
  }

  export type product_categoryUncheckedCreateWithoutProduct_detailsInput = {
    id?: number
    product_category_name?: string | null
    product_sub_category?: product_sub_categoryUncheckedCreateNestedManyWithoutProduct_categoryInput
  }

  export type product_categoryCreateOrConnectWithoutProduct_detailsInput = {
    where: product_categoryWhereUniqueInput
    create: XOR<product_categoryCreateWithoutProduct_detailsInput, product_categoryUncheckedCreateWithoutProduct_detailsInput>
  }

  export type product_sub_categoryCreateWithoutProduct_detailsInput = {
    product_sub_category_name?: string | null
    product_category?: product_categoryCreateNestedOneWithoutProduct_sub_categoryInput
  }

  export type product_sub_categoryUncheckedCreateWithoutProduct_detailsInput = {
    id?: number
    product_category_id: number
    product_sub_category_name?: string | null
  }

  export type product_sub_categoryCreateOrConnectWithoutProduct_detailsInput = {
    where: product_sub_categoryWhereUniqueInput
    create: XOR<product_sub_categoryCreateWithoutProduct_detailsInput, product_sub_categoryUncheckedCreateWithoutProduct_detailsInput>
  }

  export type cart_detailsCreateWithoutProduct_detailsInput = {
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    buy_now?: buy_nowCreateNestedManyWithoutCart_detailsInput
    user_address?: user_addressCreateNestedOneWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateWithoutProduct_detailsInput = {
    id?: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    userAddressId?: number | null
    buy_now?: buy_nowUncheckedCreateNestedManyWithoutCart_detailsInput
  }

  export type cart_detailsCreateOrConnectWithoutProduct_detailsInput = {
    where: cart_detailsWhereUniqueInput
    create: XOR<cart_detailsCreateWithoutProduct_detailsInput, cart_detailsUncheckedCreateWithoutProduct_detailsInput>
  }

  export type cart_detailsCreateManyProduct_detailsInputEnvelope = {
    data: cart_detailsCreateManyProduct_detailsInput | cart_detailsCreateManyProduct_detailsInput[]
    skipDuplicates?: boolean
  }

  export type companyUpsertWithoutProduct_detailsInput = {
    update: XOR<companyUpdateWithoutProduct_detailsInput, companyUncheckedUpdateWithoutProduct_detailsInput>
    create: XOR<companyCreateWithoutProduct_detailsInput, companyUncheckedCreateWithoutProduct_detailsInput>
    where?: companyWhereInput
  }

  export type companyUpdateToOneWithWhereWithoutProduct_detailsInput = {
    where?: companyWhereInput
    data: XOR<companyUpdateWithoutProduct_detailsInput, companyUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type companyUpdateWithoutProduct_detailsInput = {
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type companyUncheckedUpdateWithoutProduct_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    company_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_categoryUpsertWithoutProduct_detailsInput = {
    update: XOR<product_categoryUpdateWithoutProduct_detailsInput, product_categoryUncheckedUpdateWithoutProduct_detailsInput>
    create: XOR<product_categoryCreateWithoutProduct_detailsInput, product_categoryUncheckedCreateWithoutProduct_detailsInput>
    where?: product_categoryWhereInput
  }

  export type product_categoryUpdateToOneWithWhereWithoutProduct_detailsInput = {
    where?: product_categoryWhereInput
    data: XOR<product_categoryUpdateWithoutProduct_detailsInput, product_categoryUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type product_categoryUpdateWithoutProduct_detailsInput = {
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_sub_category?: product_sub_categoryUpdateManyWithoutProduct_categoryNestedInput
  }

  export type product_categoryUncheckedUpdateWithoutProduct_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_sub_category?: product_sub_categoryUncheckedUpdateManyWithoutProduct_categoryNestedInput
  }

  export type product_sub_categoryUpsertWithoutProduct_detailsInput = {
    update: XOR<product_sub_categoryUpdateWithoutProduct_detailsInput, product_sub_categoryUncheckedUpdateWithoutProduct_detailsInput>
    create: XOR<product_sub_categoryCreateWithoutProduct_detailsInput, product_sub_categoryUncheckedCreateWithoutProduct_detailsInput>
    where?: product_sub_categoryWhereInput
  }

  export type product_sub_categoryUpdateToOneWithWhereWithoutProduct_detailsInput = {
    where?: product_sub_categoryWhereInput
    data: XOR<product_sub_categoryUpdateWithoutProduct_detailsInput, product_sub_categoryUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type product_sub_categoryUpdateWithoutProduct_detailsInput = {
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_category?: product_categoryUpdateOneWithoutProduct_sub_categoryNestedInput
  }

  export type product_sub_categoryUncheckedUpdateWithoutProduct_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_category_id?: IntFieldUpdateOperationsInput | number
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type cart_detailsUpsertWithWhereUniqueWithoutProduct_detailsInput = {
    where: cart_detailsWhereUniqueInput
    update: XOR<cart_detailsUpdateWithoutProduct_detailsInput, cart_detailsUncheckedUpdateWithoutProduct_detailsInput>
    create: XOR<cart_detailsCreateWithoutProduct_detailsInput, cart_detailsUncheckedCreateWithoutProduct_detailsInput>
  }

  export type cart_detailsUpdateWithWhereUniqueWithoutProduct_detailsInput = {
    where: cart_detailsWhereUniqueInput
    data: XOR<cart_detailsUpdateWithoutProduct_detailsInput, cart_detailsUncheckedUpdateWithoutProduct_detailsInput>
  }

  export type cart_detailsUpdateManyWithWhereWithoutProduct_detailsInput = {
    where: cart_detailsScalarWhereInput
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyWithoutProduct_detailsInput>
  }

  export type cart_detailsScalarWhereInput = {
    AND?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
    OR?: cart_detailsScalarWhereInput[]
    NOT?: cart_detailsScalarWhereInput | cart_detailsScalarWhereInput[]
    id?: IntFilter<"cart_details"> | number
    product_id?: IntFilter<"cart_details"> | number
    price?: IntFilter<"cart_details"> | number
    quantity?: IntFilter<"cart_details"> | number
    total_amount?: IntFilter<"cart_details"> | number
    userId?: IntNullableFilter<"cart_details"> | number | null
    userAddressId?: IntNullableFilter<"cart_details"> | number | null
  }

  export type product_detailsCreateWithoutCart_detailsInput = {
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company?: companyCreateNestedOneWithoutProduct_detailsInput
    product_category?: product_categoryCreateNestedOneWithoutProduct_detailsInput
    product_sub_category?: product_sub_categoryCreateNestedOneWithoutProduct_detailsInput
  }

  export type product_detailsUncheckedCreateWithoutCart_detailsInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_category_id?: number | null
    product_sub_category_id?: number | null
  }

  export type product_detailsCreateOrConnectWithoutCart_detailsInput = {
    where: product_detailsWhereUniqueInput
    create: XOR<product_detailsCreateWithoutCart_detailsInput, product_detailsUncheckedCreateWithoutCart_detailsInput>
  }

  export type buy_nowCreateWithoutCart_detailsInput = {
    total_amount: number
  }

  export type buy_nowUncheckedCreateWithoutCart_detailsInput = {
    id?: number
    total_amount: number
  }

  export type buy_nowCreateOrConnectWithoutCart_detailsInput = {
    where: buy_nowWhereUniqueInput
    create: XOR<buy_nowCreateWithoutCart_detailsInput, buy_nowUncheckedCreateWithoutCart_detailsInput>
  }

  export type buy_nowCreateManyCart_detailsInputEnvelope = {
    data: buy_nowCreateManyCart_detailsInput | buy_nowCreateManyCart_detailsInput[]
    skipDuplicates?: boolean
  }

  export type user_addressCreateWithoutCart_detailsInput = {
    house_number: string
    society_name: string
    landmark: string
    pincode: number
    state: string
    city: string
  }

  export type user_addressUncheckedCreateWithoutCart_detailsInput = {
    id?: number
    house_number: string
    society_name: string
    landmark: string
    pincode: number
    state: string
    city: string
  }

  export type user_addressCreateOrConnectWithoutCart_detailsInput = {
    where: user_addressWhereUniqueInput
    create: XOR<user_addressCreateWithoutCart_detailsInput, user_addressUncheckedCreateWithoutCart_detailsInput>
  }

  export type product_detailsUpsertWithoutCart_detailsInput = {
    update: XOR<product_detailsUpdateWithoutCart_detailsInput, product_detailsUncheckedUpdateWithoutCart_detailsInput>
    create: XOR<product_detailsCreateWithoutCart_detailsInput, product_detailsUncheckedCreateWithoutCart_detailsInput>
    where?: product_detailsWhereInput
  }

  export type product_detailsUpdateToOneWithWhereWithoutCart_detailsInput = {
    where?: product_detailsWhereInput
    data: XOR<product_detailsUpdateWithoutCart_detailsInput, product_detailsUncheckedUpdateWithoutCart_detailsInput>
  }

  export type product_detailsUpdateWithoutCart_detailsInput = {
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company?: companyUpdateOneWithoutProduct_detailsNestedInput
    product_category?: product_categoryUpdateOneWithoutProduct_detailsNestedInput
    product_sub_category?: product_sub_categoryUpdateOneWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateWithoutCart_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type buy_nowUpsertWithWhereUniqueWithoutCart_detailsInput = {
    where: buy_nowWhereUniqueInput
    update: XOR<buy_nowUpdateWithoutCart_detailsInput, buy_nowUncheckedUpdateWithoutCart_detailsInput>
    create: XOR<buy_nowCreateWithoutCart_detailsInput, buy_nowUncheckedCreateWithoutCart_detailsInput>
  }

  export type buy_nowUpdateWithWhereUniqueWithoutCart_detailsInput = {
    where: buy_nowWhereUniqueInput
    data: XOR<buy_nowUpdateWithoutCart_detailsInput, buy_nowUncheckedUpdateWithoutCart_detailsInput>
  }

  export type buy_nowUpdateManyWithWhereWithoutCart_detailsInput = {
    where: buy_nowScalarWhereInput
    data: XOR<buy_nowUpdateManyMutationInput, buy_nowUncheckedUpdateManyWithoutCart_detailsInput>
  }

  export type buy_nowScalarWhereInput = {
    AND?: buy_nowScalarWhereInput | buy_nowScalarWhereInput[]
    OR?: buy_nowScalarWhereInput[]
    NOT?: buy_nowScalarWhereInput | buy_nowScalarWhereInput[]
    id?: IntFilter<"buy_now"> | number
    cart_id?: IntFilter<"buy_now"> | number
    total_amount?: IntFilter<"buy_now"> | number
  }

  export type user_addressUpsertWithoutCart_detailsInput = {
    update: XOR<user_addressUpdateWithoutCart_detailsInput, user_addressUncheckedUpdateWithoutCart_detailsInput>
    create: XOR<user_addressCreateWithoutCart_detailsInput, user_addressUncheckedCreateWithoutCart_detailsInput>
    where?: user_addressWhereInput
  }

  export type user_addressUpdateToOneWithWhereWithoutCart_detailsInput = {
    where?: user_addressWhereInput
    data: XOR<user_addressUpdateWithoutCart_detailsInput, user_addressUncheckedUpdateWithoutCart_detailsInput>
  }

  export type user_addressUpdateWithoutCart_detailsInput = {
    house_number?: StringFieldUpdateOperationsInput | string
    society_name?: StringFieldUpdateOperationsInput | string
    landmark?: StringFieldUpdateOperationsInput | string
    pincode?: IntFieldUpdateOperationsInput | number
    state?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
  }

  export type user_addressUncheckedUpdateWithoutCart_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    house_number?: StringFieldUpdateOperationsInput | string
    society_name?: StringFieldUpdateOperationsInput | string
    landmark?: StringFieldUpdateOperationsInput | string
    pincode?: IntFieldUpdateOperationsInput | number
    state?: StringFieldUpdateOperationsInput | string
    city?: StringFieldUpdateOperationsInput | string
  }

  export type cart_detailsCreateWithoutBuy_nowInput = {
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    product_details?: product_detailsCreateNestedOneWithoutCart_detailsInput
    user_address?: user_addressCreateNestedOneWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateWithoutBuy_nowInput = {
    id?: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    userAddressId?: number | null
  }

  export type cart_detailsCreateOrConnectWithoutBuy_nowInput = {
    where: cart_detailsWhereUniqueInput
    create: XOR<cart_detailsCreateWithoutBuy_nowInput, cart_detailsUncheckedCreateWithoutBuy_nowInput>
  }

  export type cart_detailsUpsertWithoutBuy_nowInput = {
    update: XOR<cart_detailsUpdateWithoutBuy_nowInput, cart_detailsUncheckedUpdateWithoutBuy_nowInput>
    create: XOR<cart_detailsCreateWithoutBuy_nowInput, cart_detailsUncheckedCreateWithoutBuy_nowInput>
    where?: cart_detailsWhereInput
  }

  export type cart_detailsUpdateToOneWithWhereWithoutBuy_nowInput = {
    where?: cart_detailsWhereInput
    data: XOR<cart_detailsUpdateWithoutBuy_nowInput, cart_detailsUncheckedUpdateWithoutBuy_nowInput>
  }

  export type cart_detailsUpdateWithoutBuy_nowInput = {
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    product_details?: product_detailsUpdateOneWithoutCart_detailsNestedInput
    user_address?: user_addressUpdateOneWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateWithoutBuy_nowInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    userAddressId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type cart_detailsCreateWithoutUser_addressInput = {
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    product_details?: product_detailsCreateNestedOneWithoutCart_detailsInput
    buy_now?: buy_nowCreateNestedManyWithoutCart_detailsInput
  }

  export type cart_detailsUncheckedCreateWithoutUser_addressInput = {
    id?: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    buy_now?: buy_nowUncheckedCreateNestedManyWithoutCart_detailsInput
  }

  export type cart_detailsCreateOrConnectWithoutUser_addressInput = {
    where: cart_detailsWhereUniqueInput
    create: XOR<cart_detailsCreateWithoutUser_addressInput, cart_detailsUncheckedCreateWithoutUser_addressInput>
  }

  export type cart_detailsCreateManyUser_addressInputEnvelope = {
    data: cart_detailsCreateManyUser_addressInput | cart_detailsCreateManyUser_addressInput[]
    skipDuplicates?: boolean
  }

  export type cart_detailsUpsertWithWhereUniqueWithoutUser_addressInput = {
    where: cart_detailsWhereUniqueInput
    update: XOR<cart_detailsUpdateWithoutUser_addressInput, cart_detailsUncheckedUpdateWithoutUser_addressInput>
    create: XOR<cart_detailsCreateWithoutUser_addressInput, cart_detailsUncheckedCreateWithoutUser_addressInput>
  }

  export type cart_detailsUpdateWithWhereUniqueWithoutUser_addressInput = {
    where: cart_detailsWhereUniqueInput
    data: XOR<cart_detailsUpdateWithoutUser_addressInput, cart_detailsUncheckedUpdateWithoutUser_addressInput>
  }

  export type cart_detailsUpdateManyWithWhereWithoutUser_addressInput = {
    where: cart_detailsScalarWhereInput
    data: XOR<cart_detailsUpdateManyMutationInput, cart_detailsUncheckedUpdateManyWithoutUser_addressInput>
  }

  export type product_detailsCreateManyCompanyInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    product_category_id?: number | null
    product_sub_category_id?: number | null
  }

  export type product_detailsUpdateWithoutCompanyInput = {
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    product_category?: product_categoryUpdateOneWithoutProduct_detailsNestedInput
    product_sub_category?: product_sub_categoryUpdateOneWithoutProduct_detailsNestedInput
    cart_details?: cart_detailsUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    cart_details?: cart_detailsUncheckedUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateManyWithoutCompanyInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type product_detailsCreateManyProduct_categoryInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_sub_category_id?: number | null
  }

  export type product_sub_categoryCreateManyProduct_categoryInput = {
    id?: number
    product_sub_category_name?: string | null
  }

  export type product_detailsUpdateWithoutProduct_categoryInput = {
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company?: companyUpdateOneWithoutProduct_detailsNestedInput
    product_sub_category?: product_sub_categoryUpdateOneWithoutProduct_detailsNestedInput
    cart_details?: cart_detailsUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateWithoutProduct_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    cart_details?: cart_detailsUncheckedUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateManyWithoutProduct_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_sub_category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type product_sub_categoryUpdateWithoutProduct_categoryInput = {
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUpdateManyWithoutProduct_sub_categoryNestedInput
  }

  export type product_sub_categoryUncheckedUpdateWithoutProduct_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_details?: product_detailsUncheckedUpdateManyWithoutProduct_sub_categoryNestedInput
  }

  export type product_sub_categoryUncheckedUpdateManyWithoutProduct_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_sub_category_name?: NullableStringFieldUpdateOperationsInput | string | null
  }

  export type product_detailsCreateManyProduct_sub_categoryInput = {
    id?: number
    product_name?: string | null
    product_image_url?: string | null
    product_description?: string | null
    product_price?: string | null
    company_id?: number | null
    product_category_id?: number | null
  }

  export type product_detailsUpdateWithoutProduct_sub_categoryInput = {
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company?: companyUpdateOneWithoutProduct_detailsNestedInput
    product_category?: product_categoryUpdateOneWithoutProduct_detailsNestedInput
    cart_details?: cart_detailsUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateWithoutProduct_sub_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
    cart_details?: cart_detailsUncheckedUpdateManyWithoutProduct_detailsNestedInput
  }

  export type product_detailsUncheckedUpdateManyWithoutProduct_sub_categoryInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_name?: NullableStringFieldUpdateOperationsInput | string | null
    product_image_url?: NullableStringFieldUpdateOperationsInput | string | null
    product_description?: NullableStringFieldUpdateOperationsInput | string | null
    product_price?: NullableStringFieldUpdateOperationsInput | string | null
    company_id?: NullableIntFieldUpdateOperationsInput | number | null
    product_category_id?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type cart_detailsCreateManyProduct_detailsInput = {
    id?: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
    userAddressId?: number | null
  }

  export type cart_detailsUpdateWithoutProduct_detailsInput = {
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    buy_now?: buy_nowUpdateManyWithoutCart_detailsNestedInput
    user_address?: user_addressUpdateOneWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateWithoutProduct_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    userAddressId?: NullableIntFieldUpdateOperationsInput | number | null
    buy_now?: buy_nowUncheckedUpdateManyWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateManyWithoutProduct_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    userAddressId?: NullableIntFieldUpdateOperationsInput | number | null
  }

  export type buy_nowCreateManyCart_detailsInput = {
    id?: number
    total_amount: number
  }

  export type buy_nowUpdateWithoutCart_detailsInput = {
    total_amount?: IntFieldUpdateOperationsInput | number
  }

  export type buy_nowUncheckedUpdateWithoutCart_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
  }

  export type buy_nowUncheckedUpdateManyWithoutCart_detailsInput = {
    id?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
  }

  export type cart_detailsCreateManyUser_addressInput = {
    id?: number
    product_id: number
    price: number
    quantity: number
    total_amount: number
    userId?: number | null
  }

  export type cart_detailsUpdateWithoutUser_addressInput = {
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    product_details?: product_detailsUpdateOneWithoutCart_detailsNestedInput
    buy_now?: buy_nowUpdateManyWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateWithoutUser_addressInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
    buy_now?: buy_nowUncheckedUpdateManyWithoutCart_detailsNestedInput
  }

  export type cart_detailsUncheckedUpdateManyWithoutUser_addressInput = {
    id?: IntFieldUpdateOperationsInput | number
    product_id?: IntFieldUpdateOperationsInput | number
    price?: IntFieldUpdateOperationsInput | number
    quantity?: IntFieldUpdateOperationsInput | number
    total_amount?: IntFieldUpdateOperationsInput | number
    userId?: NullableIntFieldUpdateOperationsInput | number | null
  }



  /**
   * Aliases for legacy arg types
   */
    /**
     * @deprecated Use CompanyCountOutputTypeDefaultArgs instead
     */
    export type CompanyCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = CompanyCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Product_categoryCountOutputTypeDefaultArgs instead
     */
    export type Product_categoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Product_categoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Product_sub_categoryCountOutputTypeDefaultArgs instead
     */
    export type Product_sub_categoryCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Product_sub_categoryCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Product_detailsCountOutputTypeDefaultArgs instead
     */
    export type Product_detailsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Product_detailsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use Cart_detailsCountOutputTypeDefaultArgs instead
     */
    export type Cart_detailsCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = Cart_detailsCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use User_addressCountOutputTypeDefaultArgs instead
     */
    export type User_addressCountOutputTypeArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = User_addressCountOutputTypeDefaultArgs<ExtArgs>
    /**
     * @deprecated Use companyDefaultArgs instead
     */
    export type companyArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = companyDefaultArgs<ExtArgs>
    /**
     * @deprecated Use product_categoryDefaultArgs instead
     */
    export type product_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = product_categoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use product_sub_categoryDefaultArgs instead
     */
    export type product_sub_categoryArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = product_sub_categoryDefaultArgs<ExtArgs>
    /**
     * @deprecated Use product_detailsDefaultArgs instead
     */
    export type product_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = product_detailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use registration_detailsDefaultArgs instead
     */
    export type registration_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = registration_detailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use cart_detailsDefaultArgs instead
     */
    export type cart_detailsArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = cart_detailsDefaultArgs<ExtArgs>
    /**
     * @deprecated Use buy_nowDefaultArgs instead
     */
    export type buy_nowArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = buy_nowDefaultArgs<ExtArgs>
    /**
     * @deprecated Use user_addressDefaultArgs instead
     */
    export type user_addressArgs<ExtArgs extends $Extensions.InternalArgs = $Extensions.DefaultArgs> = user_addressDefaultArgs<ExtArgs>

  /**
   * Batch Payload for updateMany & deleteMany & createMany
   */

  export type BatchPayload = {
    count: number
  }

  /**
   * DMMF
   */
  export const dmmf: runtime.BaseDMMF
}